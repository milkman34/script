// ==UserScript==
// @name         deadcode client
// @namespace    http://tampermonkey.net/
// @version       2.0.6
// @author         nuh uh & uzi
// @icon           https://cdn.discordapp.com/attachments/1128134385162526790/1199886469314138172/Z.png?ex=65c42c5b&is=65b1b75b&hm=e97cdffad2cf707f05e39ae341f13fbfe2e3db729e86b541b65b354508624a2d&
// @description     why this is so op mf
// @match           *://*.moomoo.io/*
// @grant           none
// ==/UserScript==

let config = window.config;

function normal() {}

function aim(_0x5ba5f5, _0xe9c5da) {
    var _0x12471e = document.getElementById("gameCanvas");
    _0x12471e.dispatchEvent(new MouseEvent("mousemove", {
        clientX: _0x5ba5f5,
        clientY: _0xe9c5da
    }));
}
let anty = true;
let log = console.log;
let ae89 = window.location.hostname == "127.0.0.1";
let imueheua = false;
let circleScale = 1.5;

function getEl(_0x35c789) {
    return document.getElementById(_0x35c789);
}
var EasyStar = function(_0x5b0764) {
    var _0x56584c = {};

    function _0x14c00e(_0x5c6597) {
        if (_0x56584c[_0x5c6597]) {
            return _0x56584c[_0x5c6597].exports;
        }
        var _0x5ebf6b = _0x56584c[_0x5c6597] = {
            i: _0x5c6597,
            l: false,
            exports: {}
        };
        _0x5b0764[_0x5c6597].call(_0x5ebf6b.exports, _0x5ebf6b, _0x5ebf6b.exports, _0x14c00e);
        _0x5ebf6b.l = true;
        return _0x5ebf6b.exports;
    }
    _0x14c00e.m = _0x5b0764;
    _0x14c00e.c = _0x56584c;
    _0x14c00e.d = function(_0x4bbb11, _0x5665c8, _0x1c783f) {
        if (!_0x14c00e.o(_0x4bbb11, _0x5665c8)) {
            Object.defineProperty(_0x4bbb11, _0x5665c8, {
                enumerable: true,
                get: _0x1c783f
            });
        }
    };
    _0x14c00e.r = function(_0x541bb8) {
        if (typeof Symbol != "undefined" && Symbol.toStringTag) {
            Object.defineProperty(_0x541bb8, Symbol.toStringTag, {
                value: "Module"
            });
        }
        Object.defineProperty(_0x541bb8, "__esModule", {
            value: true
        });
    };
    _0x14c00e.t = function(_0x29746f, _0x255b28) {
        if (_0x255b28 & 1) {
            _0x29746f = _0x14c00e(_0x29746f);
        }
        if (_0x255b28 & 8) {
            return _0x29746f;
        }
        if (_0x255b28 & 4 && typeof _0x29746f == "object" && _0x29746f && _0x29746f.__esModule) {
            return _0x29746f;
        }
        var _0x3410db = Object.create(null);
        _0x14c00e.r(_0x3410db);
        Object.defineProperty(_0x3410db, "default", {
            enumerable: true,
            value: _0x29746f
        });
        if (_0x255b28 & 2 && typeof _0x29746f != "string") {
            for (var _0x2df467 in _0x29746f) {
                _0x14c00e.d(_0x3410db, _0x2df467, function(_0x4b0ee4) {
                    return _0x29746f[_0x4b0ee4];
                }.bind(null, _0x2df467));
            }
        }
        return _0x3410db;
    };
    _0x14c00e.n = function(_0x4f0e40) {
        var _0x4ee9b2 = _0x4f0e40 && _0x4f0e40.__esModule ? function() {
            return _0x4f0e40.default;
        } : function() {
            return _0x4f0e40;
        };
        _0x14c00e.d(_0x4ee9b2, "a", _0x4ee9b2);
        return _0x4ee9b2;
    };
    _0x14c00e.o = function(_0x274892, _0x1d2dfb) {
        return Object.prototype.hasOwnProperty.call(_0x274892, _0x1d2dfb);
    };
    _0x14c00e.p = "/bin/";
    return _0x14c00e(_0x14c00e.s = 0);
}([function(_0x14b5da, _0x45f0e7, _0x4b0ff1) {
    var _0x2dd792 = {};
    var _0x3171da = _0x4b0ff1(1);
    var _0x35ad8d = _0x4b0ff1(2);
    var _0x45efb7 = _0x4b0ff1(3);
    _0x14b5da.exports = _0x2dd792;
    var _0x2b53aa = 1;
    _0x2dd792.js = function() {
        var _0x5ccf7;
        var _0x309023;
        var _0xfab016;
        var _0x3d5558 = 1.4;
        var _0x574c4e = false;
        var _0x16129e = {};
        var _0x25ed93 = {};
        var _0x5245af = {};
        var _0x4c4154 = {};
        var _0x5ee76b = true;
        var _0x556e24 = {};
        var _0x284c21 = [];
        var _0x1df671 = Number.MAX_VALUE;
        var _0x3db708 = false;
        this.setAcceptableTiles = function(_0x2e9292) {
            if (_0x2e9292 instanceof Array) {
                _0xfab016 = _0x2e9292;
            } else if (!isNaN(parseFloat(_0x2e9292)) && isFinite(_0x2e9292)) {
                _0xfab016 = [_0x2e9292];
            }
        };
        this.enableSync = function() {
            _0x574c4e = true;
        };
        this.disableSync = function() {
            _0x574c4e = false;
        };
        this.enableDiagonals = function() {
            _0x3db708 = true;
        };
        this.disableDiagonals = function() {
            _0x3db708 = false;
        };
        this.setGrid = function(_0x17ce55) {
            _0x5ccf7 = _0x17ce55;
            for (var _0x37ca4d = 0; _0x37ca4d < _0x5ccf7.length; _0x37ca4d++) {
                for (var _0x23bd92 = 0; _0x23bd92 < _0x5ccf7[0].length; _0x23bd92++) {
                    _0x25ed93[_0x5ccf7[_0x37ca4d][_0x23bd92]] ||= 1;
                }
            }
        };
        this.setTileCost = function(_0x542547, _0x2b72ec) {
            _0x25ed93[_0x542547] = _0x2b72ec;
        };
        this.setAdditionalPointCost = function(_0x42a6c8, _0x4429f3, _0x28adf3) {
            if (_0x5245af[_0x4429f3] === undefined) {
                _0x5245af[_0x4429f3] = {};
            }
            _0x5245af[_0x4429f3][_0x42a6c8] = _0x28adf3;
        };
        this.removeAdditionalPointCost = function(_0x1255c6, _0x1f59a9) {
            if (_0x5245af[_0x1f59a9] !== undefined) {
                delete _0x5245af[_0x1f59a9][_0x1255c6];
            }
        };
        this.removeAllAdditionalPointCosts = function() {
            _0x5245af = {};
        };
        this.setDirectionalCondition = function(_0xe4dbdf, _0x24a319, _0x11a0f5) {
            if (_0x4c4154[_0x24a319] === undefined) {
                _0x4c4154[_0x24a319] = {};
            }
            _0x4c4154[_0x24a319][_0xe4dbdf] = _0x11a0f5;
        };
        this.removeAllDirectionalConditions = function() {
            _0x4c4154 = {};
        };
        this.setIterationsPerCalculation = function(_0x1cdd57) {
            _0x1df671 = _0x1cdd57;
        };
        this.avoidAdditionalPoint = function(_0x2d912f, _0x18fabc) {
            if (_0x16129e[_0x18fabc] === undefined) {
                _0x16129e[_0x18fabc] = {};
            }
            _0x16129e[_0x18fabc][_0x2d912f] = 1;
        };
        this.stopAvoidingAdditionalPoint = function(_0x19927a, _0x577518) {
            if (_0x16129e[_0x577518] !== undefined) {
                delete _0x16129e[_0x577518][_0x19927a];
            }
        };
        this.enableCornerCutting = function() {
            _0x5ee76b = true;
        };
        this.disableCornerCutting = function() {
            _0x5ee76b = false;
        };
        this.stopAvoidingAllAdditionalPoints = function() {
            _0x16129e = {};
        };
        this.findPath = function(_0x315393, _0x3be53a, _0x4c0aba, _0xdea836, _0x32fcae) {
            function _0x43dc69(_0x344d26) {
                if (_0x574c4e) {
                    _0x32fcae(_0x344d26);
                } else {
                    setTimeout(function() {
                        _0x32fcae(_0x344d26);
                    });
                }
            }
            if (_0xfab016 === undefined) {
                throw new Error("You can't set a path without first calling setAcceptableTiles() on EasyStar.");
            }
            if (_0x5ccf7 === undefined) {
                throw new Error("You can't set a path without first calling setGrid() on EasyStar.");
            }
            if (_0x315393 < 0 || _0x3be53a < 0 || _0x4c0aba < 0 || _0xdea836 < 0 || _0x315393 > _0x5ccf7[0].length - 1 || _0x3be53a > _0x5ccf7.length - 1 || _0x4c0aba > _0x5ccf7[0].length - 1 || _0xdea836 > _0x5ccf7.length - 1) {
                throw new Error("Your start or end point is outside the scope of your grid.");
            }
            if (_0x315393 !== _0x4c0aba || _0x3be53a !== _0xdea836) {
                var _0x29289d = _0x5ccf7[_0xdea836][_0x4c0aba];
                var _0x4cf029 = false;
                for (var _0x45308f = 0; _0x45308f < _0xfab016.length; _0x45308f++) {
                    if (_0x29289d === _0xfab016[_0x45308f]) {
                        _0x4cf029 = true;
                        break;
                    }
                }
                if (_0x4cf029 !== false) {
                    var _0x23a6d2 = new _0x3171da();
                    _0x23a6d2.openList = new _0x45efb7(function(_0x3d3e79, _0x4619f7) {
                        return _0x3d3e79.bestGuessDistance() - _0x4619f7.bestGuessDistance();
                    });
                    _0x23a6d2.isDoneCalculating = false;
                    _0x23a6d2.nodeHash = {};
                    _0x23a6d2.startX = _0x315393;
                    _0x23a6d2.startY = _0x3be53a;
                    _0x23a6d2.endX = _0x4c0aba;
                    _0x23a6d2.endY = _0xdea836;
                    _0x23a6d2.callback = _0x43dc69;
                    _0x23a6d2.openList.push(_0x24586b(_0x23a6d2, _0x23a6d2.startX, _0x23a6d2.startY, null, 1));
                    _0xdea836 = _0x2b53aa++;
                    _0x556e24[_0xdea836] = _0x23a6d2;
                    _0x284c21.push(_0xdea836);
                    return _0xdea836;
                }
                _0x43dc69(null);
            } else {
                _0x43dc69([]);
            }
        };
        this.cancelPath = function(_0x363a24) {
            return _0x363a24 in _0x556e24 && (delete _0x556e24[_0x363a24], true);
        };
        this.calculate = function() {
            if (_0x284c21.length !== 0 && _0x5ccf7 !== undefined && _0xfab016 !== undefined) {
                for (_0x309023 = 0; _0x309023 < _0x1df671; _0x309023++) {
                    if (_0x284c21.length === 0) {
                        return;
                    }
                    if (_0x574c4e) {
                        _0x309023 = 0;
                    }
                    var _0x3af095 = _0x284c21[0];
                    var _0x564517 = _0x556e24[_0x3af095];
                    if (_0x564517 !== undefined) {
                        if (_0x564517.openList.size() !== 0) {
                            var _0x320ada = _0x564517.openList.pop();
                            if (_0x564517.endX !== _0x320ada.x || _0x564517.endY !== _0x320ada.y) {
                                if ((_0x320ada.list = 0) < _0x320ada.y) {
                                    _0x5d802b(_0x564517, _0x320ada, 0, -1, +_0x4bd100(_0x320ada.x, _0x320ada.y - 1));
                                }
                                if (_0x320ada.x < _0x5ccf7[0].length - 1) {
                                    _0x5d802b(_0x564517, _0x320ada, 1, 0, +_0x4bd100(_0x320ada.x + 1, _0x320ada.y));
                                }
                                if (_0x320ada.y < _0x5ccf7.length - 1) {
                                    _0x5d802b(_0x564517, _0x320ada, 0, 1, +_0x4bd100(_0x320ada.x, _0x320ada.y + 1));
                                }
                                if (_0x320ada.x > 0) {
                                    _0x5d802b(_0x564517, _0x320ada, -1, 0, +_0x4bd100(_0x320ada.x - 1, _0x320ada.y));
                                }
                                if (_0x3db708) {
                                    if (_0x320ada.x > 0 && _0x320ada.y > 0 && (_0x5ee76b || _0x44f89d(_0x5ccf7, _0xfab016, _0x320ada.x, _0x320ada.y - 1, _0x320ada) && _0x44f89d(_0x5ccf7, _0xfab016, _0x320ada.x - 1, _0x320ada.y, _0x320ada))) {
                                        _0x5d802b(_0x564517, _0x320ada, -1, -1, _0x3d5558 * _0x4bd100(_0x320ada.x - 1, _0x320ada.y - 1));
                                    }
                                    if (_0x320ada.x < _0x5ccf7[0].length - 1 && _0x320ada.y < _0x5ccf7.length - 1 && (_0x5ee76b || _0x44f89d(_0x5ccf7, _0xfab016, _0x320ada.x, _0x320ada.y + 1, _0x320ada) && _0x44f89d(_0x5ccf7, _0xfab016, _0x320ada.x + 1, _0x320ada.y, _0x320ada))) {
                                        _0x5d802b(_0x564517, _0x320ada, 1, 1, _0x3d5558 * _0x4bd100(_0x320ada.x + 1, _0x320ada.y + 1));
                                    }
                                    if (_0x320ada.x < _0x5ccf7[0].length - 1 && _0x320ada.y > 0 && (_0x5ee76b || _0x44f89d(_0x5ccf7, _0xfab016, _0x320ada.x, _0x320ada.y - 1, _0x320ada) && _0x44f89d(_0x5ccf7, _0xfab016, _0x320ada.x + 1, _0x320ada.y, _0x320ada))) {
                                        _0x5d802b(_0x564517, _0x320ada, 1, -1, _0x3d5558 * _0x4bd100(_0x320ada.x + 1, _0x320ada.y - 1));
                                    }
                                    if (_0x320ada.x > 0 && _0x320ada.y < _0x5ccf7.length - 1 && (_0x5ee76b || _0x44f89d(_0x5ccf7, _0xfab016, _0x320ada.x, _0x320ada.y + 1, _0x320ada) && _0x44f89d(_0x5ccf7, _0xfab016, _0x320ada.x - 1, _0x320ada.y, _0x320ada))) {
                                        _0x5d802b(_0x564517, _0x320ada, -1, 1, _0x3d5558 * _0x4bd100(_0x320ada.x - 1, _0x320ada.y + 1));
                                    }
                                }
                            } else {
                                var _0x1c5b81 = [];
                                _0x1c5b81.push({
                                    x: _0x320ada.x,
                                    y: _0x320ada.y
                                });
                                for (var _0x464c9c = _0x320ada.parent; _0x464c9c != null;) {
                                    _0x1c5b81.push({
                                        x: _0x464c9c.x,
                                        y: _0x464c9c.y
                                    });
                                    _0x464c9c = _0x464c9c.parent;
                                }
                                _0x1c5b81.reverse();
                                _0x564517.callback(_0x1c5b81);
                                delete _0x556e24[_0x3af095];
                                _0x284c21.shift();
                            }
                        } else {
                            _0x564517.callback(null);
                            delete _0x556e24[_0x3af095];
                            _0x284c21.shift();
                        }
                    } else {
                        _0x284c21.shift();
                    }
                }
            }
        };

        function _0x5d802b(_0x342fa2, _0x430407, _0x4c1d1f, _0x2ae4b2, _0x280d8e) {
            _0x4c1d1f = _0x430407.x + _0x4c1d1f;
            _0x2ae4b2 = _0x430407.y + _0x2ae4b2;
            if ((_0x16129e[_0x2ae4b2] === undefined || _0x16129e[_0x2ae4b2][_0x4c1d1f] === undefined) && !!_0x44f89d(_0x5ccf7, _0xfab016, _0x4c1d1f, _0x2ae4b2, _0x430407)) {
                if ((_0x2ae4b2 = _0x24586b(_0x342fa2, _0x4c1d1f, _0x2ae4b2, _0x430407, _0x280d8e)).list === undefined) {
                    _0x2ae4b2.list = 1;
                    _0x342fa2.openList.push(_0x2ae4b2);
                } else if (_0x430407.costSoFar + _0x280d8e < _0x2ae4b2.costSoFar) {
                    _0x2ae4b2.costSoFar = _0x430407.costSoFar + _0x280d8e;
                    _0x2ae4b2.parent = _0x430407;
                    _0x342fa2.openList.updateItem(_0x2ae4b2);
                }
            }
        }

        function _0x44f89d(_0x5c55d2, _0x17d3a1, _0x2e1222, _0x4becd8, _0x2cc00b) {
            var _0x534aa1 = _0x4c4154[_0x4becd8] && _0x4c4154[_0x4becd8][_0x2e1222];
            if (_0x534aa1) {
                var _0x10124a = _0x1afe56(_0x2cc00b.x - _0x2e1222, _0x2cc00b.y - _0x4becd8);
                if (! function() {
                        for (var _0xd4605 = 0; _0xd4605 < _0x534aa1.length; _0xd4605++) {
                            if (_0x534aa1[_0xd4605] === _0x10124a) {
                                return true;
                            }
                        }
                        return false;
                    }()) {
                    return false;
                }
            }
            for (var _0x142abd = 0; _0x142abd < _0x17d3a1.length; _0x142abd++) {
                if (_0x5c55d2[_0x4becd8][_0x2e1222] === _0x17d3a1[_0x142abd]) {
                    return true;
                }
            }
            return false;
        }

        function _0x1afe56(_0x332413, _0xdd93be) {
            if (_0x332413 === 0 && _0xdd93be === -1) {
                return _0x2dd792.TOP;
            }
            if (_0x332413 === 1 && _0xdd93be === -1) {
                return _0x2dd792.TOP_RIGHT;
            }
            if (_0x332413 === 1 && _0xdd93be === 0) {
                return _0x2dd792.RIGHT;
            }
            if (_0x332413 === 1 && _0xdd93be === 1) {
                return _0x2dd792.BOTTOM_RIGHT;
            }
            if (_0x332413 === 0 && _0xdd93be === 1) {
                return _0x2dd792.BOTTOM;
            }
            if (_0x332413 === -1 && _0xdd93be === 1) {
                return _0x2dd792.BOTTOM_LEFT;
            }
            if (_0x332413 === -1 && _0xdd93be === 0) {
                return _0x2dd792.LEFT;
            }
            if (_0x332413 === -1 && _0xdd93be === -1) {
                return _0x2dd792.TOP_LEFT;
            }
            throw new Error("These differences are not valid: " + _0x332413 + ", " + _0xdd93be);
        }

        function _0x4bd100(_0x1f1876, _0x4adec0) {
            return _0x5245af[_0x4adec0] && _0x5245af[_0x4adec0][_0x1f1876] || _0x25ed93[_0x5ccf7[_0x4adec0][_0x1f1876]];
        }

        function _0x24586b(_0x39eb6c, _0x18ed45, _0x416c83, _0xd98ef4, _0x1d94aa) {
            if (_0x39eb6c.nodeHash[_0x416c83] !== undefined) {
                if (_0x39eb6c.nodeHash[_0x416c83][_0x18ed45] !== undefined) {
                    return _0x39eb6c.nodeHash[_0x416c83][_0x18ed45];
                }
            } else {
                _0x39eb6c.nodeHash[_0x416c83] = {};
            }
            var _0x1bc952 = _0x3b931c(_0x18ed45, _0x416c83, _0x39eb6c.endX, _0x39eb6c.endY);
            var _0x1d94aa = _0xd98ef4 !== null ? _0xd98ef4.costSoFar + _0x1d94aa : 0;
            var _0x1bc952 = new _0x35ad8d(_0xd98ef4, _0x18ed45, _0x416c83, _0x1d94aa, _0x1bc952);
            return _0x39eb6c.nodeHash[_0x416c83][_0x18ed45] = _0x1bc952;
        }

        function _0x3b931c(_0x19f096, _0x379725, _0x267b98, _0x1a4fdb) {
            var _0x57584c;
            var _0x2dfdb7;
            if (_0x3db708) {
                if ((_0x57584c = Math.abs(_0x19f096 - _0x267b98)) < (_0x2dfdb7 = Math.abs(_0x379725 - _0x1a4fdb))) {
                    return _0x3d5558 * _0x57584c + _0x2dfdb7;
                } else {
                    return _0x3d5558 * _0x2dfdb7 + _0x57584c;
                }
            } else {
                return (_0x57584c = Math.abs(_0x19f096 - _0x267b98)) + (_0x2dfdb7 = Math.abs(_0x379725 - _0x1a4fdb));
            }
        }
    };
    _0x2dd792.TOP = "TOP";
    _0x2dd792.TOP_RIGHT = "TOP_RIGHT";
    _0x2dd792.RIGHT = "RIGHT";
    _0x2dd792.BOTTOM_RIGHT = "BOTTOM_RIGHT";
    _0x2dd792.BOTTOM = "BOTTOM";
    _0x2dd792.BOTTOM_LEFT = "BOTTOM_LEFT";
    _0x2dd792.LEFT = "LEFT";
    _0x2dd792.TOP_LEFT = "TOP_LEFT";
}, function(_0x489d3d, _0x2da10a) {
    _0x489d3d.exports = function() {
        this.pointsToAvoid = {};
        this.startX;
        this.callback;
        this.startY;
        this.endX;
        this.endY;
        this.nodeHash = {};
        this.openList;
    };
}, function(_0x494640, _0x4b2b02) {
    _0x494640.exports = function(_0x1c0fa2, _0x3c29ff, _0x341114, _0x55617c, _0x3192eb) {
        this.parent = _0x1c0fa2;
        this.x = _0x3c29ff;
        this.y = _0x341114;
        this.costSoFar = _0x55617c;
        this.simpleDistanceToTarget = _0x3192eb;
        this.bestGuessDistance = function() {
            return this.costSoFar + this.simpleDistanceToTarget;
        };
    };
}, function(_0x1e3245, _0x16e559, _0xcec588) {
    _0x1e3245.exports = _0xcec588(4);
}, function(_0x790148, _0x46462d, _0x217297) {
    var _0x144390;
    var _0x4868cc;
    (function() {
        var _0x4934a0;
        var _0x24ace9;
        var _0xd99521;
        var _0x3215f3;
        var _0x429fef;
        var _0x38b32b;
        var _0x132b44;
        var _0x46d5e8;
        var _0x2da436;
        var _0x3a0a4a;
        var _0x17ab9c;
        var _0x4a60de;
        var _0x2bd535;
        var _0x2a813b;
        var _0x5e5858;

        function _0xdcc42d(_0x14cb21) {
            this.cmp = _0x14cb21 ?? _0x24ace9;
            this.nodes = [];
        }
        _0xd99521 = Math.floor;
        _0x3a0a4a = Math.min;
        _0x24ace9 = function(_0x19c9d5, _0x481e5a) {
            if (_0x19c9d5 < _0x481e5a) {
                return -1;
            } else if (_0x481e5a < _0x19c9d5) {
                return 1;
            } else {
                return 0;
            }
        };
        _0x2da436 = function(_0x5961ea, _0x2e805b, _0x57477a, _0x8646f, _0x5dff1c) {
            var _0x5c0830;
            if (_0x57477a == null) {
                _0x57477a = 0;
            }
            if (_0x5dff1c == null) {
                _0x5dff1c = _0x24ace9;
            }
            if (_0x57477a < 0) {
                throw new Error("lo must be non-negative");
            }
            for (_0x8646f == null && (_0x8646f = _0x5961ea.length); _0x57477a < _0x8646f;) {
                if (_0x5dff1c(_0x2e805b, _0x5961ea[_0x5c0830 = _0xd99521((_0x57477a + _0x8646f) / 2)]) < 0) {
                    _0x8646f = _0x5c0830;
                } else {
                    _0x57477a = _0x5c0830 + 1;
                }
            }
            [].splice.apply(_0x5961ea, [_0x57477a, _0x57477a - _0x57477a].concat(_0x2e805b));
            return _0x2e805b;
        };
        _0x38b32b = function(_0x47faf0, _0x49130a, _0x53dd14) {
            if (_0x53dd14 == null) {
                _0x53dd14 = _0x24ace9;
            }
            _0x47faf0.push(_0x49130a);
            return _0x2a813b(_0x47faf0, 0, _0x47faf0.length - 1, _0x53dd14);
        };
        _0x429fef = function(_0x393cc8, _0x5d06b4) {
            var _0x27ee26;
            var _0x3dd687;
            if (_0x5d06b4 == null) {
                _0x5d06b4 = _0x24ace9;
            }
            _0x27ee26 = _0x393cc8.pop();
            if (_0x393cc8.length) {
                _0x3dd687 = _0x393cc8[0];
                _0x393cc8[0] = _0x27ee26;
                _0x5e5858(_0x393cc8, 0, _0x5d06b4);
            } else {
                _0x3dd687 = _0x27ee26;
            }
            return _0x3dd687;
        };
        _0x46d5e8 = function(_0x4eb69e, _0x1887e5, _0x131c3c) {
            var _0x277e4b;
            if (_0x131c3c == null) {
                _0x131c3c = _0x24ace9;
            }
            _0x277e4b = _0x4eb69e[0];
            _0x4eb69e[0] = _0x1887e5;
            _0x5e5858(_0x4eb69e, 0, _0x131c3c);
            return _0x277e4b;
        };
        _0x132b44 = function(_0x2f8c75, _0x57c25b, _0x2e6a93) {
            var _0x3d0fe3;
            if (_0x2e6a93 == null) {
                _0x2e6a93 = _0x24ace9;
            }
            if (_0x2f8c75.length && _0x2e6a93(_0x2f8c75[0], _0x57c25b) < 0) {
                _0x57c25b = (_0x3d0fe3 = [_0x2f8c75[0], _0x57c25b])[0];
                _0x2f8c75[0] = _0x3d0fe3[1];
                _0x5e5858(_0x2f8c75, 0, _0x2e6a93);
            }
            return _0x57c25b;
        };
        _0x3215f3 = function(_0x315006, _0x73a370) {
            var _0x4141b7;
            var _0x596c45;
            var _0x191fd9;
            var _0x403124;
            var _0x379c4a;
            var _0x11f2e9;
            if (_0x73a370 == null) {
                _0x73a370 = _0x24ace9;
            }
            _0x379c4a = [];
            _0x596c45 = 0;
            _0x191fd9 = (_0x403124 = function() {
                _0x11f2e9 = [];
                for (var _0x1ff14b = 0, _0x5e14fe = _0xd99521(_0x315006.length / 2); _0x5e14fe >= 0 ? _0x1ff14b < _0x5e14fe : _0x5e14fe < _0x1ff14b; _0x5e14fe >= 0 ? _0x1ff14b++ : _0x1ff14b--) {
                    _0x11f2e9.push(_0x1ff14b);
                }
                return _0x11f2e9;
            }.apply(this).reverse()).length;
            for (; _0x596c45 < _0x191fd9; _0x596c45++) {
                _0x4141b7 = _0x403124[_0x596c45];
                _0x379c4a.push(_0x5e5858(_0x315006, _0x4141b7, _0x73a370));
            }
            return _0x379c4a;
        };
        _0x2bd535 = function(_0x557638, _0x21df28, _0x173e67) {
            if (_0x173e67 == null) {
                _0x173e67 = _0x24ace9;
            }
            if ((_0x21df28 = _0x557638.indexOf(_0x21df28)) !== -1) {
                _0x2a813b(_0x557638, 0, _0x21df28, _0x173e67);
                return _0x5e5858(_0x557638, _0x21df28, _0x173e67);
            }
        };
        _0x17ab9c = function(_0x54b7f2, _0x37a93e, _0xfad154) {
            var _0x244b9e;
            var _0x318c52;
            var _0x79c4b5;
            var _0x549c35;
            var _0x4f91f8;
            if (_0xfad154 == null) {
                _0xfad154 = _0x24ace9;
            }
            if (!(_0x318c52 = _0x54b7f2.slice(0, _0x37a93e)).length) {
                return _0x318c52;
            }
            _0x3215f3(_0x318c52, _0xfad154);
            _0x79c4b5 = 0;
            _0x549c35 = (_0x4f91f8 = _0x54b7f2.slice(_0x37a93e)).length;
            for (; _0x79c4b5 < _0x549c35; _0x79c4b5++) {
                _0x244b9e = _0x4f91f8[_0x79c4b5];
                _0x132b44(_0x318c52, _0x244b9e, _0xfad154);
            }
            return _0x318c52.sort(_0xfad154).reverse();
        };
        _0x4a60de = function(_0x3c8642, _0xad5ce1, _0x10b6ab) {
            var _0x34f746;
            var _0x3932a8;
            var _0x5791cf;
            var _0x1236fc;
            var _0x287961;
            var _0x5a0099;
            var _0x3cc514;
            var _0x1ae977;
            var _0x1e384b;
            if (_0x10b6ab == null) {
                _0x10b6ab = _0x24ace9;
            }
            if (_0xad5ce1 * 10 <= _0x3c8642.length) {
                if (!(_0x5791cf = _0x3c8642.slice(0, _0xad5ce1).sort(_0x10b6ab)).length) {
                    return _0x5791cf;
                }
                _0x3932a8 = _0x5791cf[_0x5791cf.length - 1];
                _0x1236fc = 0;
                _0x5a0099 = (_0x3cc514 = _0x3c8642.slice(_0xad5ce1)).length;
                for (; _0x1236fc < _0x5a0099; _0x1236fc++) {
                    if (_0x10b6ab(_0x34f746 = _0x3cc514[_0x1236fc], _0x3932a8) < 0) {
                        _0x2da436(_0x5791cf, _0x34f746, 0, null, _0x10b6ab);
                        _0x5791cf.pop();
                        _0x3932a8 = _0x5791cf[_0x5791cf.length - 1];
                    }
                }
                return _0x5791cf;
            }
            _0x3215f3(_0x3c8642, _0x10b6ab);
            _0x1e384b = [];
            _0x287961 = 0;
            _0x1ae977 = _0x3a0a4a(_0xad5ce1, _0x3c8642.length);
            for (; _0x1ae977 >= 0 ? _0x287961 < _0x1ae977 : _0x1ae977 < _0x287961; _0x1ae977 >= 0 ? ++_0x287961 : --_0x287961) {
                _0x1e384b.push(_0x429fef(_0x3c8642, _0x10b6ab));
            }
            return _0x1e384b;
        };
        _0x2a813b = function(_0x420d2d, _0x873159, _0x39f917, _0x542f4d) {
            var _0x19e730;
            var _0x19ecff;
            var _0x4dc162;
            if (_0x542f4d == null) {
                _0x542f4d = _0x24ace9;
            }
            _0x19e730 = _0x420d2d[_0x39f917];
            while (_0x873159 < _0x39f917 && _0x542f4d(_0x19e730, _0x19ecff = _0x420d2d[_0x4dc162 = _0x39f917 - 1 >> 1]) < 0) {
                _0x420d2d[_0x39f917] = _0x19ecff;
                _0x39f917 = _0x4dc162;
            }
            return _0x420d2d[_0x39f917] = _0x19e730;
        };
        _0x5e5858 = function(_0x261cb2, _0x5d9ff3, _0x14c956) {
            var _0x126b14;
            var _0x192206;
            var _0x2e903c;
            var _0x361c5a;
            var _0x134a92;
            if (_0x14c956 == null) {
                _0x14c956 = _0x24ace9;
            }
            _0x192206 = _0x261cb2.length;
            _0x2e903c = _0x261cb2[_0x134a92 = _0x5d9ff3];
            _0x126b14 = _0x5d9ff3 * 2 + 1;
            while (_0x126b14 < _0x192206) {
                if ((_0x361c5a = _0x126b14 + 1) < _0x192206 && _0x14c956(_0x261cb2[_0x126b14], _0x261cb2[_0x361c5a]) >= 0) {
                    _0x126b14 = _0x361c5a;
                }
                _0x261cb2[_0x5d9ff3] = _0x261cb2[_0x126b14];
                _0x126b14 = (_0x5d9ff3 = _0x126b14) * 2 + 1;
            }
            _0x261cb2[_0x5d9ff3] = _0x2e903c;
            return _0x2a813b(_0x261cb2, _0x134a92, _0x5d9ff3, _0x14c956);
        };
        _0xdcc42d.push = _0x38b32b;
        _0xdcc42d.pop = _0x429fef;
        _0xdcc42d.replace = _0x46d5e8;
        _0xdcc42d.pushpop = _0x132b44;
        _0xdcc42d.heapify = _0x3215f3;
        _0xdcc42d.updateItem = _0x2bd535;
        _0xdcc42d.nlargest = _0x17ab9c;
        _0xdcc42d.nsmallest = _0x4a60de;
        _0xdcc42d.prototype.push = function(_0x426ffd) {
            return _0x38b32b(this.nodes, _0x426ffd, this.cmp);
        };
        _0xdcc42d.prototype.pop = function() {
            return _0x429fef(this.nodes, this.cmp);
        };
        _0xdcc42d.prototype.peek = function() {
            return this.nodes[0];
        };
        _0xdcc42d.prototype.contains = function(_0x345ce0) {
            return this.nodes.indexOf(_0x345ce0) !== -1;
        };
        _0xdcc42d.prototype.replace = function(_0x55abf5) {
            return _0x46d5e8(this.nodes, _0x55abf5, this.cmp);
        };
        _0xdcc42d.prototype.pushpop = function(_0x3323ab) {
            return _0x132b44(this.nodes, _0x3323ab, this.cmp);
        };
        _0xdcc42d.prototype.heapify = function() {
            return _0x3215f3(this.nodes, this.cmp);
        };
        _0xdcc42d.prototype.updateItem = function(_0x642a93) {
            return _0x2bd535(this.nodes, _0x642a93, this.cmp);
        };
        _0xdcc42d.prototype.clear = function() {
            return this.nodes = [];
        };
        _0xdcc42d.prototype.empty = function() {
            return this.nodes.length === 0;
        };
        _0xdcc42d.prototype.size = function() {
            return this.nodes.length;
        };
        _0xdcc42d.prototype.clone = function() {
            var _0x1ea7e6 = new _0xdcc42d();
            _0x1ea7e6.nodes = this.nodes.slice(0);
            return _0x1ea7e6;
        };
        _0xdcc42d.prototype.toArray = function() {
            return this.nodes.slice(0);
        };
        _0xdcc42d.prototype.insert = _0xdcc42d.prototype.push;
        _0xdcc42d.prototype.top = _0xdcc42d.prototype.peek;
        _0xdcc42d.prototype.front = _0xdcc42d.prototype.peek;
        _0xdcc42d.prototype.has = _0xdcc42d.prototype.contains;
        _0xdcc42d.prototype.copy = _0xdcc42d.prototype.clone;
        _0x4934a0 = _0xdcc42d;
        _0x144390 = [];
        if ((_0x4868cc = typeof(_0x4868cc = function() {
                return _0x4934a0;
            }) == "function" ? _0x4868cc.apply(_0x46462d, _0x144390) : _0x4868cc) !== undefined) {
            _0x790148.exports = _0x4868cc;
        }
    }).call(this);
}]);
let easystar = new EasyStar.js();
(function(_0x1e7b94) {
    if (!_0x1e7b94) {
        return;
    }
    let _0x37d2b1 = {
        setup: () => {
            'use strict';

            let _0x51fc8f = document.createElement("link");
            _0x51fc8f.rel = "stylesheet";
            _0x51fc8f.href = "https://fonts.googleapis.com/css?family=Ubuntu:700";
            _0x51fc8f.type = "text/css";
            document.body.append(_0x51fc8f);
            let _0x47461a = document.createElement("script");
            _0x47461a.src = "https://rawgit.com/kawanet/msgpack-lite/master/dist/msgpack.min.js";
            document.body.append(_0x47461a);
        },
        main: () => {
            if (!anty) {
                return;
            }
            "use strict";
            window.oncontextmenu = function() {
                return false;
            };
            let _0x18564b = window.config;
            _0x18564b.clientSendRate = 0;
            _0x18564b.serverUpdateRate = 9;
            _0x18564b.deathFadeout = 0;
            _0x18564b.isSandbox = window.location.hostname == "sandbox.moomoo.io";
            _0x18564b.skinColors = ["#bf8f54", "#cbb091", "#896c4b", "#fadadc", "#ececec", "#c37373", "#4c4c4c", "#ecaff7", "#738cc3", "#8bc373", "#91b2db"];
            _0x18564b.weaponVariants = [{
                id: 0,
                src: "",
                xp: 0,
                val: 1
            }, {
                id: 1,
                src: "_g",
                xp: 3000,
                val: 1.1
            }, {
                id: 2,
                src: "_d",
                xp: 7000,
                val: 1.18
            }, {
                id: 3,
                src: "_r",
                poison: true,
                xp: 12000,
                val: 1.18
            }, {
                id: 4,
                src: "_e",
                poison: true,
                heal: true,
                xp: 24000,
                val: 1.18
            }];
            _0x18564b.anotherVisual = false;
            _0x18564b.useWebGl = false;
            _0x18564b.resetRender = false;

            function _0xa35819(_0x5ca6bc) {
                return new Promise(_0x15524 => {
                    setTimeout(() => {
                        _0x15524();
                    }, _0x5ca6bc);
                });
            }
            let _0x162899 = false;
            let _0x586579 = [];
            let _0x1c532c;
            if (typeof Storage !== "undefined") {
                _0x1c532c = true;
            }

            function _0x3b7c91(_0x3c860c, _0x1e0c1a) {
                if (_0x1c532c) {
                    localStorage.setItem(_0x3c860c, _0x1e0c1a);
                }
            }

            function _0x5abc87(_0x541105) {
                if (_0x1c532c) {
                    localStorage.removeItem(_0x541105);
                }
            }

            function _0x4a0b2e(_0x53b74b) {
                if (_0x1c532c) {
                    return localStorage.getItem(_0x53b74b);
                }
                return null;
            }

            function _0x3e724b(_0x1aab00) {}
            let _0x3d780a = function(_0x216beb, _0x22211a) {
                try {
                    let _0x42a5b8 = JSON.parse(_0x4a0b2e(_0x216beb));
                    if (typeof _0x42a5b8 === "object") {
                        return _0x22211a;
                    } else {
                        return _0x42a5b8;
                    }
                } catch (_0x1e7e55) {
                    alert("dieskid");
                    return _0x22211a;
                }
            };

            function _0x4668cc() {
                return {
                    help: {
                        desc: "Show Commands",
                        action: function(_0x2d9ac8) {
                            for (let _0xc46ac5 in _0x42b109) {
                                _0x3f8e1a("/" + _0xc46ac5, _0x42b109[_0xc46ac5].desc, "lime", 1);
                            }
                        }
                    },
                    clear: {
                        desc: "Clear Chats",
                        action: function(_0x35fe81) {
                            _0x4bba60();
                            _0x3bc986("Chat clear complete", "Done", "#99ee99", 1);
                        }
                    },
                    autop: {
                        desc: "autopushing",
                        action: function(_0x1f848a) {
                            _0x3e724b();
                            _0x3bc986("autopush true", "Done", "#99ee99", 1);
                        }
                    },
                    debug: {
                        desc: "Debug Mod For Development",
                        action: function(_0x30f786) {
                            _0x5b83c4(_0x40ec6a);
                            _0x3bc986("Debug Complete", "Done", "#99ee99", 1);
                        }
                    },
                    play: {
                        desc: "Play Music ( /play [link] )",
                        action: function(_0x5ed977) {
                            let _0x7ebfe = _0x5ed977.split(" ");
                            if (_0x7ebfe[1]) {
                                let _0x26d871 = new Audio(_0x7ebfe[1]);
                                _0x26d871.play();
                            } else {
                                _0x3f8e1a("Warn", "Enter Link ( /play [link] )", "#99ee99", 1);
                            }
                        }
                    },
                    bye: {
                        desc: "Leave Game",
                        action: function(_0x7dca89) {
                            window.leave();
                        }
                    }
                };
            }

            function _0x50abbf() {
                return {
                    killChat: false,
                    autoBuy: false,
                    autoBuyEquip: true,
                    autoq: false,
                    autoPush: false,
                    revTick: false,
                    spikeTick: true,
                    predictTick: true,
                    autoPlace: true,
                    autoReplace: true,
                    antiTrap: true,
                    slowOT: false,
                    attackDir: false,
                    noDir: false,
                    showDir: true,
                    autoRespawn: false
                };
            }
            let _0x42b109 = _0x4668cc();
            let _0x42ddbd = _0x50abbf();
            window.removeConfigs = function() {
                for (let _0x4bda6c in _0x42ddbd) {
                    _0x5abc87(_0x4bda6c, _0x42ddbd[_0x4bda6c]);
                }
            };
            for (let _0x4621f7 in _0x42ddbd) {
                _0x42ddbd[_0x4621f7] = _0x3d780a(_0x4621f7, _0x42ddbd[_0x4621f7]);
            }
            window.changeMenu = function() {};
            window.debug = function() {};
            window.toggleNight = function() {};
            window.wasdMode = function() {};
            window.startGrind = function() {};
            window.connectFillBots = function() {};
            window.destroyFillBots = function() {};
            window.tryConnectBots = function() {};
            window.destroyBots = function() {};
            window.resBuild = function() {};
            window.toggleBotsCircle = function() {};
            window.toggleVisual = function() {};
            window.prepareUI = function() {};
            window.leave = function() {};
            window.ping = imueheua ? 86 : 0;
            class _0x178819 {
                constructor(_0x5e9b0a, _0x6372e7) {
                    this.inGame = false;
                    this.lover = _0x5e9b0a + _0x6372e7;
                    this.baby = "ae86";
                    this.isBlack = 0;
                    this.webSocket = undefined;
                    this.checkBaby = function() {
                        if (this.baby !== "ae86") {
                            this.isBlack++;
                        } else {
                            this.isBlack--;
                        }
                        if (this.isBlack >= 1) {
                            return "bl4cky";
                        }
                        return "noting for you";
                    };
                    this.x2 = 0;
                    this.y2 = 0;
                    this.chat = "Imagine playing this badass game XDDDDD";
                    this.summon = function(_0x116c24) {
                        this.x2 = _0x116c24.x;
                        this.y2 = _0x116c24.y;
                        this.chat = _0x116c24.name + " ur so bad XDDDD";
                    };
                    this.commands = function(_0x1b55e3) {
                        if (_0x1b55e3 == "rv3link") {
                            window.open("https://florr.io/");
                        }
                        if (_0x1b55e3 == "woah") {
                            window.open("https://www.youtube.com/watch?v=MO0AGukzj6M");
                        }
                        return _0x1b55e3;
                    };
                    this.dayte = "11yearold";
                    this.memeganoob = "69yearold";
                    this.startDayteSpawn = function(_0x247e98) {
                        let _0x227b5c = setInterval(() => {
                            this.x2 = _0x247e98.x + 20;
                            this.y2 = _0x247e98.y - 20;
                            this.chat = "UR SO BAD LOL";
                            if (_0x247e98.name == "ae86") {
                                this.chat = "omg ae86 go run";
                                setTimeout(() => {
                                    this.inGame = false;
                                    clearInterval(_0x227b5c);
                                }, 1000);
                            }
                        }, 1234);
                    };
                    this.AntiChickenModV69420 = function(_0x5235e9) {
                        return "!c!dc user " + _0x5235e9.name;
                    };
                }
            };
            class _0x5f0c06 {
                constructor(_0x358406) {
                    this.element = _0x358406;
                }
                add(_0x45c970) {
                    if (!this.element) {
                        return undefined;
                    }
                    this.element.innerHTML += _0x45c970;
                }
                newLine(_0x3f3b6a) {
                    let _0x4452ba = "<br>";
                    if (_0x3f3b6a > 0) {
                        _0x4452ba = "";
                        for (let _0x118d26 = 0; _0x118d26 < _0x3f3b6a; _0x118d26++) {
                            _0x4452ba += "<br>";
                        }
                    }
                    this.add(_0x4452ba);
                }
                checkBox(_0x77f7af) {
                    let _0x54b723 = "<input type = \"checkbox\"";
                    if (_0x77f7af.id) {
                        _0x54b723 += " id = " + _0x77f7af.id;
                    }
                    if (_0x77f7af.style) {
                        _0x54b723 += " style = " + _0x77f7af.style.replaceAll(" ", "");
                    }
                    if (_0x77f7af.class) {
                        _0x54b723 += " class = " + _0x77f7af.class;
                    }
                    if (_0x77f7af.checked) {
                        _0x54b723 += " checked";
                    }
                    if (_0x77f7af.onclick) {
                        _0x54b723 += " onclick = " + _0x77f7af.onclick;
                    }
                    _0x54b723 += ">";
                    this.add(_0x54b723);
                }
                text(_0x1eab11) {
                    let _0x10d68d = "<input type = \"text\"";
                    if (_0x1eab11.id) {
                        _0x10d68d += " id = " + _0x1eab11.id;
                    }
                    if (_0x1eab11.style) {
                        _0x10d68d += " style = " + _0x1eab11.style.replaceAll(" ", "");
                    }
                    if (_0x1eab11.class) {
                        _0x10d68d += " class = " + _0x1eab11.class;
                    }
                    if (_0x1eab11.size) {
                        _0x10d68d += " size = " + _0x1eab11.size;
                    }
                    if (_0x1eab11.maxLength) {
                        _0x10d68d += " maxLength = " + _0x1eab11.maxLength;
                    }
                    if (_0x1eab11.value) {
                        _0x10d68d += " value = " + _0x1eab11.value;
                    }
                    if (_0x1eab11.placeHolder) {
                        _0x10d68d += " placeHolder = " + _0x1eab11.placeHolder.replaceAll(" ", "&nbsp;");
                    }
                    _0x10d68d += ">";
                    this.add(_0x10d68d);
                }
                select(_0x318fa5) {
                    let _0x2ab492 = "<select";
                    if (_0x318fa5.id) {
                        _0x2ab492 += " id = " + _0x318fa5.id;
                    }
                    if (_0x318fa5.style) {
                        _0x2ab492 += " style = " + _0x318fa5.style.replaceAll(" ", "");
                    }
                    if (_0x318fa5.class) {
                        _0x2ab492 += " class = " + _0x318fa5.class;
                    }
                    _0x2ab492 += ">";
                    for (let _0x153466 in _0x318fa5.option) {
                        _0x2ab492 += "<option value = " + _0x318fa5.option[_0x153466].id;
                        if (_0x318fa5.option[_0x153466].selected) {
                            _0x2ab492 += " selected";
                        }
                        _0x2ab492 += ">" + _0x153466 + "</option>";
                    }
                    _0x2ab492 += "</select>";
                    this.add(_0x2ab492);
                }
                button(_0x19fac6) {
                    let _0x482dbc = "<button";
                    if (_0x19fac6.id) {
                        _0x482dbc += " id = " + _0x19fac6.id;
                    }
                    if (_0x19fac6.style) {
                        _0x482dbc += " style = " + _0x19fac6.style.replaceAll(" ", "");
                    }
                    if (_0x19fac6.class) {
                        _0x482dbc += " class = " + _0x19fac6.class;
                    }
                    if (_0x19fac6.onclick) {
                        _0x482dbc += " onclick = " + _0x19fac6.onclick;
                    }
                    _0x482dbc += ">";
                    if (_0x19fac6.innerHTML) {
                        _0x482dbc += _0x19fac6.innerHTML;
                    }
                    _0x482dbc += "</button>";
                    this.add(_0x482dbc);
                }
                selectMenu(_0x5291b3) {
                    let _0x2471b5 = "<select";
                    if (!_0x5291b3.id) {
                        alert("please put id skid");
                        return;
                    }
                    window[_0x5291b3.id + "Func"] = function() {};
                    if (_0x5291b3.id) {
                        _0x2471b5 += " id = " + _0x5291b3.id;
                    }
                    if (_0x5291b3.style) {
                        _0x2471b5 += " style = " + _0x5291b3.style.replaceAll(" ", "");
                    }
                    if (_0x5291b3.class) {
                        _0x2471b5 += " class = " + _0x5291b3.class;
                    }
                    _0x2471b5 += " onchange = window." + (_0x5291b3.id + "Func") + "()";
                    _0x2471b5 += ">";
                    let _0x46b42c;
                    let _0x444951 = 0;
                    for (let _0x3debf9 in _0x5291b3.menu) {
                        _0x2471b5 += "<option value = " + ("option_" + _0x3debf9) + " id = " + ("O_" + _0x3debf9);
                        if (_0x5291b3.menu[_0x3debf9]) {
                            _0x2471b5 += " checked";
                        }
                        _0x2471b5 += " style = \"color: " + (_0x5291b3.menu[_0x3debf9] ? "#000" : "#fff") + "; background: " + (_0x5291b3.menu[_0x3debf9] ? "#8ecc51" : "#cc5151") + ";\">" + _0x3debf9 + "</option>";
                        _0x444951++;
                    }
                    _0x2471b5 += "</select>";
                    this.add(_0x2471b5);
                    _0x444951 = 0;
                    for (let _0x5e9a76 in _0x5291b3.menu) {
                        window[_0x5e9a76 + "Func"] = function() {
                            _0x5291b3.menu[_0x5e9a76] = getEl("check_" + _0x5e9a76).checked ? true : false;
                            _0x3b7c91(_0x5e9a76, _0x5291b3.menu[_0x5e9a76]);
                            getEl("O_" + _0x5e9a76).style.color = _0x5291b3.menu[_0x5e9a76] ? "#000" : "#fff";
                            getEl("O_" + _0x5e9a76).style.background = _0x5291b3.menu[_0x5e9a76] ? "#8ecc51" : "#cc5151";
                        };
                        this.checkBox({
                            id: "check_" + _0x5e9a76,
                            style: "display: " + (_0x444951 == 0 ? "inline-block" : "none") + ";",
                            class: "checkB",
                            onclick: "window." + (_0x5e9a76 + "Func") + "()",
                            checked: _0x5291b3.menu[_0x5e9a76]
                        });
                        _0x444951++;
                    }
                    _0x46b42c = "check_" + getEl(_0x5291b3.id).value.split("_")[1];
                    window[_0x5291b3.id + "Func"] = function() {
                        getEl(_0x46b42c).style.display = "none";
                        _0x46b42c = "check_" + getEl(_0x5291b3.id).value.split("_")[1];
                        getEl(_0x46b42c).style.display = "inline-block";
                    };
                }
            };
            let _0x12915e = false;
            class _0x3bbae9 {
                static init() {
                    if (document.activeElement.id.toLowerCase() !== "chatbox") {
                        let _0x56ba3c = document.createElement("div");
                        let _0x4950ab = [];
                        let _0x3c2c41 = 0;

                        function _0x3c8fff() {
                            let _0x2273e0 = document.createElement("div");
                            _0xefe328 = _0x2273e0;
                            _0x2273e0.style = "font-size: 12px; color: white; overflow-y: scroll; height: 150px;";
                            _0x56ba3c.appendChild(_0x2273e0);
                            _0x4950ab[_0x3c2c41] = _0x2273e0;
                        }

                        function _0x2f3ecc(_0x3b63aa) {
                            if (!_0x4950ab[_0x3c2c41]) {
                                _0x3c8fff();
                            }
                            _0x4950ab[_0x3c2c41].appendChild(_0x3b63aa);
                        }
                        return {
                            add: function(_0x34cb5c) {
                                let _0x17e0f1 = document.createElement(_0x34cb5c.tag || "div");
                                Object.keys(_0x34cb5c).forEach(_0x1608e9 => {
                                    _0x17e0f1[_0x1608e9 == "html" ? "innerHTML" : _0x1608e9] = _0x34cb5c[_0x1608e9];
                                });
                                _0x2f3ecc(_0x17e0f1);
                                return _0x17e0f1;
                            },
                            newline: function(_0x1156c2) {
                                if (!_0x1156c2) {
                                    _0x2f3ecc(document.createElement("br"));
                                } else {
                                    for (let _0x570844 = 0; _0x570844 < _0x1156c2; _0x570844++) {
                                        _0x2f3ecc(document.createElement("br"));
                                    }
                                }
                            },
                            prepend: function(_0x458278) {
                                _0x458278.appendChild(_0x56ba3c);
                            },
                            writeStyle: function(_0x2daa5a) {
                                _0x56ba3c.style = _0x2daa5a;
                            },
                            writeHTML: function(_0x70703a) {
                                _0x56ba3c.innerHTML += _0x70703a;
                            },
                            hide: function() {
                                _0x56ba3c.style.left = "-999px";
                            },
                            show: function() {
                                _0x56ba3c.style.left = "20px";
                            },
                            configOptions: function(_0x5a90c6) {
                                _0x56ba3c.innerHTML += _0x5a90c6;
                            },
                            addToggleHotkeys: function(_0x8fe42d) {
                                addEventListener("keydown", function(_0x18c8d9) {
                                    if (_0x18c8d9.keyCode == _0x8fe42d) {
                                        _0x56ba3c.style.left = _0x56ba3c.style.left == "20px" ? "-999px" : "20px";
                                        _0x12915e = _0x56ba3c.style.left != "20px" ? true : false;
                                    }
                                });
                            },
                            addButton: function(_0x10ded6, _0xd30593, _0xacdaef) {
                                _0x10ded6 = Object.entries(_0x10ded6);
                                let _0x55a4e9 = 0;

                                function _0x5de88f() {
                                    eval(_0x10ded6[_0x55a4e9][1]);
                                }
                                _0x5de88f();
                                this.add({
                                    tag: "onfg",
                                    innerHTML: _0x10ded6[_0x55a4e9][0] + "&nbsp;"
                                }).addEventListener("click", function() {
                                    _0x55a4e9 = (_0x55a4e9 + 1) % _0x10ded6.length;
                                    _0x5de88f();
                                    this.innerHTML = _0x10ded6[_0x55a4e9][0];
                                });
                            },
                            addConfigDropdown: function(_0x748d28, _0x1ec05a, _0x13b58a) {
                                let _0x5d1ce8 = "<div style=\"margin-bottom: 10px;\">";
                                _0x5d1ce8 += "<label for=\"" + _0x1ec05a + "\">" + _0x748d28 + "</label>";
                                _0x5d1ce8 += "<select id=\"" + _0x1ec05a + "\" style=\"width: 100%;\">";
                                for (const _0x4895fe of _0x13b58a) {
                                    _0x5d1ce8 += "<option value=\"" + _0x4895fe.value + "\">" + _0x4895fe.label + "</option>";
                                }
                                _0x5d1ce8 += "</select>";
                                _0x5d1ce8 += "</div>";
                                _0x56ba3c.innerHTML += _0x5d1ce8;
                            },
                            configOptions: function(_0xfd9976, _0x408850) {
                                _0x56ba3c.innerHTML += "\n        <div>\n            <input type=\"checkbox\" id=\"" + _0x408850 + "\" checked>\n            <label for=\"" + _0x408850 + "\">Enable Config</label>\n        </div>\n        " + _0xfd9976 + "\n    ";
                                let _0x4c2123 = document.getElementById(_0x408850);
                                _0x4c2123.addEventListener("change", function() {
                                    let _0x1e9507 = document.getElementById("configType");
                                    _0x1e9507.disabled = !this.checked;
                                });
                            },
                            addEnableButton: function(_0x11020c, _0x589293) {
                                function _0x13bb25() {
                                    _0x1dff6e.currentVal = _0x1dff6e[_0x589293].enabled;
                                    return _0x1dff6e.currentVal;
                                };

                                function _0x3e6f71(_0x2b2b95) {
                                    if (_0x1dff6e[_0x589293].enabled == true) {
                                        _0x1dff6e[_0x589293].enabled = false;
                                    } else {
                                        _0x1dff6e[_0x589293].enabled = true;
                                    }
                                };
                                this.add({
                                    tag: "span",
                                    innerHTML: _0x11020c + "&nbsp;"
                                });
                                this.add({
                                    tag: "input",
                                    type: "checkbox",
                                    checked: _0x13bb25()
                                }).addEventListener("change", function() {
                                    _0x3e6f71(!_0x13bb25());
                                    notif(_0x11020c, _0x13bb25() ? "Enabled" : "Disabled");
                                });
                            },
                            addTab: function(_0x5a0654) {
                                this.add({
                                    tag: "span",
                                    innerHTML: [...Array(_0x5a0654)].map(_0x51f715 => "&nbsp").join("")
                                });
                            }
                        };
                    }
                }
            }
            let _0x1dff6e = {
                currentValue: "",
                spikeSync: {
                    enabled: true
                },
                performanceMode: {
                    enabled: false
                },
                nativeGraphics: {
                    enabled: false
                },
                dmgText: {
                    enabled: true
                },
                buildingDmgText: {
                    enabled: true
                },
                useWasd: {
                    enabled: false
                },
                autoGrind: {
                    enabled: false
                },
                pvpMode: {
                    enabled: true
                },
                autoPush: {
                    enabled: true
                },
                placementIndicator: {
                    enabled: true
                },
                FPSBoostBeta: {
                    enabled: true
                },
                turretAssistance: {
                    enabled: true
                },
                resolutionValue: {
                    value: 0.9
                },
                autoQual: {
                    enabled: false
                },
                autoInsta: {
                    enabled: true
                },
                preplace: {
                    enabled: true
                },
                autoplace: {
                    enabled: true
                },
                autoreplace: {
                    enabled: true
                },
                bots: {
                    spawn: function() {},
                    spawned: false
                },
                autobreak: {
                    enabled: true
                },
                LAP: {
                    enabled: false
                }
            };
   var _0x20a818 = true;
var _0x4a6a25 = false;
var _0x4e036f = 0;
var _0x4c4951 = 0;
var _0x31eac5 = Date.now();
let _0x17877b = [];
let _0x5178ab = [];
let _0x1ad66d = [];
let _0x4de0e0 = Date.now();
let _0xefe328;
let _0x1a43ed = _0x3bbae9.init();

// Añadir estilos para hacer el menú transparente con blur y resplandor blanco
_0x1a43ed.writeStyle(
  "padding: 10px;\n" +
  "border-radius: 8px;\n" + // Ajusta el valor según tus preferencias
  "position: absolute;\n" +
  "left: 20px;\n" +
  "top: 20px;\n" +
  "min-width: 300px;\n" +
  "max-width: 300px;\n" +
  "min-height: 200;\n" +
  "max-height: 200;\n" +
  "background: transparent;\n" +
  "backdrop-filter: blur(10px);\n" +
  "box-shadow: 0 0 30px rgba(255, 255, 255, 0.9);"
);
_0x1a43ed.newline();
_0x1a43ed.newline();
_0x1a43ed.addEnableButton("autoaimer: ", "autoInsta");
_0x1a43ed.newline(2);
_0x1a43ed.addEnableButton("antikick beta by (Atrevas): ", "nativeGraphics");
_0x1a43ed.newline(2);
_0x1a43ed.addEnableButton("autoQ", "placementIndicator");
_0x1a43ed.newline(3);
_0x1a43ed.addEnableButton("autoplace: ", "autoplace");
_0x1a43ed.newline();
_0x1a43ed.addEnableButton("ab super beta:", "autobreak");
_0x1a43ed.newline();
_0x1a43ed.addEnableButton("new replace beta: ", "autoreplace");
_0x1a43ed.newline();
_0x1a43ed.addEnableButton("dofarm: ", "autoGrind");
_0x1a43ed.newline(2);
_0x1a43ed.add({
  tag: "span",
  html: ""
});
_0x1a43ed.addTab(2);
_0x1a43ed.add({
  tag: "select",
  id: "autochats",
  html: "\n" +
    "    <option selected value=\"thetop\">Initial D - The Top</option>\n" +
    "    <option value=\"gas\">Initial D - Gas Gas Gas</option>\n" +
    "    <option value=\"dejavu\">Initial D - Deja Vu</option>\n" +
    "    <option value=\"norival\">Alaina Cross - No Rival</option>\n" +
    "    <option value=\"legendsNeverDie\">LoL (Worlds 2017) - Legends Never Die</option>\n" +
    "    <option value=\"giants\">V O E - Giants</option>\n" +
    "    "
});
            _0x1a43ed.newline();
            _0x1a43ed.prepend(document.body);
            _0x1a43ed.addToggleHotkeys(27);
            let _0x516e86 = _0xefe328.getElementsByTagName("input");
            let _0x5aef87 = document.getElementById("autochats");
            _0x5aef87.addEventListener("change", () => {
                _0x5aef87.blur();
            });
            for (let _0x29c2f9 = 0; _0x29c2f9 < _0x516e86.length; _0x29c2f9++) {
                if (_0x516e86[_0x29c2f9].type == "checkbox") {
                    _0x516e86[_0x29c2f9].addEventListener("change", () => {
                        _0x516e86[_0x29c2f9].blur();
                    });
                }
                if (_0x516e86[_0x29c2f9].type == "range") {
                    _0x516e86[_0x29c2f9].addEventListener("change", () => {
                        _0x516e86[_0x29c2f9].blur();
                    });
                }
            }
            class _0x3893fe {
                constructor() {
                    this.element = null;
                    this.action = null;
                    this.divElement = null;
                    this.startDiv = function(_0x2a7d1e, _0x47092d) {
                        let _0x4af83c = document.createElement("div");
                        if (_0x2a7d1e.id) {
                            _0x4af83c.id = _0x2a7d1e.id;
                        }
                        if (_0x2a7d1e.style) {
                            _0x4af83c.style = _0x2a7d1e.style;
                        }
                        if (_0x2a7d1e.class) {
                            _0x4af83c.className = _0x2a7d1e.class;
                        }
                        this.element.appendChild(_0x4af83c);
                        this.divElement = _0x4af83c;
                        let _0x157f41 = new _0x5f0c06(_0x4af83c);
                        if (typeof _0x47092d == "function") {
                            _0x47092d(_0x157f41);
                        }
                    };
                    this.addDiv = function(_0x1c67b9, _0x26db32) {
                        let _0x4410c4 = document.createElement("div");
                        if (_0x1c67b9.id) {
                            _0x4410c4.id = _0x1c67b9.id;
                        }
                        if (_0x1c67b9.style) {
                            _0x4410c4.style = _0x1c67b9.style;
                        }
                        if (_0x1c67b9.class) {
                            _0x4410c4.className = _0x1c67b9.class;
                        }
                        if (_0x1c67b9.appendID) {
                            getEl(_0x1c67b9.appendID).appendChild(_0x4410c4);
                        }
                        this.divElement = _0x4410c4;
                        let _0x564cec = new _0x5f0c06(_0x4410c4);
                        if (typeof _0x26db32 == "function") {
                            _0x26db32(_0x564cec);
                        }
                    };
                }
                set(_0x2c9ac2) {
                    this.element = getEl(_0x2c9ac2);
                    this.action = new _0x5f0c06(this.element);
                }
                resetHTML(_0x5255c8) {
                    if (_0x5255c8) {
                        this.element.innerHTML = "";
                    } else {
                        this.element.innerHTML = "";
                    }
                }
                setStyle(_0x4faac3) {
                    this.element.style = _0x4faac3;
                }
                setCSS(_0x2550d4) {
                    this.action.add("<style>" + _0x2550d4 + "</style>");
                }
            };
            let _0x393d99 = new _0x3893fe();
            let _0x101859 = document.createElement("div");
            _0x101859.id = "nightMode";
            document.body.appendChild(_0x101859);
            let _0x1c242c = document.createElement("div");
            _0x1c242c.id = "menuDiv";
            document.body.appendChild(_0x1c242c);
            _0x393d99.set("menuDiv");
            _0x393d99.setStyle("\n            position: absolute;\n            left: 20px;\n            top: 20px;\ndisplay: none;\n            ");
            _0x393d99.resetHTML();
            _0x393d99.setCSS("\n            .menuClass{\n                color: #fff;\ndisplay: none;\n                font-size: 31px;\n                text-align: left;\n                padding: 10px;\n                padding-top: 7px;\n                padding-bottom: 5px;\n                width: 300px;\n                background-color: rgba(0, 0, 0, 0.25);\n                -webkit-border-radius: 4px;\n                -moz-border-radius: 4px;\n                border-radius: 4px;\n            }\n            .menuC {\n                display: none;\n                font-family: \"Hammersmith One\";\n                font-size: 12px;\n                max-height: 180px;\n                overflow-y: scroll;\n                -webkit-touch-callout: none;\n                -webkit-user-select: none;\n                -khtml-user-select: none;\n                -moz-user-select: none;\n                -ms-user-select: none;\n                user-select: none;\n            }\n            .menuB {\n                text-align: center;\n                background-color: rgb(25, 25, 25);\n                color: #fff;\n                -webkit-border-radius: 4px;\n                -moz-border-radius: 4px;\n                border-radius: 4px;\n                border: 2px solid #000;\n                cursor: pointer;\n            }\n            .menuB:hover {\n                border: 2px solid #fff;\n            }\n            .menuB:active {\n                color: rgb(25, 25, 25);\n                background-color: rgb(200, 200, 200);\n            }\n            .customText {\n                color: #000;\n                -webkit-border-radius: 4px;\n                -moz-border-radius: 4px;\n                border-radius: 4px;\n                border: 2px solid #000;\n            }\n            .customText:focus {\n                background-color: yellow;\n            }\n            .checkB {\n                position: relative;\n                top: 2px;\n                accent-color: #888;\n                cursor: pointer;\n            }\n            .Cselect {\n                -webkit-border-radius: 4px;\n                -moz-border-radius: 4px;\n                border-radius: 4px;\n                background-color: rgb(75, 75, 75);\n                color: #fff;\n                border: 1px solid #000;\n            }\n            #menuChanger {\n                position: absolute;\n                right: 10px;\ndisplay: none;\n                top: 10px;\n                background-color: rgba(0, 0, 0, 0);\n                color: #fff;\n                border: none;\n                cursor: pointer;\n            }\n            #menuChanger:hover {\n                color: #000;\n            }\n            ::-webkit-scrollbar {\n                width: 10px;\n            }\n            ::-webkit-scrollbar-track {\n                opacity: 0;\n            }\n            ::-webkit-scrollbar-thumb {\n                background-color: rgb(25, 25, 25);\n                -webkit-border-radius: 4px;\n                -moz-border-radius: 4px;\n                border-radius: 4px;\n            }\n            ::-webkit-scrollbar-thumb:active {\n                background-color: rgb(230, 230, 230);\n            }\n            ");
            _0x393d99.startDiv({
                id: "menuHeadLine",
                class: "menuClass"
            }, _0x9ddb41 => {
                _0x9ddb41.add("Mod:");
                _0x9ddb41.button({
                    id: "menuChanger",
                    class: "material-icons",
                    innerHTML: "sync",
                    onclick: "window.changeMenu()"
                });
                _0x393d99.addDiv({
                    id: "menuButtons",
                    style: "display: block; overflow-y: visible;",
                    class: "menuC",
                    appendID: "menuHeadLine"
                }, _0x2cbbab => {
                    _0x2cbbab.button({
                        class: "menuB",
                        innerHTML: "Debug",
                        onclick: "window.debug()"
                    });
                    _0x2cbbab.button({
                        class: "menuB",
                        innerHTML: "Night Mode",
                        onclick: "window.toggleNight()"
                    });
                });
                _0x393d99.addDiv({
                    id: "menuMain",
                    style: "display: block",
                    class: "menuC",
                    appendID: "menuHeadLine"
                }, _0x42be6b => {
                    _0x42be6b.button({
                        class: "menuB",
                        innerHTML: "Toggle Wasd Mode",
                        onclick: "window.wasdMode()"
                    });
                    _0x42be6b.newLine();
                    _0x42be6b.add("Weapon Grinder: ");
                    _0x42be6b.checkBox({
                        id: "weaponGrind",
                        class: "checkB",
                        onclick: "window.startGrind()"
                    });
                    _0x42be6b.newLine(2);
                    _0x393d99.addDiv({
                        style: "font-size: 20px; color: #99ee99;",
                        appendID: "menuMain"
                    }, _0x162a64 => {
                        _0x162a64.add("Developing Settings:");
                    });
                    _0x42be6b.add("New Healing Beta:");
                    _0x42be6b.checkBox({
                        id: "healingBeta",
                        class: "checkB",
                        checked: true
                    });
                    _0x42be6b.newLine();
                });
                _0x393d99.addDiv({
                    id: "menuConfig",
                    class: "menuC",
                    appendID: "menuHeadLine"
                }, _0x57079d => {
                    _0x57079d.add("AutoPlacer Placement Tick: ");
                    _0x57079d.text({
                        id: "autoPlaceTick",
                        class: "customText",
                        value: "2",
                        size: "2em",
                        maxLength: "1"
                    });
                    _0x57079d.newLine();
                    _0x57079d.add("Configs: ");
                    _0x57079d.selectMenu({
                        id: "configsChanger",
                        class: "Cselect",
                        menu: _0x42ddbd
                    });
                    _0x57079d.newLine();
                    _0x57079d.add("InstaKill Type: ");
                    _0x57079d.select({
                        id: "instaType",
                        class: "Cselect",
                        option: {
                            OneShot: {
                                id: "oneShot",
                                selected: true
                            },
                            Spammer: {
                                id: "spammer"
                            }
                        }
                    });
                    _0x57079d.newLine();
                    _0x57079d.add("AntiBull Type: ");
                    _0x57079d.select({
                        id: "antiBullType",
                        class: "Cselect",
                        option: {
                            "Disable AntiBull": {
                                id: "noab",
                                selected: true
                            },
                            "When Reloaded": {
                                id: "abreload"
                            },
                            "Primary Reloaded": {
                                id: "abalway"
                            }
                        }
                    });
                    _0x57079d.newLine();
                    _0x57079d.add("Backup Nobull Insta: ");
                    _0x57079d.checkBox({
                        id: "backupNobull",
                        class: "checkB",
                        checked: true
                    });
                    _0x57079d.newLine();
                    _0x57079d.add("Turret Gear Combat Assistance: ");
                    _0x57079d.checkBox({
                        id: "turretCombat",
                        class: "checkB"
                    });
                    _0x57079d.newLine();
                    _0x57079d.add("Safe AntiSpikeTick: ");
                    _0x57079d.checkBox({
                        id: "safeAntiSpikeTick",
                        class: "checkB",
                        checked: true
                    });
                    _0x57079d.newLine();
                });
                _0x393d99.addDiv({
                    id: "menuOther",
                    class: "menuC",
                    appendID: "menuHeadLine"
                }, _0xeb1c30 => {
                    _0xeb1c30.button({
                        class: "menuB",
                        innerHTML: "Connect Bots",
                        onclick: "window.tryConnectBots()"
                    });
                    _0xeb1c30.button({
                        class: "menuB",
                        innerHTML: "Disconnect Bots",
                        onclick: "window.destroyBots()"
                    });
                    _0xeb1c30.newLine();
                    _0xeb1c30.button({
                        class: "menuB",
                        innerHTML: "Connect FBots",
                        onclick: "window.connectFillBots()"
                    });
                    _0xeb1c30.button({
                        class: "menuB",
                        innerHTML: "Disconnect FBots",
                        onclick: "window.destroyFillBots()"
                    });
                    _0xeb1c30.newLine();
                    _0xeb1c30.button({
                        class: "menuB",
                        innerHTML: "Reset Break Objects",
                        onclick: "window.resBuild()"
                    });
                    _0xeb1c30.newLine();
                    _0xeb1c30.add("Break Objects Range: ");
                    _0xeb1c30.text({
                        id: "breakRange",
                        class: "customText",
                        value: "700",
                        size: "3em",
                        maxLength: "4"
                    });
                    _0xeb1c30.newLine();
                    _0xeb1c30.add("Predict Movement Type: ");
                    _0xeb1c30.select({
                        id: "predictType",
                        class: "Cselect",
                        option: {
                            "Disable Render": {
                                id: "disableRender",
                                selected: true
                            },
                            "X/Y and 2": {
                                id: "pre2"
                            },
                            "X/Y and 3": {
                                id: "pre3"
                            }
                        }
                    });
                    _0xeb1c30.newLine();
                    _0xeb1c30.add("Render Placers: ");
                    _0xeb1c30.checkBox({
                        id: "placeVis",
                        class: "checkB",
                        checked: false
                    });
                    _0xeb1c30.newLine();
                    _0xeb1c30.add("Visuals: ");
                    _0xeb1c30.select({
                        id: "visualType",
                        class: "Cselect",
                        option: {
                            "Old Shit": {
                                id: "ueh1"
                            },
                            "New shit": {
                                id: "ueh2",
                                selected: true
                            }
                        }
                    });
                    _0xeb1c30.newLine(2);
                    _0xeb1c30.button({
                        class: "menuB",
                        innerHTML: "Toggle Fbots Circle",
                        onclick: "window.toggleBotsCircle()"
                    });
                    _0xeb1c30.newLine();
                    _0xeb1c30.add("Circle Rad: ");
                    _0xeb1c30.text({
                        id: "circleRad",
                        class: "customText",
                        value: "200",
                        size: "3em",
                        maxLength: "4"
                    });
                    _0xeb1c30.newLine();
                    _0xeb1c30.add("Rad Speed: ");
                    _0xeb1c30.text({
                        id: "radSpeed",
                        class: "customText",
                        value: "0.1",
                        size: "2em",
                        maxLength: "3"
                    });
                    _0xeb1c30.newLine(2);
                    _0xeb1c30.add("Cross World: ");
                    _0xeb1c30.checkBox({
                        id: "funni",
                        class: "checkB"
                    });
                    _0xeb1c30.newLine();
                });
            });
            let _0x4c0c3a = document.createElement("div");
            _0x4c0c3a.id = "menuChatDiv";
            document.body.appendChild(_0x4c0c3a);
            _0x393d99.set("menuChatDiv");
            _0x393d99.setStyle("\n            position: absolute;\n            display: none;\n            left: 0px;\n            top: 0px;\n            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.65);\n            ");
            _0x393d99.resetHTML();
            _0x393d99.setCSS("\n            .chDiv{\n                color: #fff;\n                padding: 5px;\n                width: 340px;\n                height: 280px;\n                background-color: rgba(0, 0, 0, 0.35);\n            }\n            .chMainDiv{\n                font-family: \"Ubuntu\";\n                font-size: 12px;\ndisplay: none;\n                max-height: 235px;\n                overflow-y: scroll;\n                -webkit-touch-callout: none;\n                -webkit-user-select: none;\n                -khtml-user-select: none;\n                -moz-user-select: none;\n                -ms-user-select: none;\n                user-select: none;\n            }\n            .chMainBox{\n                position: absolute;\ndisplay: none;\n                left: 5px;\n                bottom: 10px;\n                width: 335px;\n                height: 30px;\n                background-color: rgb(128, 128, 128, 0.35);\n                -webkit-border-radius: 4px;\n                -moz-border-radius: 4px;\n                border-radius: 4px;\n                color: #fff;\n                font-family: \"Ubuntu\";\n                font-size: 12px;\n                border: none;\n                outline: none;\n            }\n            ");
            _0x393d99.startDiv({
                id: "mChDiv",
                class: "chDiv"
            }, _0x4358d5 => {
                _0x393d99.addDiv({
                    id: "mChMain",
                    class: "chMainDiv",
                    appendID: "mChDiv"
                }, _0x378d5e => {});
                _0x4358d5.text({
                    id: "mChBox",
                    class: "chMainBox",
                    placeHolder: "To chat click here or press \"Enter\" key"
                });
            });
            let _0x4268e0 = getEl("mChMain");
            let _0x5e1b4b = getEl("mChBox");
            let _0xea6ee2 = false;
            let _0x55704d = 0;
            _0x5e1b4b.value = "";
            _0x5e1b4b.addEventListener("focus", () => {
                _0xea6ee2 = true;
            });
            _0x5e1b4b.addEventListener("blur", () => {
                _0xea6ee2 = false;
            });
            let _0x578dce = new Date();
            let _0x4ae110 = _0x578dce.getMinutes();
            let _0xd8f0c2 = _0x578dce.getHours();
            let _0x46df2a = _0xd8f0c2 >= 12 ? "PM" : "AM";

            function _0x3f8e1a(_0x3be0bb, _0x391950, _0x3fb2a3, _0x26d41a) {
                _0x393d99.set("menuChatDiv");
                _0x3fb2a3 = _0x3fb2a3 || "white";
                let _0x1e8b6b = "";
                if (!_0x26d41a) {
                    _0x1e8b6b += "[" + (_0xd8f0c2 % 12 + ":" + _0x4ae110 + " " + _0x46df2a) + "]";
                }
                if (_0x3be0bb) {
                    _0x1e8b6b += "" + ((!_0x26d41a ? " - " : "") + _0x3be0bb);
                }
                if (_0x391950) {
                    _0x1e8b6b += (_0x3be0bb ? ": " : !_0x26d41a ? " - " : "") + _0x391950 + "\n";
                }
                _0x393d99.addDiv({
                    id: "menuChDisp" + _0x55704d,
                    style: "color: " + _0x3fb2a3,
                    appendID: "mChMain"
                }, _0x5f1eb8 => {
                    _0x5f1eb8.add(_0x1e8b6b);
                });
                _0x4268e0.scrollTop = _0x4268e0.scrollHeight;
                _0x55704d++;
            }

            function _0x4bba60() {
                _0x4268e0.innerHTML = "";
                _0x55704d = 0;
                _0x3f8e1a(null, "Chat '/help' for a list of chat commands.", "white", 1);
            }
            _0x4bba60();
            let _0x214c6d = 0;
            let _0x15a205 = ["menuMain", "menuConfig", "menuOther"];
            window.changeMenu = function() {
                getEl(_0x15a205[_0x214c6d % _0x15a205.length]).style.display = "none";
                _0x214c6d++;
                getEl(_0x15a205[_0x214c6d % _0x15a205.length]).style.display = "block";
            };
            let _0x54d27c = document.createElement("div");
            _0x54d27c.id = "status";
            getEl("gameUI").appendChild(_0x54d27c);
            _0x393d99.set("status");
            _0x393d99.setStyle("\n            display: none;\n            position: absolute;\n            color: #ddd;\n            font: 15px Hammersmith One;\n            bottom: 215px;\n            left: 20px;\n            ");
            _0x393d99.resetHTML();
            _0x393d99.setCSS("\n            .sizing {\n                font-size: 15px;\n            }\n            .mod {\n                font-size: 15px;\n                display: inline-block;\n            }\n            ");
            _0x393d99.startDiv({
                id: "uehmod",
                class: "sizing"
            }, _0x550c81 => {
                _0x550c81.add("Ping: ");
                _0x393d99.addDiv({
                    id: "pingFps",
                    class: "mod",
                    appendID: "uehmod"
                }, _0x1bd204 => {
                    _0x1bd204.add("None");
                });
                _0x550c81.newLine();
                _0x550c81.add("Packet: ");
                _0x393d99.addDiv({
                    id: "packetStatus",
                    class: "mod",
                    appendID: "uehmod"
                }, _0x52a14c => {
                    _0x52a14c.add("None");
                });
            });
            let _0x364f66 = false;
            let _0x30f51c = undefined;
            let _0x3c5100 = undefined;
            let _0x4655d8 = false;
            let _0x211cfe = 0;
            let _0x7f3f5f = 110;
            let _0x5b229f = 1000;
            let _0x45f2f3 = {
                sec: false
            };
            let _0x39dcdf = {
                tick: 0,
                tickQueue: [],
                tickBase: function(_0x1f3c57, _0x5ed10b) {
                    if (this.tickQueue[this.tick + _0x5ed10b]) {
                        this.tickQueue[this.tick + _0x5ed10b].push(_0x1f3c57);
                    } else {
                        this.tickQueue[this.tick + _0x5ed10b] = [_0x1f3c57];
                    }
                },
                tickRate: 1000 / _0x18564b.serverUpdateRate,
                tickSpeed: 0,
                lastTick: performance.now()
            };
            let _0xa824bf = false;
            let _0x1b1afb = {
                last: 0,
                time: 0,
                ltime: 0
            };
            let _0x5232f7 = undefined;
            let _0x2d669e = ["cc", 1, "__proto__"];
            WebSocket.prototype.nsend = WebSocket.prototype.send;
            WebSocket.prototype.send = function(_0x302844) {
                if (!_0x30f51c) {
                    _0x30f51c = this;
                    _0x30f51c.addEventListener("message", function(_0x34c855) {
                        _0x5c6ffa(_0x34c855);
                    });
                    _0x30f51c.addEventListener("close", _0x4b77ee => {
                        if (_0x4b77ee.code == 4001) {
                            window.location.reload();
                        }
                    });
                }
                if (_0x30f51c == this) {
                    _0xa824bf = false;
                    let _0x323159 = new Uint8Array(_0x302844);
                    let _0x5b28dd = window.msgpack.decode(_0x323159);
                    let _0xfb2a7e = _0x5b28dd[0];
                    _0x323159 = _0x5b28dd[1];
                    if (_0xfb2a7e == "6") {
                        if (_0x323159[0]) {
                            let _0x5d268f = [];
                            let _0x5aaf6c;
                            _0x5d268f.forEach(_0xb0c7a4 => {
                                if (_0x323159[0].indexOf(_0xb0c7a4) > -1) {
                                    _0x5aaf6c = "";
                                    for (let _0x5df1fc = 0; _0x5df1fc < _0xb0c7a4.length; ++_0x5df1fc) {
                                        if (_0x5df1fc == 1) {
                                            _0x5aaf6c += String.fromCharCode(0);
                                        }
                                        _0x5aaf6c += _0xb0c7a4[_0x5df1fc];
                                    }
                                    let _0x159773 = new RegExp(_0xb0c7a4, "g");
                                    _0x323159[0] = _0x323159[0].replace(_0x159773, _0x5aaf6c);
                                }
                            });
                            _0x323159[0] = _0x323159[0].slice(0, 30);
                        }
                    } else if (_0xfb2a7e == "L") {
                        _0x323159[0] = _0x323159[0] + String.fromCharCode(0).repeat(7);
                        _0x323159[0] = _0x323159[0].slice(0, 7);
                    } else if (_0xfb2a7e == "M") {
                        _0x323159[0].name = _0x323159[0].name == "" ? "unknown" : _0x323159[0].name;
                        _0x323159[0].moofoll = true;
                        _0x323159[0].skin = _0x323159[0].skin == 10 ? "__proto__" : _0x323159[0].skin;
                        _0x2d669e = [_0x323159[0].name, _0x323159[0].moofoll, _0x323159[0].skin];
                    } else if (_0xfb2a7e == "D") {
                        if (_0x541fa4.lastDir == _0x323159[0] || [null, undefined].includes(_0x323159[0])) {
                            _0xa824bf = true;
                        } else {
                            _0x541fa4.lastDir = _0x323159[0];
                        }
                    } else if (_0xfb2a7e == "d") {
                        if (!_0x323159[2]) {
                            _0xa824bf = true;
                        } else if (![null, undefined].includes(_0x323159[1])) {
                            _0x541fa4.lastDir = _0x323159[1];
                        }
                    } else if (_0xfb2a7e == "K") {
                        if (!_0x323159[1]) {
                            _0xa824bf = true;
                        }
                    } else if (_0xfb2a7e == "14") {
                        _0x53f820.wait = !_0x53f820.wait;
                        _0xa824bf = true;
                    } else if (_0xfb2a7e == "a") {
                        if (_0x323159[1]) {
                            if (_0x40ec6a.moveDir == _0x323159[0]) {
                                _0xa824bf = true;
                            }
                            _0x40ec6a.moveDir = _0x323159[0];
                        } else {
                            _0xa824bf = true;
                        }
                    }
                    if (!_0xa824bf) {
                        let _0x209ca4 = window.msgpack.encode([_0xfb2a7e, _0x323159]);
                        this.nsend(_0x209ca4);
                        if (!_0x45f2f3.sec) {
                            _0x45f2f3.sec = true;
                            setTimeout(() => {
                                _0x45f2f3.sec = false;
                                _0x211cfe = 0;
                            }, _0x5b229f);
                        }
                        _0x211cfe++;
                    }
                } else {
                    this.nsend(_0x302844);
                }
            };

            function _0x3a2c8f(_0x25e7ce) {
                let _0x32c77f = Array.prototype.slice.call(arguments, 1);
                let _0x4641f9 = window.msgpack.encode([_0x25e7ce, _0x32c77f]);
                _0x30f51c.send(_0x4641f9);
            }

            function _0x5da602(_0x104848) {
                let _0x36df1c = Array.prototype.slice.call(arguments, 1);
                let _0x36be35 = window.msgpack.encode([_0x104848, _0x36df1c]);
                _0x30f51c.nsend(_0x36be35);
            }
            window.leave = function() {
                _0x5da602("kys", {
                    "frvr is so bad": true,
                    "sidney is too good": true,
                    "dev are too weak": true
                });
            };
            let _0x36e03b = {
                send: _0x3a2c8f
            };

            function _0x5c6ffa(_0x1aabb3) {
                let _0x784cf0 = new Uint8Array(_0x1aabb3.data);
                let _0x4bc22b = window.msgpack.decode(_0x784cf0);
                let _0x53b3ff = _0x4bc22b[0];
                _0x784cf0 = _0x4bc22b[1];
                let _0x2613b2 = {
                    A: _0x2b9c67,
                    C: _0x2c6773,
                    D: _0x2b6b03,
                    E: _0x1e6c12,
                    a: _0x5b09a3,
                    G: _0x2fdfb1,
                    H: _0x5cc5e8,
                    I: _0x199cd5,
                    J: _0x304256,
                    K: _0x37a667,
                    L: _0x4f9582,
                    M: _0x4c29a9,
                    N: _0x4aadb7,
                    O: _0x42ab0e,
                    P: _0x34d441,
                    Q: _0x34d73c,
                    R: _0x5bd063,
                    S: _0x421008,
                    T: _0x200c34,
                    U: _0x117375,
                    V: _0xe016b9,
                    X: _0x12f424,
                    Y: _0x17b42d,
                    2: _0x559ae1,
                    3: _0x476dfe,
                    4: _0x2671ca,
                    5: _0x547bd3,
                    6: _0x4df933,
                    7: _0x46ce32,
                    8: _0x4c21f,
                    9: _0x1ba5b4
                };
                if (_0x53b3ff == "io-init") {
                    _0x3c5100 = _0x784cf0[0];
                } else if (_0x2613b2[_0x53b3ff]) {
                    _0x2613b2[_0x53b3ff].apply(undefined, _0x784cf0);
                }
            }
            var _0x53fcc1 = Math.PI;
            var _0x1327ef = _0x53fcc1 * 2;
            var _0x36c4b0 = _0x53fcc1 * 3;
            Math.lerpAngle = function(_0x1d8f6b, _0x2eb745, _0x4836f3) {
                let _0x1dae89 = Math.abs(_0x2eb745 - _0x1d8f6b);
                if (_0x1dae89 > Math.PI) {
                    if (_0x1d8f6b > _0x2eb745) {
                        _0x2eb745 += Math.PI * 2;
                    } else {
                        _0x1d8f6b += Math.PI * 2;
                    }
                }
                let _0x3ad0c7 = _0x2eb745 + (_0x1d8f6b - _0x2eb745) * _0x4836f3;
                if (_0x3ad0c7 >= 0 && _0x3ad0c7 <= Math.PI * 2) {
                    return _0x3ad0c7;
                }
                return _0x3ad0c7 % (Math.PI * 2);
            };
            CanvasRenderingContext2D.prototype.roundRect = function(_0x1822f2, _0x2db04c, _0x5f3a55, _0x18f91d, _0x62484b) {
                if (_0x5f3a55 < _0x62484b * 2) {
                    _0x62484b = _0x5f3a55 / 2;
                }
                if (_0x18f91d < _0x62484b * 2) {
                    _0x62484b = _0x18f91d / 2;
                }
                if (_0x62484b < 0) {
                    _0x62484b = 0;
                }
                this.beginPath();
                this.moveTo(_0x1822f2 + _0x62484b, _0x2db04c);
                this.arcTo(_0x1822f2 + _0x5f3a55, _0x2db04c, _0x1822f2 + _0x5f3a55, _0x2db04c + _0x18f91d, _0x62484b);
                this.arcTo(_0x1822f2 + _0x5f3a55, _0x2db04c + _0x18f91d, _0x1822f2, _0x2db04c + _0x18f91d, _0x62484b);
                this.arcTo(_0x1822f2, _0x2db04c + _0x18f91d, _0x1822f2, _0x2db04c, _0x62484b);
                this.arcTo(_0x1822f2, _0x2db04c, _0x1822f2 + _0x5f3a55, _0x2db04c, _0x62484b);
                this.closePath();
                return this;
            };
            let _0x45a189 = [];
            let _0x45aa6e = [];
            let _0x5795c8 = [];
            let _0x4d7cfa = [];
            let _0x8b521c = [];
            let _0x207b6e = [];
            let _0x40c6a3 = [];
            let _0x171f5f = [];
            let _0x14dce3 = [];
            let _0x40ec6a;
            let _0x453339;
            let _0x1d199f;
            let _0x4d42b6 = [];
            let _0x89b1ee = [];
            let _0x5f501e = [];
            let _0x541fa4 = {
                reloaded: false,
                waitHit: 0,
                autoAim: false,
                revAim: false,
                ageInsta: true,
                reSync: false,
                bullTick: 0,
                anti0Tick: 0,
                antiSync: false,
                safePrimary: function(_0x574a76) {
                    return [0, 8].includes(_0x574a76.primaryIndex);
                },
                safeSecondary: function(_0x33dc44) {
                    return [10, 11, 14].includes(_0x33dc44.secondaryIndex);
                },
                lastDir: 0,
                autoPush: false,
                pushData: {}
            };

            function _0x29112f(_0x1e2c04, _0x48a79f) {
                return _0x1e2c04.find(_0x81a91 => _0x81a91.id == _0x48a79f);
            }

            function _0x5adecb(_0x1e57dc, _0x537b59) {
                return _0x1e57dc.find(_0x43eb8b => _0x43eb8b.sid == _0x537b59);
            }

            function _0x123103(_0x34cc7d) {
                return _0x29112f(_0x5795c8, _0x34cc7d);
            }

            function _0x44509b(_0x2b1eaa) {
                return _0x5adecb(_0x5795c8, _0x2b1eaa);
            }

            function _0x2bc1dd(_0x2f400c) {
                return _0x5adecb(_0x45aa6e, _0x2f400c);
            }

            function _0x5fb95d(_0x3d7e82) {
                return _0x5adecb(_0x207b6e, _0x3d7e82);
            }

            function _0x52cc69(_0x4b90f7) {
                return _0x5adecb(_0x207b6e, _0x4b90f7);
            }
            let _0x30063b = getEl("gameName");
            let _0x42a8a3 = getEl("adCard");
            let _0x2add49 = getEl("promoImgHolder");
            _0x2add49.remove();
            let _0x56a8f9 = getEl("chatButton");
            _0x56a8f9.remove();
            let _0x538af4 = getEl("gameCanvas");
            let _0x5c2ea7 = _0x538af4.getContext("2d");
            let _0x3dbb5b = getEl("mapDisplay");
            let _0xf8601d = _0x3dbb5b.getContext("2d");
            _0x3dbb5b.width = 300;
            _0x3dbb5b.height = 300;
            let _0x1c0e6f = getEl("storeMenu");
            let _0x499838 = getEl("storeHolder");
            let _0x1f8961 = getEl("upgradeHolder");
            let _0x59eab6 = getEl("upgradeCounter");
            let _0x25379b = getEl("chatBox");
            _0x25379b.autocomplete = "off";
            _0x25379b.style.textAlign = "center";
            _0x25379b.style.width = "18em";
            let _0x2b22da = getEl("chatHolder");
            let _0x415a32 = getEl("actionBar");
            let _0x4293d7 = getEl("leaderboardData");
            let _0x525bd7 = getEl("itemInfoHolder");
            let _0x471e1f = getEl("menuCardHolder");
            let _0xd3d16c = getEl("mainMenu");
            let _0x4d12a9 = getEl("diedText");
            let _0x29e8d6;
            let _0xcf3647;
            let _0x12111d = _0x18564b.maxScreenWidth;
            let _0x4483d4 = _0x18564b.maxScreenHeight;
            let _0x398f37 = 1;
            let _0x2618f8;
            let _0x562079;
            let _0x1feb99 = performance.now();
            let _0x2f0e10;
            let _0x2b9101;
            var _0x5883e9 = {
                id: -1,
                startX: 0,
                startY: 0,
                currentX: 0,
                currentY: 0
            };
            let _0x42d66f = undefined;
            let _0x3802db;
            let _0x2ebec6 = 0;
            let _0x3fa6e4 = 0;
            let _0x2cb485 = getEl("allianceMenu");
            let _0x4bf0c3 = 1;
            let _0x576849 = 0;
            let _0x2dca67 = "#525252";
            let _0x326147 = "#3d3f42";
            let _0x9b9370 = 5.5;
            let _0x31692a = false;
            let _0x1d14a7 = true;
            let _0x38a50d = {};
            let _0x3f4ab1 = {
                87: [0, -1],
                38: [0, -1],
                83: [0, 1],
                40: [0, 1],
                65: [-1, 0],
                37: [-1, 0],
                68: [1, 0],
                39: [1, 0]
            };

            function _0xb98cd1() {
                _0x38a50d = {};
                _0x36e03b.send("e");
            }
            let _0x1c2e52 = 0;
            let _0x54d918 = false;
            let _0x2b3df3 = {};
            let _0x241376 = {
                place: 0,
                placeSpawnPads: 0
            };
            let _0x3adf43;
            let _0x144733 = [];
            let _0x2c7097 = true;
            window.onblur = function() {
                _0x2c7097 = false;
            };
            window.onfocus = function() {
                _0x2c7097 = true;
                if (_0x40ec6a && _0x40ec6a.alive) {
                    _0xb98cd1();
                }
            };
            let _0xfb6063 = [];
            let _0x17a9a9 = [];
            class _0x2b333c {
                constructor() {
                    let _0x359b3b = Math.abs;
                    let _0x1ea073 = Math.cos;
                    let _0x33fdba = Math.sin;
                    let _0x2b5c17 = Math.pow;
                    let _0x26e1a5 = Math.sqrt;
                    let _0xa4236 = Math.atan2;
                    let _0x2d10f5 = Math.PI;
                    let _0x516122 = this;
                    this.round = function(_0x525adf, _0x575e5a) {
                        return Math.round(_0x525adf * _0x575e5a) / _0x575e5a;
                    };
                    this.toRad = function(_0x16f5b8) {
                        return _0x16f5b8 * (_0x2d10f5 / 180);
                    };
                    this.toAng = function(_0x20ce29) {
                        return _0x20ce29 / (_0x2d10f5 / 180);
                    };
                    this.randInt = function(_0x508e84, _0x1333dc) {
                        return Math.floor(Math.random() * (_0x1333dc - _0x508e84 + 1)) + _0x508e84;
                    };
                    this.randFloat = function(_0xbef30e, _0x1a75d1) {
                        return Math.random() * (_0x1a75d1 - _0xbef30e + 1) + _0xbef30e;
                    };
                    this.lerp = function(_0x509f62, _0x5de502, _0xabc768) {
                        return _0x509f62 + (_0x5de502 - _0x509f62) * _0xabc768;
                    };
                    this.decel = function(_0x750ac6, _0x3c4cd7) {
                        if (_0x750ac6 > 0) {
                            _0x750ac6 = Math.max(0, _0x750ac6 - _0x3c4cd7);
                        } else if (_0x750ac6 < 0) {
                            _0x750ac6 = Math.min(0, _0x750ac6 + _0x3c4cd7);
                        }
                        return _0x750ac6;
                    };
                    this.getDistance = function(_0x5d2577, _0x413002, _0x4692fb, _0x2c740e) {
                        return _0x26e1a5((_0x4692fb -= _0x5d2577) * _0x4692fb + (_0x2c740e -= _0x413002) * _0x2c740e);
                    };
                    this.getDist = function(_0x598b6b, _0x325a3e, _0x1cb71f, _0x552b44) {
                        let _0x3b2f77 = {
                            x: _0x1cb71f == 0 ? _0x598b6b.x : _0x1cb71f == 1 ? _0x598b6b.x1 : _0x1cb71f == 2 ? _0x598b6b.x2 : _0x1cb71f == 3 && _0x598b6b.x3,
                            y: _0x1cb71f == 0 ? _0x598b6b.y : _0x1cb71f == 1 ? _0x598b6b.y1 : _0x1cb71f == 2 ? _0x598b6b.y2 : _0x1cb71f == 3 && _0x598b6b.y3
                        };
                        let _0x42b3bb = {
                            x: _0x552b44 == 0 ? _0x325a3e.x : _0x552b44 == 1 ? _0x325a3e.x1 : _0x552b44 == 2 ? _0x325a3e.x2 : _0x552b44 == 3 && _0x325a3e.x3,
                            y: _0x552b44 == 0 ? _0x325a3e.y : _0x552b44 == 1 ? _0x325a3e.y1 : _0x552b44 == 2 ? _0x325a3e.y2 : _0x552b44 == 3 && _0x325a3e.y3
                        };
                        return _0x26e1a5((_0x42b3bb.x -= _0x3b2f77.x) * _0x42b3bb.x + (_0x42b3bb.y -= _0x3b2f77.y) * _0x42b3bb.y);
                    };
                    this.getDirection = function(_0x99b4cb, _0x577281, _0x240b87, _0x47f482) {
                        return _0xa4236(_0x577281 - _0x47f482, _0x99b4cb - _0x240b87);
                    };
                    this.getDirect = function(_0x334880, _0x4ff63d, _0x578d5d, _0x280f68) {
                        let _0x2662eb = {
                            x: _0x578d5d == 0 ? _0x334880.x : _0x578d5d == 1 ? _0x334880.x1 : _0x578d5d == 2 ? _0x334880.x2 : _0x578d5d == 3 && _0x334880.x3,
                            y: _0x578d5d == 0 ? _0x334880.y : _0x578d5d == 1 ? _0x334880.y1 : _0x578d5d == 2 ? _0x334880.y2 : _0x578d5d == 3 && _0x334880.y3
                        };
                        let _0x4c189d = {
                            x: _0x280f68 == 0 ? _0x4ff63d.x : _0x280f68 == 1 ? _0x4ff63d.x1 : _0x280f68 == 2 ? _0x4ff63d.x2 : _0x280f68 == 3 && _0x4ff63d.x3,
                            y: _0x280f68 == 0 ? _0x4ff63d.y : _0x280f68 == 1 ? _0x4ff63d.y1 : _0x280f68 == 2 ? _0x4ff63d.y2 : _0x280f68 == 3 && _0x4ff63d.y3
                        };
                        return _0xa4236(_0x2662eb.y - _0x4c189d.y, _0x2662eb.x - _0x4c189d.x);
                    };
                    this.getAngleDist = function(_0x2d6b2d, _0x32c371) {
                        let _0x107bbc = _0x359b3b(_0x32c371 - _0x2d6b2d) % (_0x2d10f5 * 2);
                        if (_0x107bbc > _0x2d10f5) {
                            return _0x2d10f5 * 2 - _0x107bbc;
                        } else {
                            return _0x107bbc;
                        }
                    };
                    this.isNumber = function(_0x142aa8) {
                        return typeof _0x142aa8 == "number" && !isNaN(_0x142aa8) && isFinite(_0x142aa8);
                    };
                    this.isString = function(_0x3d6e99) {
                        return _0x3d6e99 && typeof _0x3d6e99 == "string";
                    };
                    this.kFormat = function(_0x359f6e) {
                        if (_0x359f6e > 999) {
                            return (_0x359f6e / 1000).toFixed(1) + "k";
                        } else {
                            return _0x359f6e;
                        }
                    };
                    this.sFormat = function(_0x8dce92) {
                        let _0x40e694 = [{
                            num: 1000,
                            string: "k"
                        }, {
                            num: 1000000,
                            string: "m"
                        }, {
                            num: 1000000000,
                            string: "b"
                        }, {
                            num: 1000000000000,
                            string: "q"
                        }].reverse();
                        let _0x393817 = _0x40e694.find(_0x36ac79 => _0x8dce92 >= _0x36ac79.num);
                        if (!_0x393817) {
                            return _0x8dce92;
                        }
                        return (_0x8dce92 / _0x393817.num).toFixed(1) + _0x393817.string;
                    };
                    this.capitalizeFirst = function(_0x368fa3) {
                        return _0x368fa3.charAt(0).toUpperCase() + _0x368fa3.slice(1);
                    };
                    this.fixTo = function(_0x5216f6, _0x1aa453) {
                        return parseFloat(_0x5216f6.toFixed(_0x1aa453));
                    };
                    this.sortByPoints = function(_0x211e20, _0x302ce9) {
                        return parseFloat(_0x302ce9.points) - parseFloat(_0x211e20.points);
                    };
                    this.lineInRect = function(_0x40927d, _0x48dd3d, _0x4bdb50, _0x5840ca, _0x4b37d2, _0x1b45dd, _0x176cb6, _0x29e0de) {
                        let _0x43f1f1 = _0x4b37d2;
                        let _0x2a3ae2 = _0x176cb6;
                        if (_0x4b37d2 > _0x176cb6) {
                            _0x43f1f1 = _0x176cb6;
                            _0x2a3ae2 = _0x4b37d2;
                        }
                        if (_0x2a3ae2 > _0x4bdb50) {
                            _0x2a3ae2 = _0x4bdb50;
                        }
                        if (_0x43f1f1 < _0x40927d) {
                            _0x43f1f1 = _0x40927d;
                        }
                        if (_0x43f1f1 > _0x2a3ae2) {
                            return false;
                        }
                        let _0x1658d4 = _0x1b45dd;
                        let _0x263bb9 = _0x29e0de;
                        let _0x3016d8 = _0x176cb6 - _0x4b37d2;
                        if (Math.abs(_0x3016d8) > 1e-7) {
                            let _0x4df937 = (_0x29e0de - _0x1b45dd) / _0x3016d8;
                            let _0x3f33ab = _0x1b45dd - _0x4df937 * _0x4b37d2;
                            _0x1658d4 = _0x4df937 * _0x43f1f1 + _0x3f33ab;
                            _0x263bb9 = _0x4df937 * _0x2a3ae2 + _0x3f33ab;
                        }
                        if (_0x1658d4 > _0x263bb9) {
                            let _0x20731e = _0x263bb9;
                            _0x263bb9 = _0x1658d4;
                            _0x1658d4 = _0x20731e;
                        }
                        if (_0x263bb9 > _0x5840ca) {
                            _0x263bb9 = _0x5840ca;
                        }
                        if (_0x1658d4 < _0x48dd3d) {
                            _0x1658d4 = _0x48dd3d;
                        }
                        if (_0x1658d4 > _0x263bb9) {
                            return false;
                        }
                        return true;
                    };
                    this.containsPoint = function(_0x45c033, _0x34f72d, _0x2d1199) {
                        let _0x55542a = _0x45c033.getBoundingClientRect();
                        let _0x13bbea = _0x55542a.left + window.scrollX;
                        let _0xc9610a = _0x55542a.top + window.scrollY;
                        let _0x4b7ea7 = _0x55542a.width;
                        let _0x1d6615 = _0x55542a.height;
                        let _0x483272 = _0x34f72d > _0x13bbea && _0x34f72d < _0x13bbea + _0x4b7ea7;
                        let _0x59c20a = _0x2d1199 > _0xc9610a && _0x2d1199 < _0xc9610a + _0x1d6615;
                        return _0x483272 && _0x59c20a;
                    };
                    this.mousifyTouchEvent = function(_0xf7242c) {
                        let _0x19262c = _0xf7242c.changedTouches[0];
                        _0xf7242c.screenX = _0x19262c.screenX;
                        _0xf7242c.screenY = _0x19262c.screenY;
                        _0xf7242c.clientX = _0x19262c.clientX;
                        _0xf7242c.clientY = _0x19262c.clientY;
                        _0xf7242c.pageX = _0x19262c.pageX;
                        _0xf7242c.pageY = _0x19262c.pageY;
                    };
                    this.hookTouchEvents = function(_0x2b2008, _0x1ae581) {
                        let _0x47410a = !_0x1ae581;
                        let _0x453ac2 = false;
                        let _0x15e9ce = false;
                        _0x2b2008.addEventListener("touchstart", this.checkTrusted(_0x1c9f9c), _0x15e9ce);
                        _0x2b2008.addEventListener("touchmove", this.checkTrusted(_0x527674), _0x15e9ce);
                        _0x2b2008.addEventListener("touchend", this.checkTrusted(_0x82d53f), _0x15e9ce);
                        _0x2b2008.addEventListener("touchcancel", this.checkTrusted(_0x82d53f), _0x15e9ce);
                        _0x2b2008.addEventListener("touchleave", this.checkTrusted(_0x82d53f), _0x15e9ce);

                        function _0x1c9f9c(_0x5aa33a) {
                            _0x516122.mousifyTouchEvent(_0x5aa33a);
                            window.setUsingTouch(true);
                            if (_0x47410a) {
                                _0x5aa33a.preventDefault();
                                _0x5aa33a.stopPropagation();
                            }
                            if (_0x2b2008.onmouseover) {
                                _0x2b2008.onmouseover(_0x5aa33a);
                            }
                            _0x453ac2 = true;
                        }

                        function _0x527674(_0x16f159) {
                            _0x516122.mousifyTouchEvent(_0x16f159);
                            window.setUsingTouch(true);
                            if (_0x47410a) {
                                _0x16f159.preventDefault();
                                _0x16f159.stopPropagation();
                            }
                            if (_0x516122.containsPoint(_0x2b2008, _0x16f159.pageX, _0x16f159.pageY)) {
                                if (!_0x453ac2) {
                                    if (_0x2b2008.onmouseover) {
                                        _0x2b2008.onmouseover(_0x16f159);
                                    }
                                    _0x453ac2 = true;
                                }
                            } else if (_0x453ac2) {
                                if (_0x2b2008.onmouseout) {
                                    _0x2b2008.onmouseout(_0x16f159);
                                }
                                _0x453ac2 = false;
                            }
                        }

                        function _0x82d53f(_0x661bd6) {
                            _0x516122.mousifyTouchEvent(_0x661bd6);
                            window.setUsingTouch(true);
                            if (_0x47410a) {
                                _0x661bd6.preventDefault();
                                _0x661bd6.stopPropagation();
                            }
                            if (_0x453ac2) {
                                if (_0x2b2008.onclick) {
                                    _0x2b2008.onclick(_0x661bd6);
                                }
                                if (_0x2b2008.onmouseout) {
                                    _0x2b2008.onmouseout(_0x661bd6);
                                }
                                _0x453ac2 = false;
                            }
                        }
                    };
                    this.removeAllChildren = function(_0x2b7556) {
                        while (_0x2b7556.hasChildNodes()) {
                            _0x2b7556.removeChild(_0x2b7556.lastChild);
                        }
                    };
                    this.generateElement = function(_0x56858b) {
                        let _0x3ae4d8 = document.createElement(_0x56858b.tag || "div");

                        function _0x35379b(_0x43e0bd, _0x4376c9) {
                            if (_0x56858b[_0x43e0bd]) {
                                _0x3ae4d8[_0x4376c9] = _0x56858b[_0x43e0bd];
                            }
                        }
                        _0x35379b("text", "textContent");
                        _0x35379b("html", "innerHTML");
                        _0x35379b("class", "className");
                        for (let _0x3e8d59 in _0x56858b) {
                            switch (_0x3e8d59) {
                                case "tag":
                                case "text":
                                case "html":
                                case "class":
                                case "style":
                                case "hookTouch":
                                case "parent":
                                case "children":
                                    continue;
                                default:
                                    break;
                            }
                            _0x3ae4d8[_0x3e8d59] = _0x56858b[_0x3e8d59];
                        }
                        if (_0x3ae4d8.onclick) {
                            _0x3ae4d8.onclick = this.checkTrusted(_0x3ae4d8.onclick);
                        }
                        if (_0x3ae4d8.onmouseover) {
                            _0x3ae4d8.onmouseover = this.checkTrusted(_0x3ae4d8.onmouseover);
                        }
                        if (_0x3ae4d8.onmouseout) {
                            _0x3ae4d8.onmouseout = this.checkTrusted(_0x3ae4d8.onmouseout);
                        }
                        if (_0x56858b.style) {
                            _0x3ae4d8.style.cssText = _0x56858b.style;
                        }
                        if (_0x56858b.hookTouch) {
                            this.hookTouchEvents(_0x3ae4d8);
                        }
                        if (_0x56858b.parent) {
                            _0x56858b.parent.appendChild(_0x3ae4d8);
                        }
                        if (_0x56858b.children) {
                            for (let _0x48e177 = 0; _0x48e177 < _0x56858b.children.length; _0x48e177++) {
                                _0x3ae4d8.appendChild(_0x56858b.children[_0x48e177]);
                            }
                        }
                        return _0x3ae4d8;
                    };
                    this.checkTrusted = function(_0x2d84c4) {
                        return function(_0x5c5018) {
                            if (_0x5c5018 && _0x5c5018 instanceof Event && (_0x5c5018 && typeof _0x5c5018.isTrusted == "boolean" ? _0x5c5018.isTrusted : true)) {
                                _0x2d84c4(_0x5c5018);
                            } else {}
                        };
                    };
                    this.randomString = function(_0x72423c) {
                        let _0xc72907 = "";
                        let _0x147148 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
                        for (let _0x1a476d = 0; _0x1a476d < _0x72423c; _0x1a476d++) {
                            _0xc72907 += _0x147148.charAt(Math.floor(Math.random() * _0x147148.length));
                        }
                        return _0xc72907;
                    };
                    this.countInArray = function(_0x1ea70a, _0x61afb8) {
                        let _0x509dce = 0;
                        for (let _0x4d6285 = 0; _0x4d6285 < _0x1ea70a.length; _0x4d6285++) {
                            if (_0x1ea70a[_0x4d6285] === _0x61afb8) {
                                _0x509dce++;
                            }
                        }
                        return _0x509dce;
                    };
                    this.hexToRgb = function(_0x52e799) {
                        return _0x52e799.slice(1).match(/.{1,2}/g).map(_0x305ce3 => parseInt(_0x305ce3, 16));
                    };
                    this.getRgb = function(_0x94e766, _0x52d7f8, _0x18943a) {
                        return [_0x94e766 / 255, _0x52d7f8 / 255, _0x18943a / 255].join(", ");
                    };
                }
            };
            class _0x5c6fae {
                constructor() {
                    this.init = function(_0x3b1f03, _0x13418, _0x9dbafb, _0xc402c0, _0x449763, _0x1b534a, _0x23b2f0) {
                        this.x = _0x3b1f03;
                        this.y = _0x13418;
                        this.color = _0x23b2f0;
                        this.scale = _0x9dbafb;
                        this.startScale = this.scale;
                        this.maxScale = _0x9dbafb * 1.5;
                        this.scaleSpeed = 0.7;
                        this.speed = _0xc402c0;
                        this.life = _0x449763;
                        this.text = _0x1b534a;
                        this.acc = 1;
                        this.alpha = 0;
                        this.maxLife = _0x449763;
                        this.ranX = _0x1b05b9.randFloat(-1, 1);
                    };
                    this.update = function(_0x1c930d) {
                        if (this.life) {
                            this.life -= _0x1c930d;
                            if (_0x18564b.anotherVisual) {
                                this.y -= this.speed * _0x1c930d * this.acc;
                                this.acc -= _0x1c930d / (this.maxLife / 2.5);
                                if (this.life <= 200) {
                                    if (this.alpha > 0) {
                                        this.alpha = Math.max(0, this.alpha - _0x1c930d / 300);
                                    }
                                } else if (this.alpha < 1) {
                                    this.alpha = Math.min(1, this.alpha + _0x1c930d / 100);
                                }
                                this.x += this.ranX;
                            } else {
                                this.y -= this.speed * _0x1c930d;
                            }
                            this.scale += this.scaleSpeed * _0x1c930d;
                            if (this.scale >= this.maxScale) {
                                this.scale = this.maxScale;
                                this.scaleSpeed *= -1;
                            } else if (this.scale <= this.startScale) {
                                this.scale = this.startScale;
                                this.scaleSpeed = 0;
                            }
                            if (this.life <= 0) {
                                this.life = 0;
                            }
                        }
                    };
                    this.render = function(_0x4de26b, _0x310d7c, _0x4191c9) {
                        _0x4de26b.lineWidth = 10;
                        _0x4de26b.fillStyle = this.color;
                        _0x4de26b.font = this.scale + "px Calibri";
                        _0x4de26b.strokeText(this.text, this.x - _0x310d7c, this.y - _0x4191c9);
                        _0x4de26b.fillText(this.text, this.x - _0x310d7c, this.y - _0x4191c9);
                        _0x4de26b.globalAlpha = 1;
                    };
                }
            };
            class _0x51628f {
                constructor() {
                    this.texts = [];
                    this.stack = [];
                    this.update = function(_0x1489a2, _0x188b18, _0x43c377, _0x1e02a7) {
                        _0x188b18.textBaseline = "middle";
                        _0x188b18.textAlign = "center";
                        for (let _0x1bceb3 = 0; _0x1bceb3 < this.texts.length; ++_0x1bceb3) {
                            if (this.texts[_0x1bceb3].life) {
                                this.texts[_0x1bceb3].update(_0x1489a2);
                                this.texts[_0x1bceb3].render(_0x188b18, _0x43c377, _0x1e02a7);
                            }
                        }
                    };
                    this.showText = function(_0x6956e1, _0x2b5732, _0x366f9c, _0x286024, _0x388de5, _0x491e4d, _0xd5121b) {
                        let _0x1d00f6;
                        for (let _0x4dcd01 = 0; _0x4dcd01 < this.texts.length; ++_0x4dcd01) {
                            if (!this.texts[_0x4dcd01].life) {
                                _0x1d00f6 = this.texts[_0x4dcd01];
                                break;
                            }
                        }
                        if (!_0x1d00f6) {
                            _0x1d00f6 = new _0x5c6fae();
                            this.texts.push(_0x1d00f6);
                        }
                        _0x1d00f6.init(_0x6956e1, _0x2b5732, _0x366f9c, _0x286024, _0x388de5, _0x491e4d, _0xd5121b);
                    };
                }
            }
            class _0x4801ee {
                constructor() {
                    this.skyfall = {
                        audio: new Audio("https://cdn.discordapp.com/attachments/1170751373374148690/1177509237509865544/Adele_Adele_-_Skyfall.mp3"),
                        chats: [
                            ["This is the end", 33000],
                            ["Hold your breath and count to 10", 38000],
                            ["Feel the Earth move and then", 44000],
                            ["Hear my heart burst again!", 50000],
                            ["For this is the end", 58000],
                            ["I've drowned and dreamt", 61200],
                            ["this moment", 63000],
                            ["So overdue, I owe them", 65400],
                            ["Swept away, I'm stolen", 69600],
                            ["Let the skyfall", 73800],
                            ["When it crumbles", 75600],
                            ["We will stand tall", 78000],
                            ["Face it all together", 80300],
                            ["Let the skyfall", 81720],
                            ["When it crumbles", 83400],
                            ["We will stand tall", 85200],
                            ["Face it all together", 87600],
                            ["At skyfall", 89700],
                            ["At skyfall", 93300],
                            ["Skyfall is where we start", 121200],
                            ["thousand miles and poles apart", 124500],
                            ["Where worlds collide", 127900],
                            ["and days are dark", 129300],
                            ["You may have my number", 130200],
                            ["You can take my name", 132000],
                            ["But you'll never have my heart", 134100],
                            ["Let the skyfall", 136750],
                            ["When it crumbles", 138600],
                            ["We will stand tall", 140400],
                            ["Face it all together", 142320],
                            ["Let the skyfall", 144000],
                            ["When it crumbles", 146520],
                            ["We will stand tall", 148380],
                            ["Face it all together", 150120],
                            ["At skyfall", 151200],
                            ["Where you go, I go", 191400],
                            ["What you see, I see", 192600],
                            ["I know I'd never be", 194400],
                            ["me without the security", 196800],
                            ["Of your loving arms", 198600],
                            ["Keeping me from harm", 201000],
                            ["Put your hand in my hand", 202800],
                            ["And we'll stand", 204600],
                            ["Let the skyfall", 206400],
                            ["When it crumbles", 208200],
                            ["We will stand tall", 210600],
                            ["Face it all together", 211800],
                            ["Let the skyfall", 214200],
                            ["When it crumbles", 240000],
                            ["We will stand tall", 241800],
                            ["Face it all together", 243900],
                            ["At skyfall", 245400],
                            ["let the skyfall", 246900],
                            ["we will stand tall", 250200],
                            ["At skyfall", 252300],
                            ["At skyfall", 252800],
                            ["Oooh", 253400]
                        ]
                    };
                    this.staywithme = {
                        audio: new Audio("https://cdn.discordapp.com/attachments/1013031910211063841/1029586481121071145/1nonly_-_Stay_With_Me_Lyrics.mp3"),
                        chats: [
                            ["Stay with me", 1159],
                            ["Stay with me", 20273],
                            ["lil' bitch, yeah", 20907],
                            ["you know that I'm your mans", 21691],
                            ["You be cappin' like a snitch", 22668],
                            ["no thots won't stand", 23857],
                            ["Two hoes, ten toes", 25156],
                            ["new guap, countin' bands", 26385],
                            ["New whip, new chips", 27692],
                            ["new kicks, Jackie Chan", 28888],
                            ["And she bad", 30141],
                            ["bad bitch throw it back", 31527],
                            ["I just hit another lick and", 32798],
                            ["she be counting all my racks", 33945],
                            ["And I be feelin' hella rich", 35193],
                            ["no Brian, hunnids stacked", 36503],
                            ["'Bouta make another hit", 37857],
                            ["goth bitch on my lap", 39117],
                            ["Stay with me, lil' bitch, yeah", 40220],
                            ["you know that I'm your mans", 41496],
                            ["You be cappin' like a snitch", 42952],
                            ["no thots won't stand", 44358],
                            ["Two hoes, ten toes", 45378],
                            ["new guap, countin' bands", 46633],
                            ["New whip, new chips", 47962],
                            ["new kicks, Jackie Chan", 49402],
                            ["And she bad", 50500],
                            ["bad bitch throw it back", 51768],
                            ["I just hit another lick and", 52993],
                            ["she be counting all my racks", 54091],
                            ["And I be feelin' hella rich", 55483],
                            ["no Brian, hunnids stacked", 56741],
                            ["'Bouta make another hit", 58088],
                            ["goth bitch on my lap", 59288],
                            ["if she fucking with me", 60569],
                            ["then you know I gotta get her", 61969],
                            ["I be feelin' like Lil Uzi", 63413],
                            ["got my mind up on the cheddar", 64329],
                            ["Footloose getting groovy with", 65866],
                            ["yo' ho, she like me better", 67130],
                            ["I ain't talkin' Ash Kaashh", 68252],
                            ["but that bitch", 69345],
                            ["she be my header", 70322],
                            ["Ayy, I'm posted up with twin", 71289],
                            ["Glocks and foreign bitches", 72099],
                            ["No fakes", 73271],
                            ["all they want is guap", 73847],
                            ["I burn bridges", 74978],
                            ["I be getting to the bag", 75874],
                            ["you still cleaning", 77061],
                            ["dirty dishes", 77775],
                            ["Two mops send shots at", 78331],
                            ["your spot with no limit", 79634],
                            ["Stay with me, lil' bitch, yeah", 80690],
                            ["you know that I'm your mans", 82227],
                            ["You be cappin' like a snitch", 83277],
                            ["no thots won't stand", 84491],
                            ["Two hoes, ten toes", 85727],
                            ["new guap, countin' bands", 87152],
                            ["New whip, new chips", 88356],
                            ["new kicks, Jackie Chan", 89480],
                            ["And she bad", 90797],
                            ["bad bitch throw it back", 91851],
                            ["I just hit another lick and", 93338],
                            ["she be counting all my racks", 94752],
                            ["And I be feelin' hella rich", 96045],
                            ["no Brian, hunnids stacked", 97184],
                            ["'Bouta make another hit", 98407],
                            ["goth bitch on my lap", 99713],
                            ["Stay with me, lil' bitch, yeah", 100910],
                            ["you know that I'm your mans", 102385],
                            ["You be cappin' like a snitch", 103510],
                            ["no thots won't stand", 104783],
                            ["Two hoes, ten toes", 105945],
                            ["new guap, countin' bands", 107235],
                            ["New whip, new chips", 108497],
                            ["new kicks, Jackie Chan", 109744],
                            ["And she bad", 110995],
                            ["bad bitch throw it back", 112387],
                            ["I just hit another lick and", 113531],
                            ["she be counting all my racks", 114939],
                            ["And I be feelin' hella rich", 116067],
                            ["no Brian, hunnids stacked", 117268],
                            ["'Bouta make another hit", 118726],
                            ["goth bitch on my lap", 119972],
                            ["Stay with me", 121136]
                        ]
                    };
                    this.legendsNeverDie = {
                        audio: new Audio("https://cdn.discordapp.com/attachments/990882830210981920/991648349608493066/Legends_Never_Die_Lyrics_Ft._Against_The_Current.mp3"),
                        chats: [
                            ["Legends Never Die", 12564],
                            ["When the world is calling you", 16471],
                            ["Can you hear them", 19616],
                            ["screaming out your-", 20958],
                            ["name?", 24132],
                            ["Legends Never Die", 25823],
                            ["They become a part of you", 29522],
                            ["Every time you bleed", 33833],
                            ["for reaching greatness", 36142],
                            ["Relentless you survive", 40086],
                            ["They never lose hope", 44050],
                            ["when everything's cold", 45532],
                            ["and the fighting's near", 46877],
                            ["It's deep in their bones", 50361],
                            ["they'll run into smoke", 52331],
                            ["when the fire is fierce", 53631],
                            ["Ohh pick yourself up cause,", 57260],
                            ["Legends Never Die!", 60520],
                            ["when the world is calling you", 64240],
                            ["Can you hear them screaming", 67740],
                            ["out your-", 69231],
                            ["name?", 72521],
                            ["Legends Never Die!", 74300],
                            ["they become a part of you", 77900],
                            ["Every time you bleed", 81620],
                            ["for reaching", 83532],
                            ["greatness", 85252],
                            ["Legends Never Die", 87880],
                            ["They're written", 91340],
                            ["down in eternity", 92440],
                            ["But you'll never see", 95140],
                            ["the price it costs,", 97432],
                            ["the scars collected", 100540],
                            ["all their lives", 101720],
                            ["When everything's lost", 105580],
                            ["They pick up their hearts", 107440],
                            ["and avenge defeat", 109320],
                            ["Before it all starts,", 112680],
                            ["they suffer through harm", 113980],
                            ["just to touch a dream", 116020],
                            ["Ohh pick yourself up cause,", 118840],
                            ["Legends Never Die!", 122200],
                            ["when the world is-", 126240],
                            ["calling you", 127730],
                            ["Can you hear them", 129760],
                            ["screaming out your-", 131320],
                            ["name?", 133320],
                            ["Legends Never Die!", 135640],
                            ["They become a part of you", 139500],
                            ["Every time you bleed", 143180],
                            ["for reaching-", 145320],
                            ["greatness", 148100],
                            ["Legends Never Die", 149440],
                            ["When the world is", 156060],
                            ["calling out", 157620],
                            ["your name", 158900],
                            ["Begging you to fight", 163320],
                            ["Pick yourself up once more", 171160],
                            ["Pick yourself up, cause", 174560],
                            ["Legends Never Die!", 176860],
                            ["when the world is", 180820],
                            ["calling you", 181500],
                            ["Can you hear them", 184400],
                            ["screaming out your-", 186600],
                            ["name?", 188300],
                            ["Legends Never Die", 190780],
                            ["They become a part of you", 194760],
                            ["Every time you bleed", 197900],
                            ["for reaching", 199300],
                            ["greatness", 201500],
                            ["Legends Never Die..", 204540]
                        ]
                    };
                    this.thetop = {
                        audio: new Audio("https://cdn.discordapp.com/attachments/919188611214229524/974478982051405934/Initial_D_5th_Stage_Soundtrack_-_The_Top.mp3"),
                        chats: [
                            ["Final lap", 39607],
                            ["I'm on top of the world", 40293],
                            ["And I will never rest", 41845],
                            ["for second again", 43192],
                            ["One more time", 45303],
                            ["I have beaten them out", 46438],
                            ["The scent of gasoline", 47828],
                            ["announces the end", 49351],
                            ["They all said", 51320],
                            ["I'd best give it up", 52316],
                            ["What a fool", 53913],
                            ["to believe their lies", 54752],
                            ["Now they've fall", 57207],
                            ["and I'm at the top", 58373],
                            ["Are you ready now to die?", 59879],
                            ["I came up from the bottom", 62924],
                            ["and into the top", 64572],
                            ["For the first time", 65813],
                            ["I feel alive", 66962],
                            ["I can fly like an eagle", 68956],
                            ["strike like a hawk", 70748],
                            ["Do you think you can survive?", 71946],
                            ["The top!", 74821],
                            ["Final turn and", 87454],
                            ["I'll settle the score", 88736],
                            ["A rubber fire", 89794],
                            ["screams into the night", 90734],
                            ["Crash and burn is", 93127],
                            ["what you're gonna do", 94471],
                            ["I am a master of", 95752],
                            ["the asphalt fight", 97250],
                            ["They all said", 99128],
                            ["I'd best give it up", 100438],
                            ["What a fool", 101743],
                            ["to believe their lies", 102673],
                            ["Now they've fall", 105251],
                            ["and I'm at the top", 106445],
                            ["Are you ready now to die?", 107891],
                            ["I came up from the bottom", 110878],
                            ["and into the top", 112544],
                            ["For the first time", 113953],
                            ["I feel alive", 114967],
                            ["I can fly like an eagle", 116928],
                            ["strike like a hawk", 118736],
                            ["Do you think you can survive?", 119907],
                            ["I came up from the bottom", 122969],
                            ["and into the top", 124635],
                            ["For the first time", 125972],
                            ["I feel alive", 126979],
                            ["I can fly like an eagle", 128989],
                            ["strike like a hawk", 130755],
                            ["Do you think you can survive?", 131906],
                            ["The top!", 134941],
                            ["I came up from the bottom", 171049],
                            ["and into the top", 172624],
                            ["For the first time", 173790],
                            ["I feel alive", 174999],
                            ["I can fly like an eagle", 176880],
                            ["strike like a hawk", 178657],
                            ["Do you think you can survive?", 179859],
                            ["I came up from the bottom", 183009],
                            ["and into the top", 184534],
                            ["For the first time", 185837],
                            ["I feel alive", 187606],
                            ["I can fly like an eagle", 188853],
                            ["strike like a hawk", 190569],
                            ["Do you think you can survive?", 191750],
                            ["The top!", 194704]
                        ]
                    };
                    this.gas = {
                        audio: new Audio("https://cdn.discordapp.com/attachments/876683706381762560/981927132202672228/e.mp3"),
                        chats: [
                            ["Ah", 16885],
                            ["(gas, gas gas)", 20000],
                            ["Ah", 24039],
                            ["Do you like my car", 28341],
                            ["my car", 31349],
                            ["m y c a r", 33137],
                            ["Guess you're ready'", 53875],
                            ["Cause I'm waiting for you", 54746],
                            ["It's gonna be so exciting!", 56201],
                            ["Got this feeling", 59363],
                            ["Really deep in my soul", 60638],
                            ["Let's get out I wanna go", 62462],
                            ["come along get it on!", 64003],
                            ["Gonna take my car", 65865],
                            ["gonna sit in", 67463],
                            ["Gonna drive alone", 69113],
                            ["'till I get you", 70348],
                            ["'Cause I'm crazy", 71831],
                            ["hot and ready", 72635],
                            ["but you'll like it!", 73624],
                            ["I wanna race for you", 74930],
                            ["shall I go now?", 76885],
                            ["Gas gas gas", 78234],
                            ["I'm gonna step on the gas", 79868],
                            ["Tonight I'll fly", 81582],
                            ["and be your lover", 83111],
                            ["Yeah yeah yeah", 84323],
                            ["I'll be so quick as a flash", 86116],
                            ["And I'll be your hero!", 87777],
                            ["Gas gas gas", 90637],
                            ["I'm gonna run as a flash", 92633],
                            ["Tonight I'll fight", 94096],
                            ["to be the winner", 95500],
                            ["Yeah yeah yeah", 96824],
                            ["I'm gonna step on the gas", 98592],
                            ["And you'll see the big show!", 100155],
                            ["Don't be lazy", 115451],
                            ["'Cause I'm burning for you", 116581],
                            ["It's like a hot sensation!", 118681],
                            ["Got this power", 121655],
                            ["That is taking me out", 122845],
                            ["Yes I've got a crush on you", 124771],
                            ["Ready now ready go!", 126452]
                        ]
                    };
                    this.dejavu = {
                        audio: new Audio("https://cdn.discordapp.com/attachments/919188611214229524/974636785101582366/DAVE_RODGERS___DEJA_VU_Official_Lyric_VideoD_INITIAL_D.mp3"),
                        chats: [
                            ["See your body", 46729],
                            ["into the moonlight", 48320],
                            ["Even if I try to cancel", 49803],
                            ["All the pictures into the mind", 52998],
                            ["There's a flashing in my eyes", 55715],
                            ["Don't you see my condition", 58299],
                            ["The fiction", 61009],
                            ["is gonna run it again", 62601],
                            ["Can't you see now illusions", 64399],
                            ["Right into your mind", 67186],
                            ["Deja vu", 71102],
                            ["I've just been", 72205],
                            ["in this place before", 72846],
                            ["Higher on the street", 74070],
                            ["And I know it's my time to go", 75226],
                            ["Calling you and", 77414],
                            ["the search is a mystery", 78540],
                            ["Standing on my feet", 80256],
                            ["It's so hard when", 81402],
                            ["I try to be me", 82361],
                            ["UOOOHH", 83974],
                            ["Deja vu", 85496],
                            ["I've just been in", 86224],
                            ["this time before", 86992],
                            ["Higher on the street", 88087],
                            ["And I know it's a place to go", 89232],
                            ["Calling you and", 91432],
                            ["the search is a mystery", 92534],
                            ["Standing on my feet", 94184],
                            ["It's so hard when", 95454],
                            ["I try to be me", 96331],
                            ["YEAHHH", 97862],
                            ["See the future", 111909],
                            ["into the present", 113614],
                            ["See my past lives", 115335],
                            ["in the distance", 116885],
                            ["Try to guess now", 118423],
                            ["what's going on", 120073],
                            ["And the band begins to play", 121129],
                            ["Don't you see my condition", 123653],
                            ["The fiction", 126436],
                            ["is gonna run it again", 128002],
                            ["Can't you see now illusions", 129709],
                            ["Right into your mind", 132703],
                            ["Deja vu", 136269],
                            ["I've just been", 137353],
                            ["in this place before", 138199],
                            ["Higher on the street", 139454],
                            ["And I know", 140683],
                            ["it's my time to go", 141457],
                            ["Calling you", 142833],
                            ["and the search is a mystery", 143741],
                            ["Standing on my feet", 145424],
                            ["It's so hard when", 146779],
                            ["I try to be me", 147596],
                            ["UOOOHH", 149231],
                            ["Deja vu", 150890],
                            ["I've just been in", 151580],
                            ["this time before", 152301],
                            ["Higher on the beat", 153484],
                            ["And I know it's", 154656],
                            ["a place to go", 155631],
                            ["Calling you", 156815],
                            ["and the search is a mystery", 158038],
                            ["Standing on my feet", 159645],
                            ["It's so hard when", 160557],
                            ["I try to be me", 161571],
                            ["YEAHHH", 163347]
                        ]
                    };
                    this.norival = {
                        audio: new Audio("https://cdn.discordapp.com/attachments/784941059066167316/977724487283912735/Nightcore_-_No_Rival_-_Lyrics.mp3"),
                        chats: [
                            ["Here and now", 11198],
                            ["you're coming up to me", 12140],
                            ["'Fore I'm lighting up the sky", 13500],
                            ["Feel the ground", 16583],
                            ["shaking underneath", 17638],
                            ["Trying to take me alive", 18855],
                            ["Oh-oh-ohhh", 21720],
                            ["Get ready for the fallout", 24012],
                            ["Oh-oh-ohhh", 26981],
                            ["Can't stop me now", 29312],
                            ["I got no rival", 31419],
                            ["I'ma find my way", 33196],
                            ["Through the blood and pain", 35172],
                            ["Game of survival", 36491],
                            ["Any time or place", 38528],
                            ["Watch 'em run away", 40492],
                            ["I got no", 41945],
                            ["I'll be standing on my own", 43651],
                            ["Never gonna take my thrown", 45499],
                            ["I got no rival", 47335],
                            ["Watch 'em run away", 49108],
                            ["I got no, no, no", 50943],
                            ["I got no, no, no rival", 52146],
                            ["No rival", 63910],
                            ["No rival", 69272],
                            ["Tell them now what you gon' do", 75032],
                            ["We can do this face to face", 77157],
                            ["Reckoning is coming in soon", 80284],
                            ["Doesn't matter what you say", 82523],
                            ["Trying to tell you", 85098],
                            ["listen to the moment", 86269],
                            ["Can't take mine", 87544],
                            ["'cause I own it", 88213],
                            ["Don't you know that", 90057],
                            ["I'm locked and I'm loaded", 91775],
                            ["You're out of focus", 93433],
                            ["Oh-oh-ohhh", 96303],
                            ["Get ready for the fallout", 98299],
                            ["Oh-oh-ohhh", 101475],
                            ["Can't stop me now", 103533],
                            ["I got no rival", 105353],
                            ["I'ma find my way", 107419],
                            ["Through the blood and pain", 109215],
                            ["Game of survival", 110747],
                            ["Any time or place", 112730],
                            ["Watch 'em run away", 114664],
                            ["I got no", 116031],
                            ["I'll be standing on my own", 117862],
                            ["Never gonna take my thrown", 119722],
                            ["I got no rival", 121376],
                            ["Watch 'em run away", 123338],
                            ["I got no, no, no", 125165],
                            ["I got no, no, no rival", 126388],
                            ["No rival", 132506],
                            ["I got no, no, no", 136063],
                            ["I got no, no, no rival", 137058],
                            ["No rival", 143220],
                            ["No rival", 159585]
                        ]
                    };
                    this.inv = {
                        audio: new Audio("https://cdn.discordapp.com/attachments/975954604451831828/980059990356279316/Crypt_x_Joey_Nato_-_Invincible_feat._soslesion_OFFICIAL_MUSIC_VIDEO.mp3"),
                        chats: [
                            ["Yeah, yeah, yeah", 3890],
                            ["Get myself into the game", 11624],
                            ["I'ma run it up anyway", 13854],
                            ["I get with the violence", 17898],
                            ["I don't think you wanna try it", 19893],
                            ["I'm so up", 22911],
                            ["I feel invincible", 23678],
                            ["I don't know", 26102],
                            ["if they get it though", 26784],
                            ["I'm so up", 28401],
                            ["I feel invincible", 29073],
                            ["Fuck what you said", 31587],
                            ["I'm invincible", 32639],
                            ["Lookin' for a break", 34483],
                            ["and now I think", 35417],
                            ["I finally caught one", 36239],
                            ["We're talkin'", 37281],
                            ["legendary status", 38092],
                            ["when it's all done", 39193],
                            ["I'm a star bitch", 40259],
                            ["if you ever saw one", 41257],
                            ["Law and Order over here", 43408],
                            ["and it's a Tommy one", 44760],
                            ["Meet me at the top", 45828],
                            ["it's goin' down", 47841],
                            ["They tryna fit in my circle", 48355],
                            ["I'm not around (Nah)", 49618],
                            ["I was down before", 50887],
                            ["but not for the count", 52516],
                            ["Shit was real heavy", 53741],
                            ["now it's dollars", 55010],
                            ["not the pound", 55590],
                            ["Tell me what you smokin'", 56879],
                            ["if you think that I'm a joke", 57801],
                            ["Only time I'm trippin'", 59455],
                            ["is when I'm out on a road", 60356],
                            ["Only droppin' joints", 62286],
                            ["if that is fuckin' dope", 63270],
                            ["Scary when you see me", 65141],
                            ["got them meming me like nope", 66211],
                            ["(Nope, nope, nope, nope)", 67656],
                            ["Hate to say it, but", 68886],
                            ["you're runnin' out of time", 70326],
                            ["I don't know 'bout you, but", 72052],
                            ["I'ma make the most of mine", 72845],
                            ["Lookin' clean until", 74738],
                            ["a youngin' in the dirt", 75742],
                            ["Value through the roof", 77076],
                            ["yeah, yeah", 78516],
                            ["I know my worth, Nato", 79436],
                            ["Get myself into the game", 80575],
                            ["I'ma run it up anyway", 82594],
                            ["I get with the violence", 85923],
                            ["I don't think you wanna try it", 88419],
                            ["I'm so up", 91257],
                            ["I feel invincible", 91995],
                            ["I don't know if they get it though", 94660],
                            ["I'm so up", 96966],
                            ["I feel invincible", 97642],
                            ["Fuck what you said", 99967],
                            ["I'm invincible", 101046],
                            ["If you wanna try", 103308],
                            ["to bring me down", 103971],
                            ["you gotta reach me", 104685],
                            ["I'm high up in the clouds", 105864],
                            ["while your're just", 107039],
                            ["down in the seaweeds", 107608],
                            ["I see these little rappers", 108622],
                            ["they all wanna be me", 109897],
                            ["But nobody wanna put the work in", 110826],
                            ["'Cause they thinkin'", 112134],
                            ["that I got it easy", 112752],
                            ["but that's sleezy", 113502],
                            ["My path to the top was hard", 114485],
                            ["but nothin' out there", 115575],
                            ["could me make stop", 116247],
                            ["Every time I thought", 116981],
                            ["it went one way", 117624],
                            ["it turned out that it did not", 118407],
                            ["I got so many", 119291],
                            ["obstacles for my opps", 120297],
                            ["so many prayin'", 121206],
                            ["that I would drop", 122096],
                            ["I had to go around", 122774],
                            ["the whole world", 123521],
                            ["just to get to", 124260],
                            ["the end of my block", 124866],
                            ["I built my skin so tough", 125523],
                            ["achievin' all my desires", 126727],
                            ["I could walk through", 128065],
                            ["Hell without gettin'", 129449],
                            ["burned by the fire", 130009],
                            ["Oh, I admire those", 130697],
                            ["that are deniers", 132867],
                            ["'Cause you messed around", 134285],
                            ["turned me to a", 135069],
                            ["cold blooded fighter", 135885],
                            ["Im so up I feel invincible", 137218],
                            ["I hope my words", 140013],
                            ["feel like insults", 141190],
                            ["I'm up right now", 142979],
                            ["you stuck right now", 144030],
                            ["Stay down there", 145496],
                            ["on that ground", 146574],
                            ["Get myself into the game", 147924],
                            ["I'ma run it up anyway", 151037],
                            ["I get with the violence", 154527],
                            ["I don't think you wanna try it", 156787],
                            ["I'm so up", 160415],
                            ["I feel invincible", 160990],
                            ["I don't know", 163133],
                            ["if they get it though", 163952],
                            ["I'm so up", 165446],
                            ["I feel invincible", 166148],
                            ["Fuck what you said", 168516],
                            ["I'm invincible", 169519],
                            ["Talk like I'm at the top now", 171475],
                            ["If you hit me, I can't fall down", 173836],
                            ["Run up, I'm not second place and", 177162],
                            ["I tell 'em that in runnin'", 178025],
                            ["all my bases", 181206],
                            ["I'm so up", 182808],
                            ["I feel invincible", 183340],
                            ["I don't know if", 186082],
                            ["they get it though", 186813],
                            ["I'm so up", 188342],
                            ["I feel invincible", 189013],
                            ["Fuck what you said", 192064],
                            ["I'm invincible", 192606]
                        ]
                    };
                    this.giants = {
                        audio: new Audio("https://cdn.discordapp.com/attachments/617560371913293827/1023807988047294464/V_O_E_-_Giants_Lyrics.mp3"),
                        chats: [
                            ["Oh, where am I going now", 10213],
                            ["just falling over dreams?", 11952],
                            ["Now I'm just so far gone", 15815],
                            ["this isn't what it seems..", 17563],
                            ["It's taking me so damn long", 21274],
                            ["it's fading from believe", 23182],
                            ["I need to slow this down", 26880],
                            ["it's burning from beneath", 28361],
                            ["Come break this light", 32622],
                            ["Before tomorrow dies", 35938],
                            ["Holding on for what", 38578],
                            ["is worth my life", 40752],
                            ["I know in time", 43714],
                            ["I'll make it up the vine", 46797],
                            ["Find my way to giants", 49458],
                            ["in the sky", 51305],
                            ["Tonight it comes to life", 53609],
                            ["Tonight it comes to life", 75604],
                            ["Where am I going now,", 98364],
                            ["just falling over dreams?", 101623],
                            ["Now I'm just so far gone,", 104059],
                            ["this isn't what it seems", 106393],
                            ["It's taking me so damn long,", 109598],
                            ["it's fading from believe", 110995],
                            ["I need to slow this down", 115074],
                            ["it's burning from beneath", 117293],
                            ["Come break this light", 121103],
                            ["Before tomorrow dies", 124000],
                            ["Holding on for what", 126824],
                            ["is worth my lifе", 128132],
                            ["I know in time", 132000],
                            ["I'll make it up the vinе", 135098],
                            ["Find my way to", 137797],
                            ["giants in the sky", 139231],
                            ["Tonight it comes to life", 141870],
                            ["Tonight it comes to life", 152722],
                            ["Come break this light", 176157],
                            ["Before tomorrow dies", 179155],
                            ["Holding on to what is", 181855],
                            ["worth my life", 183000],
                            ["I know in time", 187145],
                            ["I'll make it up the vine", 190330],
                            ["Find my way to", 193014],
                            ["giants in the sky", 195132],
                            ["Tonight it comes to life", 197183]
                        ]
                    };
                    this.glorydays = {
                        audio: new Audio("https://cdn.discordapp.com/attachments/990241234696167428/1023774910067261590/FELLOWSHIP_-_Glory_Days_Official_Lyric_Video_192_kbps.mp3"),
                        chats: [
                            ["As the light within me falls", 47320],
                            ["another day departs", 49338],
                            ["if only I could see", 52172],
                            ["the dawn beyond", 54166],
                            ["the shadows cast", 55214],
                            ["An empire of doubt", 57561],
                            ["a heart full of clouds", 58671],
                            ["befall the souls within her", 60113],
                            ["the valley will weep", 62134],
                            ["as a mirror of old", 63920],
                            ["as hope is halfway damned", 65463],
                            ["Oh, to see our last day", 68481],
                            ["with all these", 70021],
                            ["shattered voices raised", 71037],
                            ["Oh say, will you fight?", 72920],
                            ["To seek the glory days,", 77842],
                            ["We'll fight the lion's way", 80642],
                            ["Then let the rain", 83334],
                            ["wash all of our pride away", 85272],
                            ["So if this victory", 88786],
                            ["is our last odyssey,", 91400],
                            ["Then let the power", 94134],
                            ["within us decide!", 96046],
                            ["On the backs of giants", 117344],
                            ["long deceased", 119252],
                            ["are we still standing", 120096],
                            ["we measure our worth", 122557],
                            ["by all the days", 123929],
                            ["we wasted then.", 125403],
                            ["All of our time", 127753],
                            ["and all of our might", 128916],
                            ["are fueled by", 130086],
                            ["the heartache of winter.", 131045],
                            ["Oh life as we know", 132595],
                            ["it is bitter and cold", 133924],
                            ["but souls burn", 135278],
                            ["best with spite.", 136334],
                            ["Oh, to see our last day", 138568],
                            ["with all these", 140287],
                            ["shattered voices raised", 141002],
                            ["Oh say, will you fight?", 142849],
                            ["To seek the glory days,", 147919],
                            ["We'll fight the lion's way", 150668],
                            ["Then let the rain", 153331],
                            ["wash all of our pride away", 155055],
                            ["So if this victory", 158747],
                            ["is our last odyssey,", 161502],
                            ["Then let the power", 164244],
                            ["within us decide!", 166385],
                            ["If we have to choose our fate,", 170992],
                            ["It's still our choice to make", 175794],
                            ["Oh, to see our last day", 235540],
                            ["with all these", 237420],
                            ["shattered voices raised", 238154],
                            ["Oh say, will you fight?", 239979],
                            ["To seek the glory days,", 244971],
                            ["We'll fight the lion's way", 247863],
                            ["Then let the rain", 250476],
                            ["wash all of our pride away", 252209],
                            ["To seek the glory days,", 255934],
                            ["We'll fight the lion's way", 258458],
                            ["Then let the rain", 261368],
                            ["wash all of our pride away", 263131],
                            ["So if this victory", 266838],
                            ["is our last odyssey,", 269354],
                            ["Let the power within", 272733],
                            ["ignite where we've been", 274332],
                            ["let the power within us decide", 277877]
                        ]
                    };
                    this.ipip = {
                        audio: new Audio("https://cdn.discordapp.com/attachments/1008700151579295824/1023235261066399744/Electro-Light_-_Symbolism_NCS_Release.mp3"),
                        chats: [
                            ["Turi, ip ip ip", 5416],
                            ["Ip ip ip turi ik", 8978],
                            ["Ip, tsha ip ik", 12132],
                            ["Eugh turi", 13782],
                            ["eugh turi isha ip turisha", 15109],
                            ["Turi, ip ip ip", 17597],
                            ["Ip ip ip turi ik", 20042],
                            ["Ip, tsha ip ik", 23025],
                            ["Eugh turi", 24480],
                            ["eugh turi isha ip turisha", 26215],
                            ["Turi, ip ip ip", 29205],
                            ["Ip ip ip turi ik", 31504],
                            ["Ip, tsha ip ik", 34192],
                            ["Eugh turi", 36291],
                            ["eugh turi isha ip turisha", 37558],
                            ["Turi, ip ip ip", 40202],
                            ["Ip ip ip turi ik", 42762],
                            ["Ip, tsha ip ik", 45921],
                            ["Eugh turi", 47710],
                            ["eugh turi isha ip turisha", 48742],
                            ["Turi, ip ip ip", 56435],
                            ["Ip ip ip turi ik", 58173],
                            ["Ip, tsha ip ik", 59676],
                            ["Eugh turi", 60421],
                            ["eugh turi isha ip turisha", 60952],
                            ["Turi, ip ip ip", 62832],
                            ["Ip ip ip turi ik", 65534],
                            ["Ip, tsha ip ik", 68072],
                            ["Eugh turi", 69931],
                            ["eugh turi isha ip turisha", 71160],
                            ["Turi, ip ip ip", 74119],
                            ["Ip ip ip turi ik", 76666],
                            ["Ip, tsha ip ik", 79454],
                            ["Eugh turi", 81186],
                            ["eugh turi isha ip turisha", 82433],
                            ["Turi, ip ip ip", 85346],
                            ["Ip ip ip turi ik", 87963],
                            ["Ip, tsha ip ik", 90757],
                            ["Eugh turi", 92776],
                            ["eugh turi isha ip turisha", 93914],
                            ["Thsa", 98686],
                            ["Ip ip", 100534],
                            ["Thsa", 109780],
                            ["Ip ip", 116890],
                            ["Turi, ip ip ip", 119438],
                            ["Ip ip ip turi ik", 121839],
                            ["Ip, tsha ip ik", 124701],
                            ["Eugh turi", 126186],
                            ["eugh turi isha ip turisha", 127726],
                            ["Turi, ip ip ip", 130610],
                            ["Ip ip ip turi ik", 133162],
                            ["Ip, tsha ip ik", 136083],
                            ["Eugh turi", 138451],
                            ["eugh turi isha ip turisha", 139431],
                            ["Turi, ip ip ip", 141718],
                            ["Ip ip ip turi ik", 171766],
                            ["Ip, tsha ip ik", 173608],
                            ["Eugh turi", 174050],
                            ["eugh turi isha ip turisha", 174714],
                            ["Turi, ip ip ip", 175754],
                            ["Ip ip ip turi ik", 178427],
                            ["Ip, tsha ip ik", 180996],
                            ["Eugh turi", 182437],
                            ["eugh turi isha ip turisha", 184070],
                            ["Turi, ip ip ip", 186868],
                            ["Ip ip ip turi ik", 189609],
                            ["Ip, tsha ip ik", 192300],
                            ["Eugh turi", 193692],
                            ["eugh turi isha ip turisha", 195611],
                            ["Turi, ip ip ip", 198298],
                            ["Ip ip ip turi ik", 201268],
                            ["Ip, tsha ip ik", 203682],
                            ["Eugh turi", 205139],
                            ["eugh turi isha ip turisha", 206782],
                            ["Thsa", 211680],
                            ["Ip ip", 219763],
                            ["Thsa", 222759],
                            ["Ip ip", 229811],
                            ["Turi, ip ip ip", 232450],
                            ["Ip ip ip turi ik", 234711],
                            ["Ip, tsha ip ik", 237682],
                            ["Eugh turi", 238925],
                            ["eugh turi isha ip turisha", 240651],
                            ["Turi, ip ip ip", 243450],
                            ["Ip ip ip turi ik", 246046],
                            ["Ip, tsha ip ik", 248938],
                            ["Eugh turi", 250268],
                            ["eugh turi isha ip turisha", 251933]
                        ]
                    };
                    this.livinglife = {
                        audio: new Audio("https://cdn.discordapp.com/attachments/919188611214229524/981928418729934898/1_ac_2_6_22.mp3"),
                        chats: [
                            ["Lord knows and I think", 15780],
                            ["I know it too sometimes", 17285],
                            ["Every time and", 18961],
                            ["they reachin' out for", 20223],
                            ["what's mine", 21570],
                            ["Lord knows and I think", 22570],
                            ["I know it too sometimes", 23781],
                            ["Every time and", 25775],
                            ["they reachin' out for", 26932],
                            ["what's mine", 28198],
                            ["I've been awake for days", 28955],
                            ["So we out living life", 29943],
                            ["in the night", 31597],
                            ["Pray to god", 32598],
                            ["man I hope I don't die", 33597],
                            ["I've been awake for days", 35267],
                            ["So we out living life", 36571],
                            ["in the night", 38253],
                            ["Pray to god", 39199],
                            ["man I hope I don't die", 40032],
                            ["in the night", 41702],
                            ["Lord knows and I think", 42527],
                            ["I know it too sometimes", 43935],
                            ["Every time and", 45937],
                            ["they reachin' out for", 47036],
                            ["what's mine", 48436],
                            ["Lord knows and I think", 49263],
                            ["I know it too sometimes", 50589],
                            ["Every time and", 52486],
                            ["they reachin' out for", 53708],
                            ["what's mine", 55117],
                            ["Two bedrooms", 56000],
                            ["seven little child", 57218],
                            ["can't be right", 58532],
                            ["Call my brother", 59452],
                            ["he in prison doin' time", 60420],
                            ["but we alright", 61855],
                            ["Tried my best just to", 62799],
                            ["catch a fucking smile", 64059],
                            ["But for now", 65327],
                            ["I see myself ain't", 66109],
                            ["hitting the 35", 67119],
                            ["I've been awake for days", 69074],
                            ["So we out living life", 70173],
                            ["in the night", 71817],
                            ["Pray to god", 72875],
                            ["man I hope I don't die", 74031],
                            ["I've been awake for days", 75399],
                            ["So we out living life", 76931],
                            ["in the night", 78639],
                            ["Pray to god", 79393],
                            ["man I hope I don't die", 80235],
                            ["in the night", 81927],
                            ["Lord knows and I think", 82788],
                            ["I know it too sometimes", 84179],
                            ["Every time and", 86217],
                            ["they reachin' out for", 87354],
                            ["what's mine", 88685],
                            ["Lord knows and I think", 89588],
                            ["I know it too sometimes", 90890],
                            ["Every time and", 92840],
                            ["they reachin' out", 93997],
                            ["for what's mine", 95011]
                        ]
                    };
                    this.takeover = {
                        audio: new Audio("https://cdn.discordapp.com/attachments/1174992357767262238/1176217713727770785/01._Take_Over.mp3"),
                        chats: [
                            ["We at the top again, now what?", 16900],
                            ["Heavy lay the crown, but", 18900],
                            ["Count us", 20600],
                            ["Higher than the mountain", 21380],
                            ["And we be up here", 23300],
                            ["for the long run", 24273],
                            ["Strap in for a long one", 25413],
                            ["We got everybody on one", 27400],
                            ["Now you're coming at the king", 29740],
                            ["so you better not miss", 30934],
                            ["And we only get stronger", 33700],
                            ["With everything I", 36163],
                            ["carry up on my back", 37292],
                            ["you should paint it", 39360],
                            ["up with a target", 40771],
                            ["Why would you dare me", 46000],
                            ["to do it again?", 46960],
                            ["Come get your spoiler", 50800],
                            ["up ahead", 51977],
                            ["We're taking over,", 53800],
                            ["We're Taking Over", 56832],
                            ["Look at you come at my name,", 61760],
                            ["you 'oughta know by now,", 62866],
                            ["That We're Taking Over,", 66300],
                            ["We're Taking Over", 69411],
                            ["Maybe you wonder what", 74500],
                            ["your futures gonna be but", 76300],
                            ["I got it all locked up", 77780],
                            ["Take a lap, now", 93800],
                            ["Don't be mad, now", 94933],
                            ["Run it back, run it back", 97000],
                            ["run it back, now", 98777],
                            ["I got bodies lining up,", 100100],
                            ["Think you're dreaming", 101400],
                            ["of greatness", 102663],
                            [""],
                            [""],
                            [""],
                            [""],
                            [""],
                            [""],
                            [""],
                            [""],
                            [""],
                            [""],
                            [""],
                            [""]
                        ]
                    };
                    this.outtamind = {
                        audio: new Audio("https://cdn.discordapp.com/attachments/919188611214229524/981933473709309982/GENTRAMMEL_-_Out_Of_My_Mind__Lyrics_.mp3"),
                        chats: [
                            ["Remember the night that we met", 12576],
                            ["Back at the party", 13709],
                            ["you sat on the bed", 14448],
                            ["You said I’m talented", 15380],
                            ["you said I’m next", 16065],
                            ["My only talent", 16922],
                            ["is making you stressed", 17695],
                            ["I know that I’m not in my best", 18510],
                            ["lately I’m feeling like less", 20254],
                            ["I hope that I’ll see you again", 21815],
                            ["if I don’t than", 23230],
                            ["I’ll lay at the rest", 23823],
                            ["It’s crazy how it goes", 24705],
                            ["left me all alone", 26020],
                            ["I’ve been trying to move on", 28056],
                            ["all I find are holes", 29465],
                            ["Searching for a pot of gold", 31159],
                            ["don’t know if I’ll ever know", 32572],
                            ["How she left", 34156],
                            ["me with no damn place to go", 34881],
                            ["I’m okay, I’ll be fine", 37685],
                            ["I’m just out of my mind", 40619],
                            ["long nights, with no sleep", 43802],
                            ["thinking bout you and me", 46646],
                            ["I’m okay, I’ll be fine", 49703],
                            ["I’m just out of my mind", 52687],
                            ["Long nights, with no sleep", 56105],
                            ["thinking bout you and me", 59131],
                            ["Spent five months", 61884],
                            ["at your crib", 62780],
                            ["and I ain’t pay no rent", 63749],
                            ["We should’ve just been friends", 64595],
                            ["Cause I know you never meant", 66714],
                            ["all the things that", 67975],
                            ["you said to me", 70217],
                            ["Froze my heart in uncertainty", 70849],
                            ["Go and hit the club in some", 74061],
                            ["make sure that you drunk af", 75561],
                            ["Find another man you love", 77207],
                            ["imma show you what you lost", 78681],
                            ["I'mma show you how it feels", 80210],
                            ["to realize everything", 81740],
                            ["you ever knew", 82722],
                            ["And everything you ever", 83692],
                            ["had in love is gone", 84701],
                            ["I’m okay, I’ll be fine", 86645],
                            ["I’m just out of my mind", 88575],
                            ["long nights, with no sleep", 93073],
                            ["thinking bout you and me", 95794],
                            ["I’m okay, I’ll be fine", 98841],
                            ["I’m just out of my mind", 102063],
                            ["Long nights, with no sleep", 105218],
                            ["thinking bout you and me", 107967],
                            ["I guess it’s here for real", 110894],
                            ["and If I had another chance", 112311],
                            ["I don’t know if I’d take", 113554],
                            ["that bet against you", 114744],
                            ["with another man", 115679],
                            ["And if I ever saw your face", 116870],
                            ["than I would probably", 118157],
                            ["take a glance", 119295],
                            ["But I would never bat at night", 119966],
                            ["because you hate me", 121188],
                            ["that’s a fact", 122158],
                            ["I think that this is an epiphany", 123173],
                            ["I don’t think that", 124724],
                            ["you really listening", 125704],
                            ["One day you gonna", 126388],
                            ["be missing me", 127116],
                            ["I swear to God", 127850],
                            ["that we’ll never be frenemies", 128440],
                            ["Female dogs be tryna", 129331],
                            ["to be friends with me", 130191],
                            ["I think they stealing my energy", 130907],
                            ["in my DMs and they tempting me", 131654],
                            ["I know that you really", 133839],
                            ["resenting me now", 134709],
                            ["I’m okay, I’ll be fine", 135602],
                            ["I’m just out of my mind", 139010],
                            ["long nights, with no sleep", 142174],
                            ["thinking bout you and me", 144896],
                            ["I’m okay, I’ll be fine", 148125],
                            ["I’m just out of my mind", 151030],
                            ["Long nights, with no sleep", 154548],
                            ["thinking bout you and me", 157313]
                        ]
                    };
                    this.nobody = {
                        audio: new Audio("https://cdn.discordapp.com/attachments/911557181353111595/1002036095938207815/Zack_Merci_X_CRVN_-_Nobody_NCS_Release.mp3"),
                        chats: [
                            ["Children used to run and play", 16047],
                            ["Look at all the mess we made", 18834],
                            ["Guess I'll never know", 21972],
                            ["where it went wrong", 23116],
                            ["Sometimes I feel like", 27962],
                            ["\"oh, that's sad\"", 28732],
                            ["Goes viral then people forget", 30767],
                            ["In this crazy world", 33943],
                            ["I don't belong", 35045],
                            ["I see fire burning", 39164],
                            ["but I close my eyes", 41249],
                            ["(I'd rather deny that)", 43809],
                            ["Everything is falling", 45250],
                            ["out of place", 47215],
                            ["I see trees ripped", 50541],
                            ["from the ground", 52212],
                            ["But nobody makes a sound", 54210],
                            ["I see fire burning", 57003],
                            ["but I'm fine", 59240],
                            ["And I am nobody", 61475],
                            ["And I am Nobody", 73778],
                            ["The future feels so", 99856],
                            ["unsure we deserve more", 100949],
                            ["The burden that you left", 106005],
                            ["is way too heavy for me", 107306],
                            ["Do you ever feel like", 111727],
                            ["the world would die out", 113251],
                            ["My anxiety is of", 114946],
                            ["the roof I cry out", 116239],
                            ["We have gone too far", 117923],
                            ["take me back right now", 118984],
                            ["I see fire burning", 124198],
                            ["but I close my eyes", 125314],
                            ["(I'd rather deny that)", 127683],
                            ["Everything is falling", 129231],
                            ["out of place", 131229],
                            ["I see trees ripped", 134546],
                            ["from the ground", 136762],
                            ["But nobody makes a sound", 138246],
                            ["I see fire burning", 140946],
                            ["but I'm fine", 142957],
                            ["And I am nobody", 145167],
                            ["And I am nobody", 170418]
                        ]
                    };
                    this.outerspace = {
                        audio: new Audio("https://cdn.discordapp.com/attachments/919188611214229524/981935267155951646/BEAUZ_-_Outerspace_Lyrics_feat._Dallas.mp3"),
                        chats: [
                            ["Falling in quickly", 2267],
                            ["Tell me you feel something too", 6056],
                            ["Caught in the moment", 9720],
                            ["I'm lost here without you", 12072],
                            ["Tangled up in your web", 15565],
                            ["Holding on to", 18885],
                            ["every word you said", 20299],
                            ["I'm ready I know", 22258],
                            ["I'm hoping it shows", 23880],
                            ["Would you say the same?", 25613],
                            ["We're falling", 27374],
                            ["from the outer space", 28129],
                            ["We're moving like a", 29969],
                            ["full pace supernova", 30695],
                            ["We're making all the", 33892],
                            ["headlines now", 35003],
                            ["And I just wanna", 36829],
                            ["seize the moment", 38230],
                            ["'Cause we won't", 40572],
                            ["ever slow it down", 41372],
                            ["Kissin' in the rain", 42947],
                            ["Taste just like champagne", 44601],
                            ["Ballin' everyday", 46401],
                            ["We're falling from outer space", 47649],
                            ["Hopin' time won't change", 49656],
                            ["Got love on my brain", 51442],
                            ["Would you say the same", 53257],
                            ["We're falling from outer space", 54647],
                            ["We're falling from outer space", 60982],
                            ["We're falling from outer space", 67811],
                            ["We're falling from outer space", 74600],
                            ["We're falling from outer space", 81321],
                            ["Falling in quickly", 86325],
                            ["Tell me you feel something too", 90323],
                            ["Caught in the moment", 94055],
                            ["I'm lost here without you", 96170],
                            ["Tangled up in your web", 99442],
                            ["Holding on to", 103220],
                            ["every word you said", 104814],
                            ["I'm ready I know", 106585],
                            ["I'm hoping it shows", 108178],
                            ["Would you say the same?", 110052],
                            ["We're falling from the outer space", 111856],
                            ["We're moving like a", 114382],
                            ["full pace supernova", 115087],
                            ["We're making all the", 118063],
                            ["headlines now", 119323],
                            ["And I just wanna", 121048],
                            ["seize the moment", 122684],
                            ["'Cause we won't", 125220],
                            ["ever slow it down", 125899],
                            ["Kissin' in the rain", 127459],
                            ["Taste just like champagne", 129015],
                            ["Ballin' everyday", 130840],
                            ["We're falling from outer space", 131919],
                            ["Hopin' time won't change", 134393],
                            ["Got love on my brain", 135921],
                            ["Would you say the same?", 137671],
                            ["We're falling from outer space (go)", 138737],
                            ["We're falling from outer space", 147417],
                            ["We're falling from outer space", 153800],
                            ["We're falling from outer space", 160563],
                            ["We're falling from outer space", 167204]
                        ]
                    };
                    this.playing = false;
                    this.doing = false;
                    this.current = null;
                    this.loadAudio = function(_0x29d825) {
                        _0x29d825.audio.load();
                    };
                    let _0x207046 = this;
                    Object.getOwnPropertyNames(this).filter(_0x42b7f => !["playing", "doing", "current", "loadAudio"].includes(_0x42b7f)).forEach(_0x538a29 => {
                        _0x207046.loadAudio(this[_0x538a29]);
                    });
                }
            };
            class _0x5bb688 {
                constructor(_0x450782) {
                    this.sid = _0x450782;
                    this.init = function(_0x5ded4b, _0x3dc657, _0x4b7656, _0x171e9f, _0x1350f7, _0x9a71a1, _0x5142f1) {
                        _0x9a71a1 = _0x9a71a1 || {};
                        this.sentTo = {};
                        this.gridLocations = [];
                        this.active = true;
                        this.alive = true;
                        this.doUpdate = _0x9a71a1.doUpdate;
                        this.x = _0x5ded4b;
                        this.y = _0x3dc657;
                        if (_0x18564b.anotherVisual) {
                            this.dir = _0x4b7656 + Math.PI;
                        } else {
                            this.dir = _0x4b7656;
                        }
                        this.lastDir = _0x4b7656;
                        this.xWiggle = 0;
                        this.yWiggle = 0;
                        this.visScale = _0x171e9f;
                        this.scale = _0x171e9f;
                        this.type = _0x1350f7;
                        this.id = _0x9a71a1.id;
                        this.owner = _0x5142f1;
                        this.name = _0x9a71a1.name;
                        this.isItem = this.id != undefined;
                        this.group = _0x9a71a1.group;
                        this.maxHealth = _0x9a71a1.health;
                        this.health = this.maxHealth;
                        this.healthMov = 100;
                        this.layer = 2;
                        if (this.group != undefined) {
                            this.layer = this.group.layer;
                        } else if (this.type == 0) {
                            this.layer = 3;
                        } else if (this.type == 2) {
                            this.layer = 0;
                        } else if (this.type == 4) {
                            this.layer = -1;
                        }
                        this.colDiv = _0x9a71a1.colDiv || 1;
                        this.blocker = _0x9a71a1.blocker;
                        this.ignoreCollision = _0x9a71a1.ignoreCollision;
                        this.dontGather = _0x9a71a1.dontGather;
                        this.hideFromEnemy = _0x9a71a1.hideFromEnemy;
                        this.friction = _0x9a71a1.friction;
                        this.projDmg = _0x9a71a1.projDmg;
                        this.dmg = _0x9a71a1.dmg;
                        this.pDmg = _0x9a71a1.pDmg;
                        this.pps = _0x9a71a1.pps;
                        this.zIndex = _0x9a71a1.zIndex || 0;
                        this.turnSpeed = _0x9a71a1.turnSpeed;
                        this.req = _0x9a71a1.req;
                        this.trap = _0x9a71a1.trap;
                        this.healCol = _0x9a71a1.healCol;
                        this.teleport = _0x9a71a1.teleport;
                        this.boostSpeed = _0x9a71a1.boostSpeed;
                        this.projectile = _0x9a71a1.projectile;
                        this.shootRange = _0x9a71a1.shootRange;
                        this.shootRate = _0x9a71a1.shootRate;
                        this.shootCount = this.shootRate;
                        this.spawnPoint = _0x9a71a1.spawnPoint;
                        this.onNear = 0;
                        this.breakObj = false;
                        this.alpha = _0x9a71a1.alpha || 1;
                        this.maxAlpha = _0x9a71a1.alpha || 1;
                        this.damaged = 0;
                    };
                    this.changeHealth = function(_0x4f6d12, _0x510c49) {
                        this.health += _0x4f6d12;
                        return this.health <= 0;
                    };
                    this.getScale = function(_0x440131, _0x39ecb4) {
                        _0x440131 = _0x440131 || 1;
                        return this.scale * (this.isItem || this.type == 2 || this.type == 3 || this.type == 4 ? 1 : _0x440131 * 0.6) * (_0x39ecb4 ? 1 : this.colDiv);
                    };
                    this.visibleToPlayer = function(_0x470cc5) {
                        return !this.hideFromEnemy || this.owner && (this.owner == _0x470cc5 || this.owner.team && _0x470cc5.team == this.owner.team);
                    };
                    this.update = function(_0x17d633) {
                        if (this.health != this.healthMov) {
                            if (this.health < this.healthMov) {
                                this.healthMov -= 1.9;
                            } else {
                                this.healthMov += 1.9;
                            }
                            if (Math.abs(this.health - this.healthMov) < 1.9) {
                                this.healthMov = this.health;
                            }
                        };
                        if (this.active) {
                            if (this.xWiggle) {
                                this.xWiggle *= Math.pow(0.99, _0x17d633);
                            }
                            if (this.yWiggle) {
                                this.yWiggle *= Math.pow(0.99, _0x17d633);
                            }
                            if (_0x18564b.anotherVisual) {
                                let _0x38c027 = _0x1b05b9.getAngleDist(this.lastDir, this.dir);
                                if (_0x38c027 > 0.01) {
                                    this.dir += _0x38c027 / 5;
                                } else {
                                    this.dir = this.lastDir;
                                }
                            } else if (this.turnSpeed && this.dmg) {
                                this.dir += this.turnSpeed * _0x17d633;
                            }
                        } else if (this.alive) {
                            this.alpha -= _0x17d633 / (200 / this.maxAlpha);
                            this.visScale += _0x17d633 / (this.scale / 2.5);
                            if (this.alpha <= 0) {
                                this.alpha = 0;
                                this.alive = false;
                            }
                        }
                    };
                    this.isTeamObject = function(_0x51e30d) {
                        if (this.owner == null) {
                            return true;
                        } else {
                            return this.owner && _0x51e30d.sid == this.owner.sid || _0x51e30d.findAllianceBySid(this.owner.sid);
                        }
                    };
                }
            }
            class _0x95c985 {
                constructor() {
                    this.groups = [{
                        id: 0,
                        name: "food",
                        layer: 0
                    }, {
                        id: 1,
                        name: "walls",
                        place: true,
                        limit: 30,
                        layer: 0
                    }, {
                        id: 2,
                        name: "spikes",
                        place: true,
                        limit: 15,
                        layer: 0
                    }, {
                        id: 3,
                        name: "mill",
                        place: true,
                        limit: 7,
                        layer: 1
                    }, {
                        id: 4,
                        name: "mine",
                        place: true,
                        limit: 1,
                        layer: 0
                    }, {
                        id: 5,
                        name: "trap",
                        place: true,
                        limit: 6,
                        layer: -1
                    }, {
                        id: 6,
                        name: "booster",
                        place: true,
                        limit: 12,
                        layer: -1
                    }, {
                        id: 7,
                        name: "turret",
                        place: true,
                        limit: 2,
                        layer: 1
                    }, {
                        id: 8,
                        name: "watchtower",
                        place: true,
                        limit: 12,
                        layer: 1
                    }, {
                        id: 9,
                        name: "buff",
                        place: true,
                        limit: 4,
                        layer: -1
                    }, {
                        id: 10,
                        name: "spawn",
                        place: true,
                        limit: 1,
                        layer: -1
                    }, {
                        id: 11,
                        name: "sapling",
                        place: true,
                        limit: 2,
                        layer: 0
                    }, {
                        id: 12,
                        name: "blocker",
                        place: true,
                        limit: 3,
                        layer: -1
                    }, {
                        id: 13,
                        name: "teleporter",
                        place: true,
                        limit: 2,
                        layer: -1
                    }];
                    this.projectiles = [{
                        indx: 0,
                        layer: 0,
                        src: "arrow_1",
                        dmg: 25,
                        speed: 1.6,
                        scale: 103,
                        range: 1000
                    }, {
                        indx: 1,
                        layer: 1,
                        dmg: 25,
                        scale: 20
                    }, {
                        indx: 0,
                        layer: 0,
                        src: "arrow_1",
                        dmg: 35,
                        speed: 2.5,
                        scale: 103,
                        range: 1200
                    }, {
                        indx: 0,
                        layer: 0,
                        src: "arrow_1",
                        dmg: 30,
                        speed: 2,
                        scale: 103,
                        range: 1200
                    }, {
                        indx: 1,
                        layer: 1,
                        dmg: 16,
                        scale: 20
                    }, {
                        indx: 0,
                        layer: 0,
                        src: "bullet_1",
                        dmg: 50,
                        speed: 3.6,
                        scale: 160,
                        range: 1400
                    }];
                    this.weapons = [{
                        id: 0,
                        type: 0,
                        name: "tool hammer",
                        desc: "tool for gathering all resources",
                        src: "hammer_1",
                        length: 140,
                        width: 140,
                        xOff: -3,
                        yOff: 18,
                        dmg: 25,
                        range: 65,
                        gather: 1,
                        speed: 300
                    }, {
                        id: 1,
                        type: 0,
                        age: 2,
                        name: "hand axe",
                        desc: "gathers resources at a higher rate",
                        src: "axe_1",
                        length: 140,
                        width: 140,
                        xOff: 3,
                        yOff: 24,
                        dmg: 30,
                        spdMult: 1,
                        range: 70,
                        gather: 2,
                        speed: 400
                    }, {
                        id: 2,
                        type: 0,
                        age: 8,
                        pre: 1,
                        name: "great axe",
                        desc: "deal more damage and gather more resources",
                        src: "great_axe_1",
                        length: 140,
                        width: 140,
                        xOff: -8,
                        yOff: 25,
                        dmg: 35,
                        spdMult: 1,
                        range: 75,
                        gather: 4,
                        speed: 400
                    }, {
                        id: 3,
                        type: 0,
                        age: 2,
                        name: "short sword",
                        desc: "increased attack power but slower move speed",
                        src: "sword_1",
                        iPad: 1.3,
                        length: 130,
                        width: 210,
                        xOff: -8,
                        yOff: 46,
                        dmg: 35,
                        spdMult: 0.85,
                        range: 110,
                        gather: 1,
                        speed: 300
                    }, {
                        id: 4,
                        type: 0,
                        age: 8,
                        pre: 3,
                        name: "katana",
                        desc: "greater range and damage",
                        src: "samurai_1",
                        iPad: 1.3,
                        length: 130,
                        width: 210,
                        xOff: -8,
                        yOff: 59,
                        dmg: 40,
                        spdMult: 0.8,
                        range: 118,
                        gather: 1,
                        speed: 300
                    }, {
                        id: 5,
                        type: 0,
                        age: 2,
                        name: "polearm",
                        desc: "long range melee weapon",
                        src: "spear_1",
                        iPad: 1.3,
                        length: 130,
                        width: 210,
                        xOff: -8,
                        yOff: 53,
                        dmg: 45,
                        knock: 0.2,
                        spdMult: 0.82,
                        range: 142,
                        gather: 1,
                        speed: 700
                    }, {
                        id: 6,
                        type: 0,
                        age: 2,
                        name: "bat",
                        desc: "fast long range melee weapon",
                        src: "bat_1",
                        iPad: 1.3,
                        length: 110,
                        width: 180,
                        xOff: -8,
                        yOff: 53,
                        dmg: 20,
                        knock: 0.7,
                        range: 110,
                        gather: 1,
                        speed: 300
                    }, {
                        id: 7,
                        type: 0,
                        age: 2,
                        name: "daggers",
                        desc: "really fast short range weapon",
                        src: "dagger_1",
                        iPad: 0.8,
                        length: 110,
                        width: 110,
                        xOff: 18,
                        yOff: 0,
                        dmg: 20,
                        knock: 0.1,
                        range: 65,
                        gather: 1,
                        hitSlow: 0.1,
                        spdMult: 1.13,
                        speed: 100
                    }, {
                        id: 8,
                        type: 0,
                        age: 2,
                        name: "stick",
                        desc: "great for gathering but very weak",
                        src: "stick_1",
                        length: 140,
                        width: 140,
                        xOff: 3,
                        yOff: 24,
                        dmg: 1,
                        spdMult: 1,
                        range: 70,
                        gather: 7,
                        speed: 400
                    }, {
                        id: 9,
                        type: 1,
                        age: 6,
                        name: "hunting bow",
                        desc: "bow used for ranged combat and hunting",
                        src: "bow_1",
                        req: ["wood", 4],
                        length: 120,
                        width: 120,
                        xOff: -6,
                        yOff: 0,
                        Pdmg: 25,
                        projectile: 0,
                        spdMult: 0.75,
                        speed: 600
                    }, {
                        id: 10,
                        type: 1,
                        age: 6,
                        name: "great hammer",
                        desc: "hammer used for destroying structures",
                        src: "great_hammer_1",
                        length: 140,
                        width: 140,
                        xOff: -9,
                        yOff: 25,
                        dmg: 10,
                        Pdmg: 10,
                        spdMult: 0.88,
                        range: 75,
                        sDmg: 7.5,
                        gather: 1,
                        speed: 400
                    }, {
                        id: 11,
                        type: 1,
                        age: 6,
                        name: "wooden shield",
                        desc: "blocks projectiles and reduces melee damage",
                        src: "shield_1",
                        length: 120,
                        width: 120,
                        shield: 0.2,
                        xOff: 6,
                        yOff: 0,
                        Pdmg: 0,
                        spdMult: 0.7
                    }, {
                        id: 12,
                        type: 1,
                        age: 8,
                        pre: 9,
                        name: "crossbow",
                        desc: "deals more damage and has greater range",
                        src: "crossbow_1",
                        req: ["wood", 5],
                        aboveHand: true,
                        armS: 0.75,
                        length: 120,
                        width: 120,
                        xOff: -4,
                        yOff: 0,
                        Pdmg: 35,
                        projectile: 2,
                        spdMult: 0.7,
                        speed: 700
                    }, {
                        id: 13,
                        type: 1,
                        age: 9,
                        pre: 12,
                        name: "repeater crossbow",
                        desc: "high firerate crossbow with reduced damage",
                        src: "crossbow_2",
                        req: ["wood", 10],
                        aboveHand: true,
                        armS: 0.75,
                        length: 120,
                        width: 120,
                        xOff: -4,
                        yOff: 0,
                        Pdmg: 30,
                        projectile: 3,
                        spdMult: 0.7,
                        speed: 230
                    }, {
                        id: 14,
                        type: 1,
                        age: 6,
                        name: "mc grabby",
                        desc: "steals resources from enemies",
                        src: "grab_1",
                        length: 130,
                        width: 210,
                        xOff: -8,
                        yOff: 53,
                        dmg: 0,
                        Pdmg: 0,
                        steal: 250,
                        knock: 0.2,
                        spdMult: 1.05,
                        range: 125,
                        gather: 0,
                        speed: 700
                    }, {
                        id: 15,
                        type: 1,
                        age: 9,
                        pre: 12,
                        name: "musket",
                        desc: "slow firerate but high damage and range",
                        src: "musket_1",
                        req: ["stone", 10],
                        aboveHand: true,
                        rec: 0.35,
                        armS: 0.6,
                        hndS: 0.3,
                        hndD: 1.6,
                        length: 205,
                        width: 205,
                        xOff: 25,
                        yOff: 0,
                        Pdmg: 50,
                        projectile: 5,
                        hideProjectile: true,
                        spdMult: 0.6,
                        speed: 1500
                    }];
                    this.list = [{
                        group: this.groups[0],
                        name: "apple",
                        desc: "restores 20 health when consumed",
                        req: ["food", 10],
                        consume: function(_0x4b86ce) {
                            return _0x4b86ce.changeHealth(20, _0x4b86ce);
                        },
                        scale: 22,
                        holdOffset: 15,
                        healing: 20,
                        itemID: 0,
                        itemAID: 16
                    }, {
                        age: 3,
                        group: this.groups[0],
                        name: "cookie",
                        desc: "restores 40 health when consumed",
                        req: ["food", 15],
                        consume: function(_0x26e04b) {
                            return _0x26e04b.changeHealth(40, _0x26e04b);
                        },
                        scale: 27,
                        holdOffset: 15,
                        healing: 40,
                        itemID: 1,
                        itemAID: 17
                    }, {
                        age: 7,
                        group: this.groups[0],
                        name: "cheese",
                        desc: "restores 30 health and another 50 over 5 seconds",
                        req: ["food", 25],
                        consume: function(_0x13b1f2) {
                            if (_0x13b1f2.changeHealth(30, _0x13b1f2) || _0x13b1f2.health < 100) {
                                _0x13b1f2.dmgOverTime.dmg = -10;
                                _0x13b1f2.dmgOverTime.doer = _0x13b1f2;
                                _0x13b1f2.dmgOverTime.time = 5;
                                return true;
                            }
                            return false;
                        },
                        scale: 27,
                        holdOffset: 15,
                        healing: 30,
                        itemID: 2,
                        itemAID: 18
                    }, {
                        group: this.groups[1],
                        name: "wood wall",
                        desc: "provides protection for your village",
                        req: ["wood", 10],
                        projDmg: true,
                        health: 380,
                        scale: 50,
                        holdOffset: 20,
                        placeOffset: -5,
                        itemID: 3,
                        itemAID: 19
                    }, {
                        age: 3,
                        group: this.groups[1],
                        name: "stone wall",
                        desc: "provides improved protection for your village",
                        req: ["stone", 25],
                        health: 900,
                        scale: 50,
                        holdOffset: 20,
                        placeOffset: -5,
                        itemID: 4,
                        itemAID: 20
                    }, {
                        age: 7,
                        group: this.groups[1],
                        name: "castle wall",
                        desc: "provides powerful protection for your village",
                        req: ["stone", 35],
                        health: 1500,
                        scale: 52,
                        holdOffset: 20,
                        placeOffset: -5,
                        itemID: 5,
                        itemAID: 21
                    }, {
                        group: this.groups[2],
                        name: "spikes",
                        desc: "damages enemies when they touch them",
                        req: ["wood", 20, "stone", 5],
                        health: 400,
                        dmg: 20,
                        scale: 49,
                        spritePadding: -23,
                        holdOffset: 8,
                        placeOffset: -5,
                        itemID: 6,
                        itemAID: 22
                    }, {
                        age: 5,
                        group: this.groups[2],
                        name: "greater spikes",
                        desc: "damages enemies when they touch them",
                        req: ["wood", 30, "stone", 10],
                        health: 500,
                        dmg: 35,
                        scale: 52,
                        spritePadding: -23,
                        holdOffset: 8,
                        placeOffset: -5,
                        itemID: 7,
                        itemAID: 23
                    }, {
                        age: 9,
                        group: this.groups[2],
                        name: "poison spikes",
                        desc: "poisons enemies when they touch them",
                        req: ["wood", 35, "stone", 15],
                        health: 600,
                        dmg: 30,
                        pDmg: 5,
                        scale: 52,
                        spritePadding: -23,
                        holdOffset: 8,
                        placeOffset: -5,
                        itemID: 8,
                        itemAID: 24
                    }, {
                        age: 9,
                        group: this.groups[2],
                        name: "spinning spikes",
                        desc: "damages enemies when they touch them",
                        req: ["wood", 30, "stone", 20],
                        health: 500,
                        dmg: 45,
                        turnSpeed: 0.003,
                        scale: 52,
                        spritePadding: -23,
                        holdOffset: 8,
                        placeOffset: -5,
                        itemID: 9,
                        itemAID: 25
                    }, {
                        group: this.groups[3],
                        name: "windmill",
                        desc: "generates gold over time",
                        req: ["wood", 50, "stone", 10],
                        health: 400,
                        pps: 1,
                        turnSpeed: 0.0016,
                        spritePadding: 25,
                        iconLineMult: 12,
                        scale: 45,
                        holdOffset: 20,
                        placeOffset: 5,
                        itemID: 10,
                        itemAID: 26
                    }, {
                        age: 5,
                        group: this.groups[3],
                        name: "faster windmill",
                        desc: "generates more gold over time",
                        req: ["wood", 60, "stone", 20],
                        health: 500,
                        pps: 1.5,
                        turnSpeed: 0.0025,
                        spritePadding: 25,
                        iconLineMult: 12,
                        scale: 47,
                        holdOffset: 20,
                        placeOffset: 5,
                        itemID: 11,
                        itemAID: 27
                    }, {
                        age: 8,
                        group: this.groups[3],
                        name: "power mill",
                        desc: "generates more gold over time",
                        req: ["wood", 100, "stone", 50],
                        health: 800,
                        pps: 2,
                        turnSpeed: 0.005,
                        spritePadding: 25,
                        iconLineMult: 12,
                        scale: 47,
                        holdOffset: 20,
                        placeOffset: 5,
                        itemID: 12,
                        itemAID: 28
                    }, {
                        age: 5,
                        group: this.groups[4],
                        type: 2,
                        name: "mine",
                        desc: "allows you to mine stone",
                        req: ["wood", 20, "stone", 100],
                        iconLineMult: 12,
                        scale: 65,
                        holdOffset: 20,
                        placeOffset: 0,
                        itemID: 13,
                        itemAID: 29
                    }, {
                        age: 5,
                        group: this.groups[11],
                        type: 0,
                        name: "sapling",
                        desc: "allows you to farm wood",
                        req: ["wood", 150],
                        iconLineMult: 12,
                        colDiv: 0.5,
                        scale: 110,
                        holdOffset: 50,
                        placeOffset: -15,
                        itemID: 14,
                        itemAID: 30
                    }, {
                        age: 4,
                        group: this.groups[5],
                        name: "pit trap",
                        desc: "pit that traps enemies if they walk over it",
                        req: ["wood", 30, "stone", 30],
                        trap: true,
                        ignoreCollision: true,
                        hideFromEnemy: true,
                        health: 500,
                        colDiv: 0.2,
                        scale: 50,
                        holdOffset: 20,
                        placeOffset: -5,
                        alpha: 0.6,
                        itemID: 15,
                        itemAID: 31
                    }, {
                        age: 4,
                        group: this.groups[6],
                        name: "boost pad",
                        desc: "provides boost when stepped on",
                        req: ["stone", 20, "wood", 5],
                        ignoreCollision: true,
                        boostSpeed: 1.5,
                        health: 150,
                        colDiv: 0.7,
                        scale: 45,
                        holdOffset: 20,
                        placeOffset: -5,
                        itemID: 16,
                        itemAID: 32
                    }, {
                        age: 7,
                        group: this.groups[7],
                        doUpdate: true,
                        name: "turret",
                        desc: "defensive structure that shoots at enemies",
                        req: ["wood", 200, "stone", 150],
                        health: 800,
                        projectile: 1,
                        shootRange: 700,
                        shootRate: 2200,
                        scale: 43,
                        holdOffset: 20,
                        placeOffset: -5,
                        itemID: 17,
                        itemAID: 33
                    }, {
                        age: 7,
                        group: this.groups[8],
                        name: "platform",
                        desc: "platform to shoot over walls and cross over water",
                        req: ["wood", 20],
                        ignoreCollision: true,
                        zIndex: 1,
                        health: 300,
                        scale: 43,
                        holdOffset: 20,
                        placeOffset: -5,
                        itemID: 18,
                        itemAID: 34
                    }, {
                        age: 7,
                        group: this.groups[9],
                        name: "healing pad",
                        desc: "standing on it will slowly heal you",
                        req: ["wood", 30, "food", 10],
                        ignoreCollision: true,
                        healCol: 15,
                        health: 400,
                        colDiv: 0.7,
                        scale: 45,
                        holdOffset: 20,
                        placeOffset: -5,
                        itemID: 19,
                        itemAID: 35
                    }, {
                        age: 9,
                        group: this.groups[10],
                        name: "spawn pad",
                        desc: "you will spawn here when you die but it will dissapear",
                        req: ["wood", 100, "stone", 100],
                        health: 400,
                        ignoreCollision: true,
                        spawnPoint: true,
                        scale: 45,
                        holdOffset: 20,
                        placeOffset: -5,
                        itemID: 20,
                        itemAID: 36
                    }, {
                        age: 7,
                        group: this.groups[12],
                        name: "blocker",
                        desc: "blocks building in radius",
                        req: ["wood", 30, "stone", 25],
                        ignoreCollision: true,
                        blocker: 300,
                        health: 400,
                        colDiv: 0.7,
                        scale: 45,
                        holdOffset: 20,
                        placeOffset: -5,
                        itemID: 21,
                        itemAID: 37
                    }, {
                        age: 7,
                        group: this.groups[13],
                        name: "teleporter",
                        desc: "teleports you to a random point on the map",
                        req: ["wood", 60, "stone", 60],
                        ignoreCollision: true,
                        teleport: true,
                        health: 200,
                        colDiv: 0.7,
                        scale: 45,
                        holdOffset: 20,
                        placeOffset: -5,
                        itemID: 22,
                        itemAID: 38
                    }];
                    this.checkItem = {
                        index: function(_0x4d72fd, _0x5016a7) {
                            if ([0, 1, 2].includes(_0x4d72fd)) {
                                return 0;
                            } else if ([3, 4, 5].includes(_0x4d72fd)) {
                                return 1;
                            } else if ([6, 7, 8, 9].includes(_0x4d72fd)) {
                                return 2;
                            } else if ([10, 11, 12].includes(_0x4d72fd)) {
                                return 3;
                            } else if ([13, 14].includes(_0x4d72fd)) {
                                return 5;
                            } else if ([15, 16].includes(_0x4d72fd)) {
                                return 4;
                            } else if ([17, 18, 19, 21, 22].includes(_0x4d72fd)) {
                                if ([13, 14].includes(_0x5016a7)) {
                                    return 6;
                                } else {
                                    return 5;
                                }
                            } else if (_0x4d72fd == 20) {
                                if ([13, 14].includes(_0x5016a7)) {
                                    return 7;
                                } else {
                                    return 6;
                                }
                            } else {
                                return undefined;
                            }
                        }
                    };
                    for (let _0x259440 = 0; _0x259440 < this.list.length; ++_0x259440) {
                        this.list[_0x259440].id = _0x259440;
                        if (this.list[_0x259440].pre) {
                            this.list[_0x259440].pre = _0x259440 - this.list[_0x259440].pre;
                        }
                    }
                    if (typeof window !== "undefined") {
                        function _0x1457d9(_0x242cbe) {
                            for (let _0x23ad63 = _0x242cbe.length - 1; _0x23ad63 > 0; _0x23ad63--) {
                                const _0x41324e = Math.floor(Math.random() * (_0x23ad63 + 1));
                                [_0x242cbe[_0x23ad63], _0x242cbe[_0x41324e]] = [_0x242cbe[_0x41324e], _0x242cbe[_0x23ad63]];
                            }
                            return _0x242cbe;
                        }
                    }
                }
            }
            class _0x27e651 {
                constructor(_0x1620aa, _0x2ba8c7, _0x367e30, _0x3e9e0c, _0x1d21b9, _0x571433) {
                    let _0x34673c = Math.floor;
                    let _0x283b11 = Math.abs;
                    let _0xabf3a6 = Math.cos;
                    let _0x531e0b = Math.sin;
                    let _0x3bab29 = Math.pow;
                    let _0x497116 = Math.sqrt;
                    this.ignoreAdd = false;
                    this.hitObj = [];
                    this.disableObj = function(_0x413d60) {
                        _0x413d60.active = false;
                        if (_0x3e9e0c.anotherVisual) {} else {
                            _0x413d60.alive = false;
                        }
                    };
                    let _0x4d20ab;
                    this.add = function(_0x4c7033, _0x144eee, _0x9fda6e, _0x1e546d, _0x493f1e, _0x2f2031, _0x2ea4b6, _0x17d95a, _0x242ee8) {
                        _0x4d20ab = _0x5fb95d(_0x4c7033);
                        if (!_0x4d20ab) {
                            _0x4d20ab = _0x2ba8c7.find(_0x338ee1 => !_0x338ee1.active);
                            if (!_0x4d20ab) {
                                _0x4d20ab = new _0x1620aa(_0x4c7033);
                                _0x2ba8c7.push(_0x4d20ab);
                            }
                        }
                        if (_0x17d95a) {
                            _0x4d20ab.sid = _0x4c7033;
                        }
                        _0x4d20ab.init(_0x144eee, _0x9fda6e, _0x1e546d, _0x493f1e, _0x2f2031, _0x2ea4b6, _0x242ee8);
                    };
                    this.disableBySid = function(_0x4ae778) {
                        let _0x53d42b = _0x5fb95d(_0x4ae778);
                        if (_0x53d42b) {
                            this.disableObj(_0x53d42b);
                        }
                    };
                    this.removeAllItems = function(_0x202ce2, _0x2da6c7) {
                        _0x2ba8c7.filter(_0x5ccca9 => _0x5ccca9.active && _0x5ccca9.owner && _0x5ccca9.owner.sid == _0x202ce2).forEach(_0x3dbb95 => this.disableObj(_0x3dbb95));
                    };
                    this.checkItemLocation = function(_0xab173f, _0x3729cf, _0x32392a, _0x29baef, _0x4b3707, _0x1bae59, _0x4c48ad) {
                        let _0x2d1481 = _0x2ba8c7.find(_0x4eee4b => _0x4eee4b.active && _0x367e30.getDistance(_0xab173f, _0x3729cf, _0x4eee4b.x, _0x4eee4b.y) < _0x32392a + (_0x4eee4b.blocker ? _0x4eee4b.blocker : _0x4eee4b.getScale(_0x29baef, _0x4eee4b.isItem)));
                        if (_0x2d1481) {
                            return false;
                        }
                        if (!_0x1bae59 && _0x4b3707 != 18 && _0x3729cf >= _0x3e9e0c.mapScale / 2 - _0x3e9e0c.riverWidth / 2 && _0x3729cf <= _0x3e9e0c.mapScale / 2 + _0x3e9e0c.riverWidth / 2) {
                            return false;
                        }
                        return true;
                    };
                }
            }
            class _0x2208d9 {
                constructor(_0x101815, _0x4cfdd8, _0x52f02d, _0x20484e, _0x305078, _0x538a6d, _0x4539b1) {
                    this.init = function(_0x2351aa, _0x1f06c5, _0x1337b4, _0x50c983, _0x4e8f9d, _0x8ca4b0, _0x715808, _0x2218cd, _0x290d64) {
                        this.active = true;
                        this.tickActive = true;
                        this.indx = _0x2351aa;
                        this.x = _0x1f06c5;
                        this.y = _0x1337b4;
                        this.x2 = _0x1f06c5;
                        this.y2 = _0x1337b4;
                        this.dir = _0x50c983;
                        this.skipMov = true;
                        this.speed = _0x4e8f9d;
                        this.dmg = _0x8ca4b0;
                        this.scale = _0x2218cd;
                        this.range = _0x715808;
                        this.r2 = _0x715808;
                        this.owner = _0x290d64;
                    };
                    this.update = function(_0xf7f3f3) {
                        if (this.active) {
                            let _0x216664 = this.speed * _0xf7f3f3;
                            if (!this.skipMov) {
                                this.x += _0x216664 * Math.cos(this.dir);
                                this.y += _0x216664 * Math.sin(this.dir);
                                this.range -= _0x216664;
                                if (this.range <= 0) {
                                    this.x += this.range * Math.cos(this.dir);
                                    this.y += this.range * Math.sin(this.dir);
                                    _0x216664 = 1;
                                    this.range = 0;
                                    this.active = false;
                                }
                            } else {
                                this.skipMov = false;
                            }
                        }
                    };
                    this.tickUpdate = function(_0x5af572) {
                        if (this.tickActive) {
                            let _0xce01f8 = this.speed * _0x5af572;
                            if (!this.skipMov) {
                                this.x2 += _0xce01f8 * Math.cos(this.dir);
                                this.y2 += _0xce01f8 * Math.sin(this.dir);
                                this.r2 -= _0xce01f8;
                                if (this.r2 <= 0) {
                                    this.x2 += this.r2 * Math.cos(this.dir);
                                    this.y2 += this.r2 * Math.sin(this.dir);
                                    _0xce01f8 = 1;
                                    this.r2 = 0;
                                    this.tickActive = false;
                                }
                            } else {
                                this.skipMov = false;
                            }
                        }
                    };
                }
            };
            class _0x59b2ce {
                constructor() {
                    this.hats = [{
                        id: 45,
                        name: "Shame!",
                        dontSell: true,
                        price: 0,
                        scale: 120,
                        desc: "hacks are for winners"
                    }, {
                        id: 51,
                        name: "Moo Cap",
                        price: 0,
                        scale: 120,
                        desc: "coolest mooer around"
                    }, {
                        id: 50,
                        name: "Apple Cap",
                        price: 0,
                        scale: 120,
                        desc: "apple farms remembers"
                    }, {
                        id: 28,
                        name: "Moo Head",
                        price: 0,
                        scale: 120,
                        desc: "no effect"
                    }, {
                        id: 29,
                        name: "Pig Head",
                        price: 0,
                        scale: 120,
                        desc: "no effect"
                    }, {
                        id: 30,
                        name: "Fluff Head",
                        price: 0,
                        scale: 120,
                        desc: "no effect"
                    }, {
                        id: 36,
                        name: "Pandou Head",
                        price: 0,
                        scale: 120,
                        desc: "no effect"
                    }, {
                        id: 37,
                        name: "Bear Head",
                        price: 0,
                        scale: 120,
                        desc: "no effect"
                    }, {
                        id: 38,
                        name: "Monkey Head",
                        price: 0,
                        scale: 120,
                        desc: "no effect"
                    }, {
                        id: 44,
                        name: "Polar Head",
                        price: 0,
                        scale: 120,
                        desc: "no effect"
                    }, {
                        id: 35,
                        name: "Fez Hat",
                        price: 0,
                        scale: 120,
                        desc: "no effect"
                    }, {
                        id: 42,
                        name: "Enigma Hat",
                        price: 0,
                        scale: 120,
                        desc: "join the enigma army"
                    }, {
                        id: 43,
                        name: "Blitz Hat",
                        price: 0,
                        scale: 120,
                        desc: "hey everybody i'm blitz"
                    }, {
                        id: 49,
                        name: "Bob XIII Hat",
                        price: 0,
                        scale: 120,
                        desc: "like and subscribe"
                    }, {
                        id: 57,
                        name: "Pumpkin",
                        price: 50,
                        scale: 120,
                        desc: "Spooooky"
                    }, {
                        id: 8,
                        name: "Bummle Hat",
                        price: 100,
                        scale: 120,
                        desc: "no effect"
                    }, {
                        id: 2,
                        name: "Straw Hat",
                        price: 500,
                        scale: 120,
                        desc: "no effect"
                    }, {
                        id: 15,
                        name: "Winter Cap",
                        price: 600,
                        scale: 120,
                        desc: "allows you to move at normal speed in snow",
                        coldM: 1
                    }, {
                        id: 5,
                        name: "Cowboy Hat",
                        price: 1000,
                        scale: 120,
                        desc: "no effect"
                    }, {
                        id: 4,
                        name: "Ranger Hat",
                        price: 2000,
                        scale: 120,
                        desc: "no effect"
                    }, {
                        id: 18,
                        name: "Explorer Hat",
                        price: 2000,
                        scale: 120,
                        desc: "no effect"
                    }, {
                        id: 31,
                        name: "Flipper Hat",
                        price: 2500,
                        scale: 120,
                        desc: "have more control while in water",
                        watrImm: true
                    }, {
                        id: 1,
                        name: "Marksman Cap",
                        price: 3000,
                        scale: 120,
                        desc: "increases arrow speed and range",
                        aMlt: 1.3
                    }, {
                        id: 10,
                        name: "Bush Gear",
                        price: 3000,
                        scale: 160,
                        desc: "allows you to disguise yourself as a bush"
                    }, {
                        id: 48,
                        name: "Halo",
                        price: 3000,
                        scale: 120,
                        desc: "no effect"
                    }, {
                        id: 6,
                        name: "Soldier Helmet",
                        price: 4000,
                        scale: 120,
                        desc: "reduces damage taken but slows movement",
                        spdMult: 0.94,
                        dmgMult: 0.75
                    }, {
                        id: 23,
                        name: "Anti Venom Gear",
                        price: 4000,
                        scale: 120,
                        desc: "makes you immune to poison",
                        poisonRes: 1
                    }, {
                        id: 13,
                        name: "Medic Gear",
                        price: 5000,
                        scale: 110,
                        desc: "slowly regenerates health over time",
                        healthRegen: 3
                    }, {
                        id: 9,
                        name: "Miners Helmet",
                        price: 5000,
                        scale: 120,
                        desc: "earn 1 extra gold per resource",
                        extraGold: 1
                    }, {
                        id: 32,
                        name: "Musketeer Hat",
                        price: 5000,
                        scale: 120,
                        desc: "reduces cost of projectiles",
                        projCost: 0.5
                    }, {
                        id: 7,
                        name: "Bull Helmet",
                        price: 6000,
                        scale: 120,
                        desc: "increases damage done but drains health",
                        healthRegen: -5,
                        dmgMultO: 1.5,
                        spdMult: 0.96
                    }, {
                        id: 22,
                        name: "Emp Helmet",
                        price: 6000,
                        scale: 120,
                        desc: "turrets won't attack but you move slower",
                        antiTurret: 1,
                        spdMult: 0.7
                    }, {
                        id: 12,
                        name: "Booster Hat",
                        price: 6000,
                        scale: 120,
                        desc: "increases your movement speed",
                        spdMult: 1.16
                    }, {
                        id: 26,
                        name: "Barbarian Armor",
                        price: 8000,
                        scale: 120,
                        desc: "knocks back enemies that attack you",
                        dmgK: 0.6
                    }, {
                        id: 21,
                        name: "Plague Mask",
                        price: 10000,
                        scale: 120,
                        desc: "melee attacks deal poison damage",
                        poisonDmg: 5,
                        poisonTime: 6
                    }, {
                        id: 46,
                        name: "Bull Mask",
                        price: 10000,
                        scale: 120,
                        desc: "bulls won't target you unless you attack them",
                        bullRepel: 1
                    }, {
                        id: 14,
                        name: "Windmill Hat",
                        topSprite: true,
                        price: 10000,
                        scale: 120,
                        desc: "generates points while worn",
                        pps: 1.5
                    }, {
                        id: 11,
                        name: "Spike Gear",
                        topSprite: true,
                        price: 10000,
                        scale: 120,
                        desc: "deal damage to players that damage you",
                        dmg: 0.45
                    }, {
                        id: 53,
                        name: "Turret Gear",
                        topSprite: true,
                        price: 10000,
                        scale: 120,
                        desc: "you become a walking turret",
                        turret: {
                            proj: 1,
                            range: 700,
                            rate: 2500
                        },
                        spdMult: 0.7
                    }, {
                        id: 20,
                        name: "Samurai Armor",
                        price: 12000,
                        scale: 120,
                        desc: "increased attack speed and fire rate",
                        atkSpd: 0.78
                    }, {
                        id: 58,
                        name: "Dark Knight",
                        price: 12000,
                        scale: 120,
                        desc: "restores health when you deal damage",
                        healD: 0.4
                    }, {
                        id: 27,
                        name: "Scavenger Gear",
                        price: 15000,
                        scale: 120,
                        desc: "earn double points for each kill",
                        kScrM: 2
                    }, {
                        id: 40,
                        name: "Tank Gear",
                        price: 15000,
                        scale: 120,
                        desc: "increased damage to buildings but slower movement",
                        spdMult: 0.3,
                        bDmg: 3.3
                    }, {
                        id: 52,
                        name: "Thief Gear",
                        price: 15000,
                        scale: 120,
                        desc: "steal half of a players gold when you kill them",
                        goldSteal: 0.5
                    }, {
                        id: 55,
                        name: "Bloodthirster",
                        price: 20000,
                        scale: 120,
                        desc: "Restore Health when dealing damage. And increased damage",
                        healD: 0.25,
                        dmgMultO: 1.2
                    }, {
                        id: 56,
                        name: "Assassin Gear",
                        price: 20000,
                        scale: 120,
                        desc: "Go invisible when not moving. Can't eat. Increased speed",
                        noEat: true,
                        spdMult: 1.1,
                        invisTimer: 1000
                    }];
                    this.accessories = [{
                        id: 12,
                        name: "Snowball",
                        price: 1000,
                        scale: 105,
                        xOff: 18,
                        desc: "no effect"
                    }, {
                        id: 9,
                        name: "Tree Cape",
                        price: 1000,
                        scale: 90,
                        desc: "no effect"
                    }, {
                        id: 10,
                        name: "Stone Cape",
                        price: 1000,
                        scale: 90,
                        desc: "no effect"
                    }, {
                        id: 3,
                        name: "Cookie Cape",
                        price: 1500,
                        scale: 90,
                        desc: "no effect"
                    }, {
                        id: 8,
                        name: "Cow Cape",
                        price: 2000,
                        scale: 90,
                        desc: "no effect"
                    }, {
                        id: 11,
                        name: "Monkey Tail",
                        price: 2000,
                        scale: 97,
                        xOff: 25,
                        desc: "Super speed but reduced damage",
                        spdMult: 1.35,
                        dmgMultO: 0.2
                    }, {
                        id: 17,
                        name: "Apple Basket",
                        price: 3000,
                        scale: 80,
                        xOff: 12,
                        desc: "slowly regenerates health over time",
                        healthRegen: 1
                    }, {
                        id: 6,
                        name: "Winter Cape",
                        price: 3000,
                        scale: 90,
                        desc: "no effect"
                    }, {
                        id: 4,
                        name: "Skull Cape",
                        price: 4000,
                        scale: 90,
                        desc: "no effect"
                    }, {
                        id: 5,
                        name: "Dash Cape",
                        price: 5000,
                        scale: 90,
                        desc: "no effect"
                    }, {
                        id: 2,
                        name: "Dragon Cape",
                        price: 6000,
                        scale: 90,
                        desc: "no effect"
                    }, {
                        id: 1,
                        name: "Super Cape",
                        price: 8000,
                        scale: 90,
                        desc: "no effect"
                    }, {
                        id: 7,
                        name: "Troll Cape",
                        price: 8000,
                        scale: 90,
                        desc: "no effect"
                    }, {
                        id: 14,
                        name: "Thorns",
                        price: 10000,
                        scale: 115,
                        xOff: 20,
                        desc: "no effect"
                    }, {
                        id: 15,
                        name: "Blockades",
                        price: 10000,
                        scale: 95,
                        xOff: 15,
                        desc: "no effect"
                    }, {
                        id: 20,
                        name: "Devils Tail",
                        price: 10000,
                        scale: 95,
                        xOff: 20,
                        desc: "no effect"
                    }, {
                        id: 16,
                        name: "Sawblade",
                        price: 12000,
                        scale: 90,
                        spin: true,
                        xOff: 0,
                        desc: "deal damage to players that damage you",
                        dmg: 0.15
                    }, {
                        id: 13,
                        name: "Angel Wings",
                        price: 15000,
                        scale: 138,
                        xOff: 22,
                        desc: "slowly regenerates health over time",
                        healthRegen: 3
                    }, {
                        id: 19,
                        name: "Shadow Wings",
                        price: 15000,
                        scale: 138,
                        xOff: 22,
                        desc: "increased movement speed",
                        spdMult: 1.1
                    }, {
                        id: 18,
                        name: "Blood Wings",
                        price: 20000,
                        scale: 178,
                        xOff: 26,
                        desc: "restores health when you deal damage",
                        healD: 0.2
                    }, {
                        id: 21,
                        name: "Corrupt X Wings",
                        price: 20000,
                        scale: 178,
                        xOff: 26,
                        desc: "deal damage to players that damage you",
                        dmg: 0.25
                    }];
                }
            };
            class _0x453b06 {
                constructor(_0x1dd45f, _0x12b5bf, _0x598131, _0x32f373, _0xfb56a, _0x28d06f, _0x42e43f, _0x124e96, _0x41dc22) {
                    this.addProjectile = function(_0x367e9a, _0x37a990, _0x52ac26, _0x5d4f58, _0x22bca7, _0x10ee19, _0x382b90, _0x46a962, _0x2834e2, _0x2f7764) {
                        let _0x5a466d = _0x28d06f.projectiles[_0x10ee19];
                        let _0x580cea;
                        for (let _0x300a44 = 0; _0x300a44 < _0x12b5bf.length; ++_0x300a44) {
                            if (!_0x12b5bf[_0x300a44].active) {
                                _0x580cea = _0x12b5bf[_0x300a44];
                                break;
                            }
                        }
                        if (!_0x580cea) {
                            _0x580cea = new _0x1dd45f(_0x598131, _0x32f373, _0xfb56a, _0x28d06f, _0x42e43f, _0x124e96, _0x41dc22);
                            _0x580cea.sid = _0x12b5bf.length;
                            _0x12b5bf.push(_0x580cea);
                        }
                        _0x580cea.init(_0x10ee19, _0x367e9a, _0x37a990, _0x52ac26, _0x22bca7, _0x5a466d.dmg, _0x5d4f58, _0x5a466d.scale, _0x382b90);
                        _0x580cea.ignoreObj = _0x46a962;
                        _0x580cea.layer = _0x2834e2 || _0x5a466d.layer;
                        _0x580cea.inWindow = _0x2f7764;
                        _0x580cea.src = _0x5a466d.src;
                        return _0x580cea;
                    };
                }
            };
            class _0x3ac1fc {
                constructor(_0x56ae32, _0xe7a083, _0x257995, _0xf33517, _0x53ad04, _0x5dd8fd, _0x116151, _0x3b80cc, _0x4563fa) {
                    this.aiTypes = [{
                        id: 0,
                        src: "cow_1",
                        killScore: 150,
                        health: 500,
                        weightM: 0.8,
                        speed: 0.00095,
                        turnSpeed: 0.001,
                        scale: 72,
                        drop: ["food", 50]
                    }, {
                        id: 1,
                        src: "pig_1",
                        killScore: 200,
                        health: 800,
                        weightM: 0.6,
                        speed: 0.00085,
                        turnSpeed: 0.001,
                        scale: 72,
                        drop: ["food", 80]
                    }, {
                        id: 2,
                        name: "Bull",
                        src: "bull_2",
                        hostile: true,
                        dmg: 20,
                        killScore: 1000,
                        health: 1800,
                        weightM: 0.5,
                        speed: 0.00094,
                        turnSpeed: 0.00074,
                        scale: 78,
                        viewRange: 800,
                        chargePlayer: true,
                        drop: ["food", 100]
                    }, {
                        id: 3,
                        name: "Bully",
                        src: "bull_1",
                        hostile: true,
                        dmg: 20,
                        killScore: 2000,
                        health: 2800,
                        weightM: 0.45,
                        speed: 0.001,
                        turnSpeed: 0.0008,
                        scale: 90,
                        viewRange: 900,
                        chargePlayer: true,
                        drop: ["food", 400]
                    }, {
                        id: 4,
                        name: "Wolf",
                        src: "wolf_1",
                        hostile: true,
                        dmg: 8,
                        killScore: 500,
                        health: 300,
                        weightM: 0.45,
                        speed: 0.001,
                        turnSpeed: 0.002,
                        scale: 84,
                        viewRange: 800,
                        chargePlayer: true,
                        drop: ["food", 200]
                    }, {
                        id: 5,
                        name: "Quack",
                        src: "chicken_1",
                        dmg: 8,
                        killScore: 2000,
                        noTrap: true,
                        health: 300,
                        weightM: 0.2,
                        speed: 0.0018,
                        turnSpeed: 0.006,
                        scale: 70,
                        drop: ["food", 100]
                    }, {
                        id: 6,
                        name: "MOOSTAFA",
                        nameScale: 50,
                        src: "enemy",
                        hostile: true,
                        dontRun: true,
                        fixedSpawn: true,
                        spawnDelay: 60000,
                        noTrap: true,
                        colDmg: 100,
                        dmg: 40,
                        killScore: 8000,
                        health: 18000,
                        weightM: 0.4,
                        speed: 0.0007,
                        turnSpeed: 0.01,
                        scale: 80,
                        spriteMlt: 1.8,
                        leapForce: 0.9,
                        viewRange: 1000,
                        hitRange: 210,
                        hitDelay: 1000,
                        chargePlayer: true,
                        drop: ["food", 100]
                    }, {
                        id: 7,
                        name: "Treasure",
                        hostile: true,
                        nameScale: 35,
                        src: "crate_1",
                        fixedSpawn: true,
                        spawnDelay: 120000,
                        colDmg: 200,
                        killScore: 5000,
                        health: 20000,
                        weightM: 0.1,
                        speed: 0,
                        turnSpeed: 0,
                        scale: 70,
                        spriteMlt: 1
                    }, {
                        id: 8,
                        name: "MOOFIE",
                        src: "wolf_2",
                        hostile: true,
                        fixedSpawn: true,
                        dontRun: true,
                        hitScare: 4,
                        spawnDelay: 30000,
                        noTrap: true,
                        nameScale: 35,
                        dmg: 10,
                        colDmg: 100,
                        killScore: 3000,
                        health: 7000,
                        weightM: 0.45,
                        speed: 0.0015,
                        turnSpeed: 0.002,
                        scale: 90,
                        viewRange: 800,
                        chargePlayer: true,
                        drop: ["food", 1000]
                    }];
                    this.spawn = function(_0x5a65c3, _0x25fee4, _0x352eae, _0x20e366) {
                        let _0x1ba734 = _0x56ae32.find(_0x119749 => !_0x119749.active);
                        if (!_0x1ba734) {
                            _0x1ba734 = new _0xe7a083(_0x56ae32.length, _0x53ad04, _0x257995, _0xf33517, _0x116151, _0x5dd8fd, _0x3b80cc, _0x4563fa);
                            _0x56ae32.push(_0x1ba734);
                        }
                        _0x1ba734.init(_0x5a65c3, _0x25fee4, _0x352eae, _0x20e366, this.aiTypes[_0x20e366]);
                        return _0x1ba734;
                    };
                }
            };
            class _0x89e306 {
                constructor(_0x388fe6, _0x3f832f, _0xa29794, _0x1521b7, _0x556203, _0x318a6d, _0xd6ba86, _0x2c6187) {
                    this.sid = _0x388fe6;
                    this.isAI = true;
                    this.nameIndex = _0x556203.randInt(0, _0x318a6d.cowNames.length - 1);
                    this.init = function(_0x1d005f, _0x27ad61, _0x5d4852, _0x439aa4, _0x31b8de) {
                        this.x = _0x1d005f;
                        this.y = _0x27ad61;
                        this.startX = _0x31b8de.fixedSpawn ? _0x1d005f : null;
                        this.startY = _0x31b8de.fixedSpawn ? _0x27ad61 : null;
                        this.xVel = 0;
                        this.yVel = 0;
                        this.zIndex = 0;
                        this.dir = _0x5d4852;
                        this.dirPlus = 0;
                        this.index = _0x439aa4;
                        this.src = _0x31b8de.src;
                        if (_0x31b8de.name) {
                            this.name = _0x31b8de.name;
                        }
                        this.weightM = _0x31b8de.weightM;
                        this.speed = _0x31b8de.speed;
                        this.killScore = _0x31b8de.killScore;
                        this.turnSpeed = _0x31b8de.turnSpeed;
                        this.scale = _0x31b8de.scale;
                        this.maxHealth = _0x31b8de.health;
                        this.leapForce = _0x31b8de.leapForce;
                        this.health = this.maxHealth;
                        this.chargePlayer = _0x31b8de.chargePlayer;
                        this.viewRange = _0x31b8de.viewRange;
                        this.drop = _0x31b8de.drop;
                        this.dmg = _0x31b8de.dmg;
                        this.hostile = _0x31b8de.hostile;
                        this.dontRun = _0x31b8de.dontRun;
                        this.hitRange = _0x31b8de.hitRange;
                        this.hitDelay = _0x31b8de.hitDelay;
                        this.hitScare = _0x31b8de.hitScare;
                        this.spriteMlt = _0x31b8de.spriteMlt;
                        this.nameScale = _0x31b8de.nameScale;
                        this.colDmg = _0x31b8de.colDmg;
                        this.noTrap = _0x31b8de.noTrap;
                        this.spawnDelay = _0x31b8de.spawnDelay;
                        this.hitWait = 0;
                        this.waitCount = 1000;
                        this.moveCount = 0;
                        this.targetDir = 0;
                        this.active = true;
                        this.alive = true;
                        this.runFrom = null;
                        this.chargeTarget = null;
                        this.dmgOverTime = {};
                    };
                    let _0x54f8fe = 0;
                    let _0x511ec9 = 0;
                    this.animate = function(_0x340d5f) {
                        if (this.animTime > 0) {
                            this.animTime -= _0x340d5f;
                            if (this.animTime <= 0) {
                                this.animTime = 0;
                                this.dirPlus = 0;
                                _0x54f8fe = 0;
                                _0x511ec9 = 0;
                            } else if (_0x511ec9 == 0) {
                                _0x54f8fe += _0x340d5f / (this.animSpeed * _0x318a6d.hitReturnRatio);
                                this.dirPlus = _0x556203.lerp(0, this.targetAngle, Math.min(1, _0x54f8fe));
                                if (_0x54f8fe >= 1) {
                                    _0x54f8fe = 1;
                                    _0x511ec9 = 1;
                                }
                            } else {
                                _0x54f8fe -= _0x340d5f / (this.animSpeed * (1 - _0x318a6d.hitReturnRatio));
                                this.dirPlus = _0x556203.lerp(0, this.targetAngle, Math.max(0, _0x54f8fe));
                            }
                        }
                    };
                    this.startAnim = function() {
                        this.animTime = this.animSpeed = 600;
                        this.targetAngle = Math.PI * 0.8;
                        _0x54f8fe = 0;
                        _0x511ec9 = 0;
                    };
                }
            };
            class _0xe5c79f {
                constructor(_0x3174f6, _0x58f1d3, _0x212271, _0x55a643) {
                    this.x = _0x3174f6;
                    this.y = _0x58f1d3;
                    this.alpha = 0;
                    this.active = true;
                    this.alive = false;
                    this.chat = _0x212271;
                    this.owner = _0x55a643;
                }
            };
            class _0x3bfc1a {
                constructor(_0x311da5, _0x446179, _0x3b0319, _0x31a57a, _0x48eded, _0x405970, _0x10c7ca, _0x14c508, _0x1655ef, _0x176d56) {
                    this.x = _0x311da5;
                    this.y = _0x446179;
                    this.lastDir = _0x3b0319;
                    this.dir = _0x3b0319 + Math.PI;
                    this.buildIndex = _0x31a57a;
                    this.weaponIndex = _0x48eded;
                    this.weaponVariant = _0x405970;
                    this.accessories = _0x31c88a(13, 1);
                    this.skinColor = 4;
                    this.scale = _0x14c508;
                    this.visScale = 0;
                    this.name = _0x1655ef;
                    this.alpha = 1;
                    this.rotationSpeed = 0.1;
                    this.movementSpeed = -1;
                    this.active = false;
                    this.animate = function(_0x4ad838) {
                        let _0x4015de = _0x1b05b9.getAngleDist(this.lastDir, this.dir);
                        if (_0x4015de > 0.01) {
                            this.dir += _0x4015de / 20;
                        } else {
                            this.dir = this.lastDir;
                        }
                        if (this.visScale < this.scale) {
                            this.visScale += _0x4ad838 / (this.scale / 2);
                            if (this.visScale >= this.scale) {
                                this.visScale = this.scale;
                            }
                        }
                        this.alpha -= _0x4ad838 / 30000;
                        if (this.alpha <= 0) {
                            this.alpha = 0;
                            this.active = false;
                        }
                    };
                    this.dir += this.rotationSpeed;
                    this.x += Math.cos(this.dir) * this.movementSpeed;
                    this.y += Math.sin(this.dir) * this.movementSpeed;
                }
            };
            class _0x4af63b {
                constructor(_0x5d23c1, _0x8cd7ca, _0x33e441, _0x20c1df, _0x41e4eb, _0x1d1df7, _0x1cd9d8, _0x4123cd, _0x46f3, _0x5053ce, _0xb78118, _0x334b7c, _0x480b64, _0x2aa9bc) {
                    this.id = _0x5d23c1;
                    this.sid = _0x8cd7ca;
                    this.tmpScore = 0;
                    this.team = null;
                    this.latestSkin = 0;
                    this.oldSkinIndex = 0;
                    this.skinIndex = 0;
                    this.latestTail = 0;
                    this.oldTailIndex = 0;
                    this.tailIndex = 0;
                    this.hitTime = 0;
                    this.lastHit = 0;
                    this.tails = {};
                    for (let _0x1be827 = 0; _0x1be827 < _0xb78118.length; ++_0x1be827) {
                        if (_0xb78118[_0x1be827].price <= 0) {
                            this.tails[_0xb78118[_0x1be827].id] = 1;
                        }
                    }
                    this.skins = {};
                    for (let _0x1b6bab = 0; _0x1b6bab < _0x5053ce.length; ++_0x1b6bab) {
                        if (_0x5053ce[_0x1b6bab].price <= 0) {
                            this.skins[_0x5053ce[_0x1b6bab].id] = 1;
                        }
                    }
                    this.points = 0;
                    this.dt = 0;
                    this.hidden = false;
                    this.itemCounts = {};
                    this.isPlayer = true;
                    this.pps = 0;
                    this.moveDir = undefined;
                    this.skinRot = 0;
                    this.lastPing = 0;
                    this.iconIndex = 0;
                    this.skinColor = 0;
                    this.dist2 = 0;
                    this.aim2 = 0;
                    this.maxSpeed = 1;
                    this.chat = {
                        message: null,
                        count: 0
                    };
                    this.backupNobull = true;
                    this.circle = false;
                    this.circleRad = 200;
                    this.circleRadSpd = 0.1;
                    this.cAngle = 0;
                    this.spawn = function(_0x4e82f5) {
                        this.attacked = false;
                        this.death = false;
                        this.spinDir = 0;
                        this.sync = false;
                        this.antiBull = 0;
                        this.bullTimer = 0;
                        this.poisonTimer = 0;
                        this.active = true;
                        this.alive = true;
                        this.lockMove = false;
                        this.lockDir = false;
                        this.minimapCounter = 0;
                        this.chatCountdown = 0;
                        this.shameCount = 0;
                        this.shameTimer = 0;
                        this.sentTo = {};
                        this.gathering = 0;
                        this.gatherIndex = 0;
                        this.shooting = {};
                        this.shootIndex = 9;
                        this.autoGather = 0;
                        this.animTime = 0;
                        this.animSpeed = 0;
                        this.mouseState = 0;
                        this.buildIndex = -1;
                        this.weaponIndex = 0;
                        this.weaponCode = 0;
                        this.weaponVariant = 0;
                        this.primaryIndex = undefined;
                        this.secondaryIndex = undefined;
                        this.dmgOverTime = {};
                        this.noMovTimer = 0;
                        this.maxXP = 300;
                        this.XP = 0;
                        this.age = 1;
                        this.kills = 0;
                        this.upgrAge = 2;
                        this.upgradePoints = 0;
                        this.x = 0;
                        this.y = 0;
                        this.oldXY = {
                            x: 0,
                            y: 0
                        };
                        this.zIndex = 0;
                        this.xVel = 0;
                        this.yVel = 0;
                        this.slowMult = 1;
                        this.dir = 0;
                        this.dirPlus = 0;
                        this.targetDir = 0;
                        this.targetAngle = 0;
                        this.maxHealth = 100;
                        this.health = this.maxHealth;
                        this.oldHealth = this.maxHealth;
                        this.damaged = 0;
                        this.scale = _0x33e441.playerScale;
                        this.speed = _0x33e441.playerSpeed;
                        this.resetMoveDir();
                        this.resetResources(_0x4e82f5);
                        this.items = [0, 3, 6, 10];
                        this.weapons = [0];
                        this.shootCount = 0;
                        this.weaponXP = [];
                        this.reloads = {
                            0: 0,
                            1: 0,
                            2: 0,
                            3: 0,
                            4: 0,
                            5: 0,
                            6: 0,
                            7: 0,
                            8: 0,
                            9: 0,
                            10: 0,
                            11: 0,
                            12: 0,
                            13: 0,
                            14: 0,
                            15: 0,
                            53: 0
                        };
                        this.bowThreat = {
                            9: 0,
                            12: 0,
                            13: 0,
                            15: 0
                        };
                        this.damageThreat = 0;
                        this.inTrap = false;
                        this.canEmpAnti = false;
                        this.empAnti = false;
                        this.soldierAnti = false;
                        this.poisonTick = 0;
                        this.bullTick = 0;
                        this.setPoisonTick = false;
                        this.setBullTick = false;
                        this.antiTimer = 2;
                    };
                    this.resetMoveDir = function() {
                        this.moveDir = undefined;
                    };
                    this.resetResources = function(_0x35b287) {
                        for (let _0x48d230 = 0; _0x48d230 < _0x33e441.resourceTypes.length; ++_0x48d230) {
                            this[_0x33e441.resourceTypes[_0x48d230]] = _0x35b287 ? 100 : 0;
                        }
                    };
                    this.getItemType = function(_0x2b1e42) {
                        let _0xb6e73b = this.items.findIndex(_0x5d45a6 => _0x5d45a6 == _0x2b1e42);
                        if (_0xb6e73b != -1) {
                            return _0xb6e73b;
                        } else {
                            return _0x46f3.checkItem.index(_0x2b1e42, this.items);
                        }
                    };
                    this.setData = function(_0x95b147) {
                        this.id = _0x95b147[0];
                        this.sid = _0x95b147[1];
                        this.name = _0x95b147[2];
                        this.x = _0x95b147[3];
                        this.y = _0x95b147[4];
                        this.dir = _0x95b147[5];
                        this.health = _0x95b147[6];
                        this.maxHealth = _0x95b147[7];
                        this.scale = _0x95b147[8];
                        this.skinColor = _0x95b147[9];
                    };
                    this.updateTimer = function() {
                        this.bullTimer -= 1;
                        if (this.bullTimer <= 0) {
                            this.setBullTick = false;
                            this.bullTick = _0x39dcdf.tick - 1;
                            this.bullTimer = _0x33e441.serverUpdateRate;
                        }
                        this.poisonTimer -= 1;
                        if (this.poisonTimer <= 0) {
                            this.setPoisonTick = false;
                            this.poisonTick = _0x39dcdf.tick - 1;
                            this.poisonTimer = _0x33e441.serverUpdateRate;
                        }
                    };
                    this.update = function(_0x57a9d5) {
                        if (this.alive) {
                            if (this.health != this.healthMov) {
                                if (this.health < this.healthMov) {
                                    this.healthMov -= 2;
                                } else {
                                    this.healthMov += 2;
                                }
                                if (Math.abs(this.health - this.healthMov) < 2) {
                                    this.healthMov = this.health;
                                }
                            };
                            if (this.shameCount != this.shameMov) {
                                if (this.shameCount < this.shameMov) {
                                    this.shameMov -= 0.1;
                                } else {
                                    this.shameMov += 0.1;
                                }
                                if (Math.abs(this.shameCount - this.shameMov) < 0.1) {
                                    this.shameMov = this.shameCount;
                                }
                            }
                        }
                        if (this.sid == _0x453339) {
                            this.circleRad = parseInt(getEl("circleRad").value) || 0;
                            this.circleRadSpd = parseFloat(getEl("radSpeed").value) || 0;
                            this.cAngle += this.circleRadSpd;
                        }
                        if (this.active) {
                            let _0xbeb9e7 = {
                                skin: _0x29112f(_0x5053ce, this.skinIndex),
                                tail: _0x29112f(_0xb78118, this.tailIndex)
                            };
                            let _0x2309cc = (this.buildIndex >= 0 ? 0.5 : 1) * (_0x46f3.weapons[this.weaponIndex].spdMult || 1) * (_0xbeb9e7.skin ? _0xbeb9e7.skin.spdMult || 1 : 1) * (_0xbeb9e7.tail ? _0xbeb9e7.tail.spdMult || 1 : 1) * (this.y <= _0x33e441.snowBiomeTop ? _0xbeb9e7.skin && _0xbeb9e7.skin.coldM ? 1 : _0x33e441.snowSpeed : 1) * this.slowMult;
                            this.maxSpeed = _0x2309cc;
                        }
                    };
                    let _0x648f73 = 0;
                    let _0x42a61c = 0;
                    this.animate = function(_0xc55a53) {
                        if (this.animTime > 0) {
                            this.animTime -= _0xc55a53;
                            if (this.animTime <= 0) {
                                this.animTime = 0;
                                this.dirPlus = 0;
                                _0x648f73 = 0;
                                _0x42a61c = 0;
                            } else if (_0x42a61c == 0) {
                                _0x648f73 += _0xc55a53 / (this.animSpeed * _0x33e441.hitReturnRatio);
                                this.dirPlus = _0x20c1df.lerp(0, this.targetAngle, Math.min(1, _0x648f73));
                                if (_0x648f73 >= 1) {
                                    _0x648f73 = 1;
                                    _0x42a61c = 1;
                                }
                            } else {
                                _0x648f73 -= _0xc55a53 / (this.animSpeed * (1 - _0x33e441.hitReturnRatio));
                                this.dirPlus = _0x20c1df.lerp(0, this.targetAngle, Math.max(0, _0x648f73));
                            }
                        }
                    };
                    this.startAnim = function(_0x1e5485, _0x59efc7) {
                        this.animTime = this.animSpeed = _0x46f3.weapons[_0x59efc7].speed;
                        this.targetAngle = _0x1e5485 ? -_0x33e441.hitAngle : -Math.PI;
                        _0x648f73 = 0;
                        _0x42a61c = 0;
                    };
                    this.canSee = function(_0x153771) {
                        if (!_0x153771) {
                            return false;
                        }
                        let _0x3696c2 = Math.abs(_0x153771.x - this.x) - _0x153771.scale;
                        let _0x46d602 = Math.abs(_0x153771.y - this.y) - _0x153771.scale;
                        return _0x3696c2 <= _0x33e441.maxScreenWidth / 2 * 1.3 && _0x46d602 <= _0x33e441.maxScreenHeight / 2 * 1.3;
                    };
                    this.judgeShame = function() {
                        if (this.oldHealth < this.health) {
                            if (this.hitTime) {
                                let _0x2ba6f8 = Date.now() - this.hitTime;
                                this.lastHit = _0x39dcdf.tick;
                                this.hitTime = 0;
                                if (_0x2ba6f8 < 120) {
                                    this.shameCount++;
                                } else {
                                    this.shameCount = Math.max(0, this.shameCount - 2);
                                }
                            }
                        } else if (this.oldHealth > this.health) {
                            this.hitTime = Date.now();
                        }
                    };
                    this.addShameTimer = function() {
                        this.shameCount = 0;
                        this.shameTimer = 30;
                        let _0x3ea890 = setInterval(() => {
                            this.shameTimer--;
                            if (this.shameTimer <= 0) {
                                clearInterval(_0x3ea890);
                            }
                        }, 1000);
                    };
                    this.isTeam = function(_0x4a211d) {
                        return this == _0x4a211d || this.team && this.team == _0x4a211d.team;
                    };
                    this.findAllianceBySid = function(_0xc668e7) {
                        if (this.team) {
                            return _0x8b521c.find(_0x172091 => _0x172091 === _0xc668e7);
                        } else {
                            return null;
                        }
                    };
                    this.checkCanInsta = function(_0x48b874) {
                        let _0x33f724 = 0;
                        if (this.alive && _0x54d918) {
                            let _0x2a7791 = {
                                weapon: this.weapons[0],
                                variant: this.primaryVariant,
                                dmg: this.weapons[0] == undefined ? 0 : _0x46f3.weapons[this.weapons[0]].dmg
                            };
                            let _0x56f326 = {
                                weapon: this.weapons[1],
                                variant: this.secondaryVariant,
                                dmg: this.weapons[1] == undefined ? 0 : _0x46f3.weapons[this.weapons[1]].Pdmg
                            };
                            let _0xc767d9 = this.skins[7] && !_0x48b874 ? 1.5 : 1;
                            let _0xee5645 = _0x2a7791.variant != undefined ? _0x33e441.weaponVariants[_0x2a7791.variant].val : 1;
                            if (_0x2a7791.weapon != undefined && this.reloads[_0x2a7791.weapon] == 0) {
                                _0x33f724 += _0x2a7791.dmg * _0xee5645 * _0xc767d9;
                            }
                            if (_0x56f326.weapon != undefined && this.reloads[_0x56f326.weapon] == 0) {
                                _0x33f724 += _0x56f326.dmg;
                            }
                            if (this.skins[53] && this.reloads[53] <= (_0x40ec6a.weapons[1] == 10 ? 0 : _0x39dcdf.tickRate) && _0x5f501e.skinIndex != 22) {
                                _0x33f724 += 25;
                            }
                            _0x33f724 *= _0x5f501e.skinIndex == 6 ? 0.75 : 1;
                            return _0x33f724;
                        }
                        return 0;
                    };
                    this.manageReload = function() {
                        if (this.shooting[53]) {
                            this.shooting[53] = 0;
                            this.reloads[53] = 2500 - _0x39dcdf.tickRate;
                        } else if (this.reloads[53] > 0) {
                            this.reloads[53] = Math.max(0, this.reloads[53] - _0x39dcdf.tickRate);
                        }
                        if (this.gathering || this.shooting[1]) {
                            if (this.gathering) {
                                this.gathering = 0;
                                this.reloads[this.gatherIndex] = _0x46f3.weapons[this.gatherIndex].speed * (this.skinIndex == 20 ? 0.78 : 1);
                                this.attacked = true;
                            }
                            if (this.shooting[1]) {
                                this.shooting[1] = 0;
                                this.reloads[this.shootIndex] = _0x46f3.weapons[this.shootIndex].speed * (this.skinIndex == 20 ? 0.78 : 1);
                                this.attacked = true;
                            }
                        } else {
                            this.attacked = false;
                            if (this.buildIndex < 0) {
                                if (this.reloads[this.weaponIndex] > 0) {
                                    this.reloads[this.weaponIndex] = Math.max(0, this.reloads[this.weaponIndex] - _0x39dcdf.tickRate);
                                    if (this == _0x40ec6a) {
                                        if (_0x1dff6e.autoGrind.enabled) {
                                            for (let _0x47e81a = 0; _0x47e81a < Math.PI * 2; _0x47e81a += Math.PI / 2) {
                                                _0x48ac11(_0x40ec6a.getItemType(22), _0x47e81a);
                                            }
                                        }
                                    }
                                    if (this.reloads[this.primaryIndex] == 0 && this.reloads[this.weaponIndex] == 0) {
                                        this.antiBull++;
                                        _0x39dcdf.tickBase(() => {
                                            this.antiBull = 0;
                                        }, 1);
                                    }
                                }
                            }
                        }
                    };
                    this.addDamageThreat = function(_0x4b6fe6) {
                        let _0x13d1e6 = {
                            weapon: this.primaryIndex,
                            variant: this.primaryVariant
                        };
                        _0x13d1e6.dmg = _0x13d1e6.weapon == undefined ? 45 : _0x46f3.weapons[_0x13d1e6.weapon].dmg;
                        let _0x31e3c1 = {
                            weapon: this.secondaryIndex,
                            variant: this.secondaryVariant
                        };
                        _0x31e3c1.dmg = _0x31e3c1.weapon == undefined ? 50 : _0x46f3.weapons[_0x31e3c1.weapon].Pdmg;
                        let _0x4c0b42 = 1.5;
                        let _0x4f4292 = _0x13d1e6.variant != undefined ? _0x33e441.weaponVariants[_0x13d1e6.variant].val : 1.18;
                        let _0x5a9e58 = _0x31e3c1.variant != undefined ? [9, 12, 13, 15].includes(_0x31e3c1.weapon) ? 1 : _0x33e441.weaponVariants[_0x31e3c1.variant].val : 1.18;
                        if (_0x13d1e6.weapon == undefined ? true : this.reloads[_0x13d1e6.weapon] == 0) {
                            this.damageThreat += _0x13d1e6.dmg * _0x4f4292 * _0x4c0b42;
                        }
                        if (_0x31e3c1.weapon == undefined ? true : this.reloads[_0x31e3c1.weapon] == 0) {
                            this.damageThreat += _0x31e3c1.dmg * _0x5a9e58;
                        }
                        if (this.reloads[53] <= _0x39dcdf.tickRate) {
                            this.damageThreat += 25;
                        }
                        this.damageThreat *= _0x4b6fe6.skinIndex == 6 ? 0.75 : 1;
                        if (!this.isTeam(_0x4b6fe6)) {
                            if (this.dist2 <= 300) {
                                _0x4b6fe6.damageThreat += this.damageThreat;
                            }
                        }
                    };
                }
            };

            function _0x4512c1(_0x2421fb) {
                _0x40ec6a.reloads[_0x2421fb] = 0;
                _0x3a2c8f("H", _0x2421fb);
            }

            function _0x3aebd6(_0x4092e4, _0x5b16c4) {
                _0x3a2c8f("c", 0, _0x4092e4, _0x5b16c4);
            }

            function _0x3cc19d(_0x1a4674, _0xf0578c) {
                _0x3a2c8f("c", 1, _0x1a4674, _0xf0578c);
            }

            function _0x31c88a(_0x277c4b, _0x582b8c) {
                let _0x1dd9c8 = _0x40ec6a.skins[6] ? 6 : 0;
                if (_0x40ec6a.alive && _0x54d918) {
                    if (_0x582b8c == 0) {
                        if (_0x40ec6a.skins[_0x277c4b]) {
                            if (_0x40ec6a.latestSkin != _0x277c4b) {
                                _0x3a2c8f("c", 0, _0x277c4b, 0);
                            }
                        } else if (_0x42ddbd.autoBuyEquip) {
                            let _0x1e3c0e = _0x29112f(_0x3716f2, _0x277c4b);
                            if (_0x1e3c0e) {
                                if (_0x40ec6a.points >= _0x1e3c0e.price) {
                                    _0x3a2c8f("c", 1, _0x277c4b, 0);
                                    _0x3a2c8f("c", 0, _0x277c4b, 0);
                                } else if (_0x40ec6a.latestSkin != _0x1dd9c8) {
                                    _0x3a2c8f("c", 0, _0x1dd9c8, 0);
                                }
                            } else if (_0x40ec6a.latestSkin != _0x1dd9c8) {
                                _0x3a2c8f("c", 0, _0x1dd9c8, 0);
                            }
                        } else if (_0x40ec6a.latestSkin != _0x1dd9c8) {
                            _0x3a2c8f("c", 0, _0x1dd9c8, 0);
                        }
                    } else if (_0x582b8c == 1) {
                        if (_0x4655d8 && _0x277c4b != 11 && _0x277c4b != 0) {
                            if (_0x40ec6a.latestTail != 0) {
                                _0x3a2c8f("c", 0, 0, 1);
                            }
                            return;
                        }
                        if (_0x40ec6a.tails[_0x277c4b]) {
                            if (_0x40ec6a.latestTail != _0x277c4b) {
                                _0x3a2c8f("c", 0, _0x277c4b, 1);
                            }
                        } else if (_0x42ddbd.autoBuyEquip) {
                            let _0x345df7 = _0x29112f(_0x25434a, _0x277c4b);
                            if (_0x345df7) {
                                if (_0x40ec6a.points >= _0x345df7.price) {
                                    _0x3a2c8f("c", 1, _0x277c4b, 1);
                                    _0x3a2c8f("c", 0, _0x277c4b, 1);
                                } else if (_0x40ec6a.latestTail != 0) {
                                    _0x3a2c8f("c", 0, 0, 1);
                                }
                            } else if (_0x40ec6a.latestTail != 0) {
                                _0x3a2c8f("c", 0, 0, 1);
                            }
                        } else if (_0x40ec6a.latestTail != 0) {
                            _0x3a2c8f("c", 0, 0, 1);
                        }
                    }
                }
            }

            function _0x4ac07b(_0xe33b2e, _0x5036ff) {
                _0x3a2c8f("G", _0xe33b2e, _0x5036ff);
            }

            function _0x3789ff(_0x3c586f, _0x7df762) {
                if (!_0x7df762) {
                    _0x40ec6a.weaponCode = _0x3c586f;
                }
                _0x3a2c8f("G", _0x3c586f, 1);
            }

            function _0x24db7() {
                _0x3a2c8f("K", 1, 1);
            }

            function _0x432f15(_0x292812, _0x3575b9) {
                _0x3a2c8f("d", _0x292812, _0x3575b9, 1);
            }

            function _0x51fb5d(_0xdbbc7e) {
                let _0x3626eb = _0xdbbc7e % 360 * (Math.PI / 180);
                if (_0x3626eb < 0) {
                    return Math.PI * 2 + _0x3626eb;
                } else {
                    return _0x3626eb;
                }
            }

            function _0x199e4d(_0x30a45a, _0x11cba5, _0x1a80cf) {
                try {
                    if (_0x30a45a == undefined) {
                        return;
                    }
                    let _0x3701ba = _0x4e0368.list[_0x40ec6a.items[_0x30a45a]];
                    let _0x3cdc30 = _0x40ec6a.scale + _0x3701ba.scale + (_0x3701ba.placeOffset || 0);
                    let _0x102fbd = _0x40ec6a.x2 + _0x3cdc30 * Math.cos(_0x11cba5);
                    let _0xf4e6ce = _0x40ec6a.y2 + _0x3cdc30 * Math.sin(_0x11cba5);
                    if (_0x30a45a === 0 || ae89 || (_0x40ec6a.alive && _0x54d918 && _0x40ec6a.itemCounts[_0x3701ba.group.id] == undefined ? true : _0x40ec6a.itemCounts[_0x3701ba.group.id] < (_0x18564b.isSandbox ? _0x30a45a === 3 || _0x30a45a === 5 ? 299 : 99 : _0x3701ba.group.limit ? _0x3701ba.group.limit : 99))) {
                        _0x4ac07b(_0x40ec6a.items[_0x30a45a]);
                        _0x432f15(1, _0x11cba5);
                        _0x3789ff(_0x40ec6a.weaponCode, 1);
                        if (_0x1a80cf && getEl("placeVis").checked) {
                            _0xfb6063.push({
                                x: _0x102fbd,
                                y: _0xf4e6ce,
                                name: _0x3701ba.name,
                                scale: _0x3701ba.scale,
                                dir: _0x11cba5
                            });
                            _0x39dcdf.tickBase(() => {
                                _0xfb6063.shift();
                            }, 1);
                        }
                    }
                } catch (_0x2e3772) {}
            }

            function _0x517116(_0x7d1080, _0x61ec3b) {
                try {
                    return Math.hypot((_0x61ec3b.y2 || _0x61ec3b.y) - (_0x7d1080.y2 || _0x7d1080.y), (_0x61ec3b.x2 || _0x61ec3b.x) - (_0x7d1080.x2 || _0x7d1080.x));
                } catch (_0x118996) {
                    return Infinity;
                }
            }

            function _0x55c600(_0x5cf445, _0x9af0fd) {
                try {
                    return Math.atan2((_0x9af0fd.y2 || _0x9af0fd.y) - (_0x5cf445.y2 || _0x5cf445.y), (_0x9af0fd.x2 || _0x9af0fd.x) - (_0x5cf445.x2 || _0x5cf445.x));
                } catch (_0xf3b1d4) {
                    return 0;
                }
            }

            function _0x30278d(_0x2c3550, _0x32573c) {
                _0x32573c = typeof _0x32573c == "function" ? _0x32573c : _0x2591d4 => {
                    return _0x2591d4;
                };
                return _0x2c3550.sort((_0x3291fd, _0x1b37b2) => _0x32573c(_0x3291fd) - _0x32573c(_0x1b37b2));
            }

            function _0x45cc6d() {
                let _0x6363fa = [];
                let _0x24855b = {};
                let _0x1cd95f = _0x18b804.getGridArrays(_0x40ec6a.x, _0x40ec6a.y, 200);
                for (var _0x1be046 = 0; _0x1be046 < _0x1cd95f.length; ++_0x1be046) {
                    for (var _0x4e2f13 = 0; _0x4e2f13 < _0x1cd95f[_0x1be046].length; ++_0x4e2f13) {
                        if (_0x1cd95f[_0x1be046][_0x4e2f13].active) {
                            _0x6363fa.push(_0x1cd95f[_0x1be046][_0x4e2f13]);
                        }
                    }
                }
                return _0x6363fa;
            }

            function _0x2d9e0f(_0x4ea219, _0x4469f8) {
                try {
                    let _0x281baf = [];
                    let _0x12029c = [];
                    for (let _0xe5715e = 0; _0xe5715e < 72; _0xe5715e++) {
                        _0x281baf.push(_0x51fb5d(_0xe5715e * 5));
                    }
                    let _0x5d0ed6 = _0x30278d(_0x207b6e.filter(_0x578dd2 => _0x578dd2.active && _0x578dd2.sid != _0x40ec6a.inTrap.sid && _0x517116(_0x40ec6a, _0x578dd2) <= 150), _0x2871e8 => {
                        return _0x517116(_0x40ec6a, _0x2871e8);
                    });
                    let _0x1474fc = null;
                    for (let _0x551ad9 of _0x281baf) {
                        let _0x1e61a0 = _0x40ec6a.buildItemPosition(_0x4469f8, _0x551ad9);
                        let _0x12c859 = true;
                        if (_0x4469f8.id != 18 && _0x1e61a0.y >= _0x18564b.mapScale / 2 - _0x18564b.riverWidth / 2 && _0x1e61a0.y <= _0x18564b.mapScale / 2 + _0x18564b.riverWidth / 2) {
                            _0x12c859 = false;
                        } else if (_0x1474fc && _0x517116(_0x1474fc, _0x1e61a0) < _0x4469f8.scale + (_0x1474fc.blocker ? _0x1474fc.blocker : _0x1474fc.getScale(0.6, _0x1474fc.isItem))) {
                            _0x12c859 = false;
                        } else {
                            for (let _0x4a247e of _0x5d0ed6) {
                                let _0x262774 = _0x4a247e.blocker ? _0x4a247e.blocker : _0x4a247e.getScale(0.6, _0x4a247e.isItem);
                                if (_0x517116(_0x4a247e, _0x1e61a0) < _0x4469f8.scale + _0x262774) {
                                    _0x12c859 = false;
                                    _0x1474fc = _0x4a247e;
                                    break;
                                }
                            }
                        }
                        if (_0x12c859) {
                            _0x12029c.push(_0x551ad9);
                        }
                    }
                    return _0x12029c;
                } catch (_0x18e9ed) {}
            }

            function _0x3e684c(_0x3c206c, _0x494169) {
                try {
                    let _0x5a533a = [];
                    let _0xca47c = [];
                    for (let _0x4a4014 = 0; _0x4a4014 < 72; _0x4a4014++) {
                        _0x5a533a.push(_0x51fb5d(_0x4a4014 * 5));
                    }
                    let _0x356ac7 = [];
                    if (!window.isMohMoh) {
                        _0x356ac7 = _0x30278d(_0x207b6e.filter(_0x10401c => _0x10401c.active && _0x517116(_0x40ec6a, _0x10401c) <= 150), _0x23ab03 => {
                            return _0x517116(_0x40ec6a, _0x23ab03);
                        });
                    }
                    let _0x3b5e05 = null;
                    for (let _0x520ed1 of _0x5a533a) {
                        let _0x395b76 = _0x40ec6a.buildItemPosition(_0x494169, _0x520ed1);
                        let _0x467948 = true;
                        if (_0x494169.id != 18 && _0x395b76.y >= _0x18564b.mapScale / 2 - _0x18564b.riverWidth / 2 && _0x395b76.y <= _0x18564b.mapScale / 2 + _0x18564b.riverWidth / 2) {
                            _0x467948 = false;
                        } else if (_0x3b5e05 && _0x517116(_0x3b5e05, _0x395b76) < _0x494169.scale + (_0x3b5e05.blocker ? _0x3b5e05.blocker : _0x3b5e05.getScale(0.6, _0x3b5e05.isItem))) {
                            _0x467948 = false;
                        } else if (true) {
                            for (let _0x43937e of _0x356ac7) {
                                let _0x9aac32 = _0x43937e.blocker ? _0x43937e.blocker : _0x43937e.getScale(0.6, _0x43937e.isItem);
                                if (_0x517116(_0x43937e, _0x395b76) < _0x494169.scale + _0x9aac32) {
                                    _0x467948 = false;
                                    _0x3b5e05 = _0x43937e;
                                    break;
                                }
                            }
                        }
                        if (_0x467948) {
                            _0xca47c.push(_0x520ed1);
                        }
                    }
                    return _0xca47c;
                } catch (_0x2bb84e) {}
            }
            let _0x3ff453 = false;

            function _0x3dcc26(_0xb6f8c3, _0x1174ee) {
                _0x48ac11(_0xb6f8c3, _0x1174ee);
            };

            function _0x48ac11(_0x32ea39, _0x3e7d60) {
                try {
                    if (_0x211cfe.count >= 80) {
                        return;
                    }
                    let _0x37a063 = _0x4e0368.list[_0x40ec6a.items[_0x32ea39]];
                    let _0x29b73c = _0x40ec6a.scale + _0x37a063.scale + (_0x37a063.placeOffset || 0);
                    let _0x52faf0 = _0x40ec6a.x2 + _0x29b73c * Math.cos(_0x3e7d60);
                    let _0x31b6fb = _0x40ec6a.y2 + _0x29b73c * Math.sin(_0x3e7d60);
                    if (_0x18b804.checkItemLocation(_0x52faf0, _0x31b6fb, _0x37a063.scale, 0.6, _0x37a063.id, false, _0x40ec6a)) {
                        _0x199e4d(_0x32ea39, _0x3e7d60, 1);
                    }
                } catch (_0x4f21a7) {}
            }

            function _0x4401b0() {
                if (_0x40ec6a.latestSkin == 6) {
                    return 0.75;
                } else {
                    return 1;
                }
            }

            function _0x4dd45f(_0x5514eb) {
                let _0x7e6985 = _0x4d42b6.filter(_0x3cb2e0 => {
                    let _0x3ce391 = {
                        three: _0x3cb2e0.attacked
                    };
                    return _0x3ce391.three;
                });
                return _0x7e6985;
            }

            function _0x4c0d3f() {
                for (let _0x495fc6 = 0; _0x495fc6 < _0x39fa86(); _0x495fc6++) {
                    _0x199e4d(0, _0x57bc8e());
                    _0x199e4d(0, _0x57bc8e());
                }
            }

            function _0x36b356(_0x5a8771) {
                if (_0x40ec6a.health == 100) {
                    return 0;
                }
                if (_0x40ec6a.skinIndex != 45 && _0x40ec6a.skinIndex != 56) {
                    return Math.ceil(_0x5a8771 / _0x4e0368.list[_0x40ec6a.items[0]].healing);
                }
                return 0;
            }

            function _0x39fa86() {
                if (_0x40ec6a.health == 100) {
                    return 0;
                }
                if (_0x40ec6a.skinIndex != 45 && _0x40ec6a.skinIndex != 56) {
                    return Math.ceil((100 - _0x40ec6a.health) / _0x4e0368.list[_0x40ec6a.items[0]].healing);
                }
                return 0;
            }

            function _0x5daac2(_0x278817) {
                if (_0x278817 * _0x40ec6a.skinIndex == 6) {
                    return 0.75;
                } else {
                    return 1;
                }
            }

            function _0x579cb2() {}

            function _0x194940(_0x2f039d) {
                _0x541fa4.antiSync = true;
                let _0x23bf2b = setInterval(() => {
                    if (_0x40ec6a.shameCount < 5) {
                        _0x199e4d(0, _0x57bc8e());
                    }
                }, 75);
                setTimeout(() => {
                    clearInterval(_0x23bf2b);
                    setTimeout(() => {
                        _0x541fa4.antiSync = false;
                    }, _0x39dcdf.tickRate);
                }, _0x39dcdf.tickRate);
            }
            const _0x1c76a5 = new Set();
            const _0x37e4d6 = new Set();

            function _0x3b7c2d(_0x5dd014) {
                const _0x3890a5 = _0x40ec6a.x2;
                const _0x387cfc = _0x40ec6a.y2;
                const _0x5f2ddd = Math.hypot(_0x5dd014[0] - _0x3890a5, _0x5dd014[1] - _0x387cfc);
                return _0x5f2ddd > 35;
            }

            function _0x495258(_0x2b22a5) {
                if (_0x40ec6a.team) {
                    return _0x8b521c.find(_0x5736e7 => _0x5736e7 === _0x2b22a5);
                } else {
                    return null;
                }
            }

            function _0x1f6696(_0x1d78f6, _0x43b0ad, _0x5efe0d) {
                const _0x442120 = [];
                const _0x25c4ad = 16;
                for (let _0x16cc4e = 0; _0x16cc4e < _0x25c4ad; _0x16cc4e++) {
                    const _0x38ba44 = Math.PI * 2 * _0x16cc4e / _0x25c4ad;
                    const _0x29955f = _0x1d78f6 + _0x5efe0d * Math.cos(_0x38ba44);
                    const _0x528500 = _0x43b0ad + _0x5efe0d * Math.sin(_0x38ba44);
                    const _0xed5387 = [_0x29955f, _0x528500];
                    if (!_0x442120.some(_0x4c6a2e => _0x301844(_0xed5387, _0x4c6a2e))) {
                        _0x442120.push(_0xed5387);
                    }
                }
                return _0x442120;
            }

            function _0x301844(_0x4edcbb, _0x54d5c2, _0x1ff0e6 = 50) {
                const _0x3c1141 = Math.hypot(_0x4edcbb[0] - _0x54d5c2[0], _0x4edcbb[1] - _0x54d5c2[1]);
                return _0x3c1141 < _0x1ff0e6;
            }

            function _0x12fba9(_0x161b87, _0x514b5f) {
                if (_0x40ec6a.y2 >= _0x18564b.mapScale / 2 - _0x18564b.riverWidth / 2 && _0x40ec6a.y2 <= _0x18564b.mapScale / 2 + _0x18564b.riverWidth / 2) {
                    if (_0x514b5f) {
                        return 31;
                    }
                    _0x31c88a(31, 0);
                } else if (_0x40ec6a.y2 <= _0x18564b.snowBiomeTop) {
                    if (_0x514b5f) {
                        if (_0x161b87 && _0x40ec6a.moveDir == undefined) {
                            return 22;
                        } else {
                            return 15;
                        }
                    }
                    _0x31c88a(_0x161b87 && _0x40ec6a.moveDir == undefined ? 22 : 15, 0);
                } else {
                    if (_0x514b5f) {
                        if (_0x161b87 && _0x40ec6a.moveDir == undefined) {
                            return 22;
                        } else {
                            return 12;
                        }
                    }
                    _0x31c88a(_0x161b87 && _0x40ec6a.moveDir == undefined ? 22 : 12, 0);
                }
                if (_0x514b5f) {
                    return 0;
                }
            }

            function _0x55443e(_0x361cff) {
                _0x31c88a(_0x361cff && _0x40ec6a.moveDir == undefined ? 0 : 11, 1);
            }
            let _0x33becd = [];
            class _0x4a3fb1 {
                constructor(_0x2676b8, _0x50d815) {
                    this.dist = 0;
                    this.aim = 0;
                    this.inTrap = false;
                    this.replaced = false;
                    this.antiTrapped = false;
                    this.info = {};
                    this.notFast = function() {
                        return _0x40ec6a.weapons[1] == 10 && (this.info.health > _0x50d815.weapons[_0x40ec6a.weapons[0]].dmg || _0x40ec6a.weapons[0] == 5);
                    };
                    this.testCanPlace = function(_0x1df4a0, _0x68bc5b = -(Math.PI / 2), _0x392bc3 = Math.PI / 2, _0x570d11 = Math.PI / 18, _0x56a5d6, _0x1df20b, _0xba0fb8) {
                        try {
                            let _0x300a45 = _0x50d815.list[_0x40ec6a.items[_0x1df4a0]];
                            let _0x1c4807 = _0x40ec6a.scale + _0x300a45.scale + (_0x300a45.placeOffset || 0);
                            let _0x4078fb = {
                                attempts: 0,
                                placed: 0
                            };
                            let _0x5e5864 = [];
                            _0x207b6e.forEach(_0x468268 => {
                                _0x5e5864.push({
                                    x: _0x468268.x,
                                    y: _0x468268.y,
                                    active: _0x468268.active,
                                    blocker: _0x468268.blocker,
                                    scale: _0x468268.scale,
                                    isItem: _0x468268.isItem,
                                    type: _0x468268.type,
                                    colDiv: _0x468268.colDiv,
                                    getScale: function(_0x25a0b5, _0x1d4d10) {
                                        _0x25a0b5 = _0x25a0b5 || 1;
                                        return this.scale * (this.isItem || this.type == 2 || this.type == 3 || this.type == 4 ? 1 : _0x25a0b5 * 0.6) * (_0x1d4d10 ? 1 : this.colDiv);
                                    }
                                });
                            });
                            for (let _0x142fc1 = _0x68bc5b; _0x142fc1 < _0x392bc3; _0x142fc1 += _0x570d11) {
                                _0x4078fb.attempts++;
                                let _0x5ceecb = _0x56a5d6 + _0x142fc1;
                                let _0x36da80 = _0x40ec6a.x2 + _0x1c4807 * Math.cos(_0x5ceecb);
                                let _0x129409 = _0x40ec6a.y2 + _0x1c4807 * Math.sin(_0x5ceecb);
                                let _0x207492 = _0x5e5864.find(_0x46a99a => _0x46a99a.active && _0x2676b8.getDistance(_0x36da80, _0x129409, _0x46a99a.x, _0x46a99a.y) < _0x300a45.scale + (_0x46a99a.blocker ? _0x46a99a.blocker : _0x46a99a.getScale(0.6, _0x46a99a.isItem)));
                                if (_0x207492) {
                                    continue;
                                }
                                if (_0x300a45.id != 18 && _0x129409 >= _0x18564b.mapScale / 2 - _0x18564b.riverWidth / 2 && _0x129409 <= _0x18564b.mapScale / 2 + _0x18564b.riverWidth / 2) {
                                    continue;
                                }
                                if (!_0x1df20b && _0xba0fb8 || _0x4655d8) {
                                    if (_0x4655d8 ? false : _0xba0fb8.inTrap) {
                                        if (_0x2676b8.getAngleDist(_0x5f501e.aim2 + Math.PI, _0x5ceecb + Math.PI) <= Math.PI) {
                                            _0x199e4d(2, _0x5ceecb, 1);
                                        } else if (_0x40ec6a.items[4] == 15) {
                                            _0x199e4d(4, _0x5ceecb, 1);
                                        }
                                    } else if (_0x2676b8.getAngleDist(_0x5f501e.aim2, _0x5ceecb) <= _0x18564b.gatherAngle / 1.5) {
                                        _0x199e4d(2, _0x5ceecb, 1);
                                    } else if (_0x40ec6a.items[4] == 15) {
                                        _0x199e4d(4, _0x5ceecb, 1);
                                    }
                                } else {
                                    _0x199e4d(_0x1df4a0, _0x5ceecb, 1);
                                }
                                _0x5e5864.push({
                                    x: _0x36da80,
                                    y: _0x129409,
                                    active: true,
                                    blocker: _0x300a45.blocker,
                                    scale: _0x300a45.scale,
                                    isItem: true,
                                    type: null,
                                    colDiv: _0x300a45.colDiv,
                                    getScale: function() {
                                        return this.scale;
                                    }
                                });
                                if (_0x2676b8.getAngleDist(_0x5f501e.aim2, _0x5ceecb) <= 1) {
                                    _0x4078fb.placed++;
                                }
                            }
                            if (_0x4078fb.placed > 0 && _0x1df20b && _0x300a45.dmg) {
                                if (_0x5f501e.dist2 <= _0x50d815.weapons[_0x40ec6a.weapons[0]].range + _0x40ec6a.scale * 1.8 && _0x42ddbd.spikeTick) {
                                    _0x53f820.canSpikeTick = true;
                                }
                            }
                        } catch (_0x11c8b6) {}
                    };
                    this.checkSpikeTick = function() {
                        try {
                            if (![3, 4, 5].includes(_0x5f501e.primaryIndex)) {
                                return false;
                            }
                            if (getEl("safeAntiSpikeTick").checked || _0x541fa4.autoPush ? false : _0x5f501e.primaryIndex == undefined ? true : _0x5f501e.reloads[_0x5f501e.primaryIndex] > _0x39dcdf.tickRate) {
                                return false;
                            }
                            if (_0x5f501e.dist2 <= _0x50d815.weapons[_0x5f501e.primaryIndex || 5].range + _0x5f501e.scale * 1.8) {
                                let _0x5f0a65 = _0x50d815.list[9];
                                let _0x133eae = _0x5f501e.scale + _0x5f0a65.scale + (_0x5f0a65.placeOffset || 0);
                                let _0x5c55e2 = 0;
                                let _0x5e45e6 = {
                                    attempts: 0,
                                    block: "unblocked"
                                };
                                for (let _0x58990f = -1; _0x58990f <= 1; _0x58990f += 1 / 10) {
                                    _0x5e45e6.attempts++;
                                    let _0x31233b = _0x2676b8.getDirect(_0x40ec6a, _0x5f501e, 2, 2) + _0x58990f;
                                    let _0x318b95 = _0x5f501e.x2 + _0x133eae * Math.cos(_0x31233b);
                                    let _0xff4452 = _0x5f501e.y2 + _0x133eae * Math.sin(_0x31233b);
                                    let _0x16b7d9 = _0x207b6e.find(_0x307898 => _0x307898.active && _0x2676b8.getDistance(_0x318b95, _0xff4452, _0x307898.x, _0x307898.y) < _0x5f0a65.scale + (_0x307898.blocker ? _0x307898.blocker : _0x307898.getScale(0.6, _0x307898.isItem)));
                                    if (_0x16b7d9) {
                                        continue;
                                    }
                                    if (_0xff4452 >= _0x18564b.mapScale / 2 - _0x18564b.riverWidth / 2 && _0xff4452 <= _0x18564b.mapScale / 2 + _0x18564b.riverWidth / 2) {
                                        continue;
                                    }
                                    _0x5c55e2++;
                                    _0x5e45e6.block = "blocked";
                                    break;
                                }
                                if (_0x5c55e2) {
                                    _0x541fa4.anti0Tick = 1;
                                    _0x40ec6a.chat.message = "anti test" + _0x5f501e.sid;
                                    _0x40ec6a.chat.count = 2000;
                                    return true;
                                }
                            }
                        } catch (_0x506cb2) {
                            return null;
                        }
                        return false;
                    };
                    this.protect = function(_0x26396f) {
                        if (!_0x42ddbd.antiTrap) {
                            return;
                        }
                        if (_0x40ec6a.items[4]) {
                            this.testCanPlace(4, -(Math.PI / 2), Math.PI / 2, Math.PI / 18, _0x26396f + Math.PI);
                            this.antiTrapped = true;
                        }
                    };
                    const _0x11a912 = async function(_0x1a9fc3, _0xee543c, _0x426273, _0x57ba2f, _0x2da9ca, _0x1daf6b, _0x408bba = _0x5f501e) {
                        _0xee543c = _0x408bba && Math.hypot(_0x408bba.y2 - _0x40ec6a.y2, _0x408bba.x2 - _0x40ec6a.x2) >= 350 ? _0x40ec6a.items[4] : _0x40ec6a.items[2];
                        if (_0xee543c === _0x40ec6a.items[2]) {
                            _0x426273 = Math.atan2(_0x1a9fc3.y - _0x40ec6a.y2, _0x1a9fc3.x - _0x40ec6a.x2);
                            _0x57ba2f = Math.atan2(_0x408bba.y - _0x40ec6a.y2, _0x408bba.x - _0x40ec6a.x2);
                            _0x2da9ca = Math.abs(_0x426273 - _0x57ba2f);
                            _0xee543c = _0x2da9ca <= Math.PI ? _0x40ec6a.items[2] : _0xee543c;
                            for (_0x426273 = 0; _0x426273 <= Math.PI * 2; _0x426273 += Math.PI / 32) {
                                this.testCanPlace(4, -(Math.PI / 2), Math.PI / 2, Math.PI / 32, aim + Math.PI);
                            }
                        };
                    };
                    let _0xd69a79 = new Set();
                    let _0x4f9188 = new Set();
                    this.autoPlace = function() {
                        try {
                            const _0x1bbc1c = _0x207b6e.filter(_0x1edc89 => _0x1edc89.trap && _0x1edc89.active).sort((_0x18d9fe, _0x5c3d16) => _0x2676b8.getDist(_0x18d9fe, _0x5f501e, 0, 2) - _0x2676b8.getDist(_0x5c3d16, _0x5f501e, 0, 2)).find(_0x338eba => {
                                const _0x1b2ddc = Math.hypot(_0x338eba.y - _0x5f501e.y2, _0x338eba.x - _0x5f501e.x2);
                                return _0x338eba !== _0x40ec6a && (_0x40ec6a.sid === _0x338eba.owner.sid || _0x495258(_0x338eba.owner.sid)) && _0x1b2ddc <= 50;
                            });
                            if (_0x1bbc1c && _0x5f501e.dist2 <= 160) {
                                const _0x3f9280 = _0x1bbc1c.x;
                                const _0x2bf2e1 = _0x1bbc1c.y;
                                const _0x17f2c2 = 102;
                                const _0x1a596b = 64;
                                for (let _0x7e358e = 0; _0x7e358e < _0x1a596b; _0x7e358e++) {
                                    const _0x314085 = Math.PI * 2 * _0x7e358e / _0x1a596b;
                                    const _0x5bf3a4 = _0x3f9280 + _0x17f2c2 * Math.cos(_0x314085);
                                    const _0x592e2d = _0x2bf2e1 + _0x17f2c2 * Math.sin(_0x314085);
                                    const _0x50d653 = [_0x5bf3a4, _0x592e2d];
                                    const _0x254a17 = Math.hypot(_0x50d653[0] - _0x40ec6a.x2, _0x50d653[1] - _0x40ec6a.y2);
                                    if (!_0xd69a79.has(JSON.stringify(_0x50d653)) && _0x3b7c2d(_0x50d653) && _0x254a17 <= 87) {
                                        const _0x1a1985 = Math.atan2(_0x50d653[1] - _0x40ec6a.y2, _0x50d653[0] - _0x40ec6a.x2);
                                        _0x48ac11(2, _0x1a1985);
                                        _0xd69a79.add(JSON.stringify(_0x50d653));
                                    }
                                }
                            } else if (!_0x1bbc1c && _0x5f501e.dist2 <= 206) {
                                _0xd69a79.clear();
                                const _0x34f4b1 = 3;
                                const _0x5e457a = 50;
                                const _0x1b7781 = _0x1f6696(_0x40ec6a.x2, _0x40ec6a.y2, _0x5e457a);
                                let _0x2542a4 = 0;
                                for (const _0x6c3dd3 of _0x1b7781) {
                                    if (_0x2542a4 < _0x34f4b1 && !_0x4f9188.has(JSON.stringify(_0x6c3dd3)) && _0x3b7c2d(_0x6c3dd3)) {
                                        _0x48ac11(4, ..._0x6c3dd3);
                                        _0x4f9188.add(JSON.stringify(_0x6c3dd3));
                                        _0x2542a4++;
                                    }
                                }
                            }
                        } catch (_0x556d4b) {}
                    };

                    function _0x58f49f(_0x53d17c, _0x1971a9, _0x592d91, _0x556e86) {
                        return Math.atan2(_0x556e86 - _0x1971a9, _0x592d91 - _0x53d17c);
                    }

                    function _0x4ecf94(_0x4073a0) {
                        const _0x10da68 = 20;
                        return _0x4073a0.health < _0x10da68;
                    }
                    this.replacer = function(_0x547b19) {
                        if (!_0x547b19 || !_0x42ddbd.autoReplace) {
                            return;
                        }
                        if (!_0x54d918) {
                            return;
                        }
                        if (this.antiTrapped) {
                            return;
                        }
                        _0x39dcdf.tickBase(() => {
                            let _0x26cb25 = _0x2676b8.getDirect(_0x547b19, _0x40ec6a, 0, 2);
                            let _0x2503f4 = _0x2676b8.getDist(_0x547b19, _0x40ec6a, 0, 2);
                            let _0x392c36 = _0x58f49f(_0x547b19.x, _0x547b19.y, _0x40ec6a.x, _0x40ec6a.y);
                            if (_0x1dff6e.autoGrind.enabled && _0x2503f4 <= _0x50d815.weapons[_0x40ec6a.weaponIndex].range + _0x40ec6a.scale) {
                                return;
                            }
                            if (_0x2503f4 <= 400 && _0x5f501e.dist2 <= 400) {
                                if (_0x4ecf94(_0x547b19)) {
                                    let _0x54ba10 = this.checkSpikeTick();
                                    if (!_0x54ba10 && _0x5f501e.dist2 <= _0x50d815.weapons[_0x5f501e.primaryIndex || 5].range + _0x5f501e.scale * 1.8) {
                                        this.testCanPlace(2, 0, Math.PI * 2, Math.PI / 24, _0x392c36, 1);
                                    } else if (_0x40ec6a.items[4] == 15) {
                                        this.testCanPlace(4, 0, Math.PI * 2, Math.PI / 24, _0x392c36, 1);
                                        this.testCanPlace(4, 0, Math.PI * 2, Math.PI / 24, _0x392c36, 1);
                                        this.testCanPlace(4, 0, Math.PI * 2, Math.PI / 24, _0x392c36, 1);
                                        this.testCanPlace(4, 0, Math.PI * 2, Math.PI / 24, _0x392c36, 1);
                                        this.testCanPlace(4, 0, Math.PI * 2, Math.PI / 24, _0x392c36, 1);
                                        this.testCanPlace(4, 0, Math.PI * 2, Math.PI / 24, _0x392c36, 1);
                                        this.testCanPlace(4, 0, Math.PI * 2, Math.PI / 24, _0x392c36, 1);
                                        this.testCanPlace(4, 0, Math.PI * 2, Math.PI / 24, _0x392c36, 1);
                                        this.testCanPlace(4, 0, Math.PI * 2, Math.PI / 24, _0x392c36, 1);
                                        this.testCanPlace(4, 0, Math.PI * 2, Math.PI / 24, _0x392c36, 1);
                                        this.testCanPlace(4, 0, Math.PI * 2, Math.PI / 24, _0x392c36, 1);
                                        this.testCanPlace(4, 0, Math.PI * 2, Math.PI / 24, _0x392c36, 1);
                                    }
                                    this.replaced = true;
                                }
                            }
                        }, 1);
                    };
                }
            }
            class _0x2baffc {
                constructor() {
                    this.wait = false;
                    this.can = false;
                    this.isTrue = false;
                    this.nobull = false;
                    this.ticking = false;
                    this.canSpikeTick = false;
                    this.startTick = false;
                    this.readyTick = false;
                    this.canCounter = false;
                    this.revTick = false;
                    this.syncHit = false;
                    this.changeType = function(_0x5d2638) {
                        this.wait = false;
                        this.isTrue = true;
                        _0x541fa4.autoAim = true;
                        let _0x31bff0 = [_0x5d2638];
                        let _0x274b75 = _0x5f501e.backupNobull;
                        _0x5f501e.backupNobull = false;
                        _0x39dcdf.tickBase(() => {
                            _0x31bff0.push(_0x40ec6a.skinIndex);
                            _0x39dcdf.tickBase(() => {
                                if (_0x5f501e.skinIndex == 22 && getEl("backupNobull").checked) {
                                    _0x5f501e.backupNobull = true;
                                }
                                _0x31bff0.push(_0x40ec6a.skinIndex);
                            }, 1);
                        }, 1);
                        if (_0x5d2638 == "rev") {
                            _0x3789ff(_0x40ec6a.weapons[1]);
                            _0x31c88a(53, 0);
                            _0x31c88a(18, 1);
                            _0x24db7();
                            _0x39dcdf.tickBase(() => {
                                _0x3789ff(_0x40ec6a.weapons[0]);
                                _0x31c88a(7, 0);
                                _0x31c88a(18, 1);
                                _0x39dcdf.tickBase(() => {
                                    _0x24db7();
                                    this.isTrue = false;
                                    _0x541fa4.autoAim = false;
                                }, 1);
                            }, 1);
                        } else if (_0x5d2638 == "nobull") {
                            _0x3789ff(_0x40ec6a.weapons[0]);
                            if (getEl("backupNobull").checked && _0x274b75) {
                                _0x31c88a(7, 0);
                            } else {
                                _0x31c88a(6, 0);
                            }
                            _0x31c88a(18, 1);
                            _0x24db7();
                            _0x39dcdf.tickBase(() => {
                                if (_0x5f501e.skinIndex == 22) {
                                    if (getEl("backupNobull").checked) {
                                        _0x5f501e.backupNobull = true;
                                    }
                                    _0x31c88a(6, 0);
                                } else {
                                    _0x31c88a(53, 0);
                                }
                                _0x3789ff(_0x40ec6a.weapons[1]);
                                _0x31c88a(18, 1);
                                _0x39dcdf.tickBase(() => {
                                    _0x24db7();
                                    this.isTrue = false;
                                    _0x541fa4.autoAim = false;
                                }, 1);
                            }, 1);
                        } else if (_0x5d2638 == "normal") {
                            _0x3789ff(_0x40ec6a.weapons[0]);
                            _0x31c88a(7, 0);
                            _0x31c88a(18, 1);
                            _0x24db7();
                            _0x39dcdf.tickBase(() => {
                                _0x3789ff(_0x40ec6a.weapons[1]);
                                _0x31c88a(_0x40ec6a.reloads[53] == 0 ? 53 : 6, 0);
                                _0x31c88a(18, 1);
                                _0x39dcdf.tickBase(() => {
                                    _0x24db7();
                                    this.isTrue = false;
                                    _0x541fa4.autoAim = false;
                                }, 1);
                            }, 1);
                        } else {
                            setTimeout(() => {
                                this.isTrue = false;
                                _0x541fa4.autoAim = false;
                            }, 50);
                        }
                    };
                    this.spikeTickType = function() {
                        this.isTrue = true;
                        _0x541fa4.autoAim = true;
                        _0x3789ff(_0x40ec6a.weapons[0]);
                        _0x31c88a(7, 0);
                        _0x31c88a(18, 1);
                        _0x24db7();
                        _0x39dcdf.tickBase(() => {
                            _0x31c88a(53, 0);
                            _0x3789ff(_0x40ec6a.weapons[0]);
                            _0x31c88a(53, 0);
                            _0x39dcdf.tickBase(() => {
                                _0x24db7();
                                this.isTrue = false;
                                _0x541fa4.autoAim = false;
                                _0x31c88a(6, 0);
                            }, 3);
                        }, 1);
                    };
                    this.counterType = function() {
                        this.isTrue = true;
                        _0x541fa4.autoAim = true;
                        _0x3789ff(_0x40ec6a.weapons[0]);
                        _0x31c88a(7, 0);
                        _0x31c88a(18, 1);
                        _0x24db7();
                        _0x39dcdf.tickBase(() => {
                            if (_0x40ec6a.reloads[53] == 0 && getEl("turretCombat").checked) {
                                _0x3789ff(_0x40ec6a.weapons[0]);
                                _0x31c88a(53, 0);
                                _0x31c88a(21, 1);
                                _0x39dcdf.tickBase(() => {
                                    _0x24db7();
                                    this.isTrue = false;
                                    _0x541fa4.autoAim = false;
                                }, 1);
                            } else {
                                _0x24db7();
                                this.isTrue = false;
                                _0x541fa4.autoAim = false;
                            }
                        }, 1);
                    };
                    this.antiCounterType = function() {
                        _0x541fa4.autoAim = true;
                        this.isTrue = true;
                        inantiantibull = true;
                        _0x3789ff(_0x40ec6a.weapons[0]);
                        _0x31c88a(6, 0);
                        _0x31c88a(18, 1);
                        _0x36e03b.send("D", _0x5f501e.aim2);
                        _0x24db7();
                        _0x39dcdf.tickBase(() => {
                            _0x31c88a(_0x40ec6a.reloads[53] == 0 ? _0x40ec6a.skins[53] ? 53 : 6 : 6, 0);
                            _0x31c88a(18, 1);
                            _0x39dcdf.tickBase(() => {
                                _0x24db7();
                                this.isTrue = false;
                                _0x541fa4.autoAim = false;
                                inantiantibull = false;
                            }, 1);
                        }, 1);
                    };
                    this.rangeType = function(_0x3af427) {
                        this.isTrue = true;
                        _0x541fa4.autoAim = true;
                        if (_0x3af427 == "ageInsta") {
                            _0x541fa4.ageInsta = false;
                            if (_0x40ec6a.items[5] == 18) {
                                _0x199e4d(5, _0x5f501e.aim2);
                            }
                            _0x3a2c8f("a", undefined, 1);
                            _0x31c88a(22, 0);
                            _0x31c88a(21, 1);
                            _0x39dcdf.tickBase(() => {
                                _0x3789ff(_0x40ec6a.weapons[1]);
                                _0x31c88a(53, 0);
                                _0x31c88a(21, 1);
                                _0x24db7();
                                _0x39dcdf.tickBase(() => {
                                    _0x4512c1(12);
                                    _0x3789ff(_0x40ec6a.weapons[1]);
                                    _0x31c88a(53, 0);
                                    _0x31c88a(21, 1);
                                    _0x39dcdf.tickBase(() => {
                                        _0x4512c1(15);
                                        _0x3789ff(_0x40ec6a.weapons[1]);
                                        _0x31c88a(53, 0);
                                        _0x31c88a(18, 1);
                                        _0x39dcdf.tickBase(() => {
                                            _0x24db7();
                                            this.isTrue = false;
                                            _0x541fa4.autoAim = false;
                                        }, 1);
                                    }, 1);
                                }, 1);
                            }, 1);
                        } else {
                            _0x3789ff(_0x40ec6a.weapons[1]);
                            if (_0x40ec6a.reloads[53] == 0 && _0x5f501e.dist2 <= 700 && _0x5f501e.skinIndex != 22) {
                                _0x31c88a(53, 0);
                            } else {
                                _0x31c88a(20, 0);
                            }
                            _0x31c88a(21, 1);
                            _0x24db7();
                            _0x39dcdf.tickBase(() => {
                                _0x24db7();
                                this.isTrue = false;
                                _0x541fa4.autoAim = false;
                            }, 1);
                        }
                    };
                    this.oneTickType = function() {
                        this.isTrue = true;
                        _0x541fa4.autoAim = true;
                        _0x3789ff(_0x40ec6a.weapons[1]);
                        _0x31c88a(53, 0);
                        _0x31c88a(18, 1);
                        _0x3a2c8f("a", _0x5f501e.aim2, 1);
                        if (_0x40ec6a.weapons[1] == 15) {
                            _0x541fa4.revAim = true;
                            _0x24db7();
                        }
                        _0x39dcdf.tickBase(() => {
                            const _0x1d97b4 = _0x207b6e.filter(_0x59c92e => _0x59c92e.trap && _0x59c92e.active).sort((_0x1745b0, _0x53ec27) => _0x1b05b9.getDist(_0x1745b0, _0x5f501e, 0, 2) - _0x1b05b9.getDist(_0x53ec27, _0x5f501e, 0, 2)).find(_0x2cde33 => {
                                const _0x221d2a = Math.hypot(_0x2cde33.y - _0x5f501e.y2, _0x2cde33.x - _0x5f501e.x2);
                                return _0x2cde33 !== _0x40ec6a && (_0x40ec6a.sid === _0x2cde33.owner.sid || _0x495258(_0x2cde33.owner.sid)) && _0x221d2a <= 50;
                            });
                            if ([6, 22].includes(_0x5f501e.skinIndex) && _0x1d97b4) {
                                _0x36e03b.send("6", "test");
                            }
                            _0x541fa4.revAim = false;
                            _0x3789ff(_0x40ec6a.weapons[0]);
                            _0x31c88a(7, 0);
                            _0x31c88a(21, 1);
                            _0x3a2c8f("a", _0x5f501e.aim2, 1);
                            if (_0x40ec6a.weapons[1] != 15) {
                                _0x24db7();
                            }
                            _0x39dcdf.tickBase(() => {
                                _0x24db7();
                                this.isTrue = false;
                                _0x541fa4.autoAim = false;
                                _0x3a2c8f("a", undefined, 1);
                            }, 1);
                        }, 1);
                    };
                    this.threeOneTickType = function() {
                        this.isTrue = true;
                        _0x541fa4.autoAim = true;
                        _0x3789ff(_0x40ec6a.weapons[[10, 14].includes(_0x40ec6a.weapons[1]) ? 1 : 0]);
                        _0x12fba9();
                        _0x3a2c8f("a", _0x5f501e.aim2, 1);
                        _0x39dcdf.tickBase(() => {
                            _0x3789ff(_0x40ec6a.weapons[[10, 14].includes(_0x40ec6a.weapons[1]) ? 1 : 0]);
                            _0x31c88a(53, 0);
                            _0x3a2c8f("a", _0x5f501e.aim2, 1);
                            _0x39dcdf.tickBase(() => {
                                _0x3789ff(_0x40ec6a.weapons[0]);
                                _0x31c88a(7, 0);
                                _0x24db7();
                                _0x3a2c8f("a", _0x5f501e.aim2, 1);
                                _0x39dcdf.tickBase(() => {
                                    _0x24db7();
                                    this.isTrue = false;
                                    _0x541fa4.autoAim = false;
                                    _0x3a2c8f("a", undefined, 1);
                                }, 1);
                            }, 1);
                        }, 1);
                    };
                    this.kmTickType = function() {
                        this.isTrue = true;
                        _0x541fa4.autoAim = true;
                        _0x541fa4.revAim = true;
                        _0x3789ff(_0x40ec6a.weapons[1]);
                        _0x31c88a(53, 0);
                        _0x31c88a(18, 1);
                        _0x24db7();
                        _0x3a2c8f("a", _0x5f501e.aim2, 1);
                        _0x39dcdf.tickBase(() => {
                            _0x541fa4.revAim = false;
                            _0x3789ff(_0x40ec6a.weapons[0]);
                            _0x31c88a(7, 0);
                            _0x31c88a(0, 1);
                            _0x3a2c8f("a", _0x5f501e.aim2, 1);
                            _0x39dcdf.tickBase(() => {
                                _0x24db7();
                                this.isTrue = false;
                                _0x541fa4.autoAim = false;
                                _0x3a2c8f("a", undefined, 1);
                            }, 1);
                        }, 1);
                    };
                    this.boostTickType = function() {
                        this.isTrue = true;
                        _0x541fa4.autoAim = true;
                        _0x12fba9();
                        _0x31c88a(18, 1);
                        _0x3a2c8f("a", _0x5f501e.aim2, 1);
                        _0x39dcdf.tickBase(() => {
                            if (_0x40ec6a.weapons[1] == 15) {
                                _0x541fa4.revAim = true;
                            }
                            _0x3789ff(_0x40ec6a.weapons[[9, 12, 13, 15].includes(_0x40ec6a.weapons[1]) ? 1 : 0]);
                            _0x31c88a(53, 0);
                            _0x31c88a(18, 1);
                            if ([9, 12, 13, 15].includes(_0x40ec6a.weapons[1])) {
                                _0x24db7();
                            }
                            _0x3a2c8f("a", _0x5f501e.aim2, 1);
                            _0x199e4d(4, _0x5f501e.aim2);
                            _0x39dcdf.tickBase(() => {
                                _0x541fa4.revAim = false;
                                _0x3789ff(_0x40ec6a.weapons[0]);
                                _0x31c88a(7, 0);
                                _0x31c88a(21, 1);
                                if (![9, 12, 13, 15].includes(_0x40ec6a.weapons[1])) {
                                    _0x24db7();
                                }
                                _0x3a2c8f("a", _0x5f501e.aim2, 1);
                                _0x39dcdf.tickBase(() => {
                                    _0x24db7();
                                    this.isTrue = false;
                                    _0x541fa4.autoAim = false;
                                    _0x3a2c8f("a", undefined, 1);
                                }, 1);
                            }, 1);
                        }, 1);
                    };
                    this.gotoGoal = function(_0x2f51b7, _0x20490a) {
                        let _0xbf6808 = _0x14afb1 => _0x14afb1 * _0x18564b.playerScale;
                        let _0x547d1b = {
                            a: _0x2f51b7 - _0x20490a,
                            b: _0x2f51b7 + _0x20490a,
                            c: _0x2f51b7 - _0xbf6808(1),
                            d: _0x2f51b7 + _0xbf6808(1),
                            e: _0x2f51b7 - _0xbf6808(2),
                            f: _0x2f51b7 + _0xbf6808(2),
                            g: _0x2f51b7 - _0xbf6808(4),
                            h: _0x2f51b7 + _0xbf6808(4)
                        };
                        let _0x419dc1 = function(_0x56f7fa, _0x55cd69) {
                            if (_0x40ec6a.y2 >= _0x18564b.mapScale / 2 - _0x18564b.riverWidth / 2 && _0x40ec6a.y2 <= _0x18564b.mapScale / 2 + _0x18564b.riverWidth / 2 && _0x55cd69 == 0) {
                                _0x31c88a(31, 0);
                            } else {
                                _0x31c88a(_0x56f7fa, _0x55cd69);
                            }
                        };
                        if (_0x4d42b6.length) {
                            let _0x40a1ae = _0x5f501e.dist2;
                            this.ticking = true;
                            if (_0x40a1ae >= _0x547d1b.a && _0x40a1ae <= _0x547d1b.b) {
                                _0x419dc1(22, 0);
                                _0x419dc1(11, 1);
                                if (_0x40ec6a.weaponIndex != _0x40ec6a.weapons[[10, 14].includes(_0x40ec6a.weapons[1]) ? 1 : 0] || _0x40ec6a.buildIndex > -1) {
                                    _0x3789ff(_0x40ec6a.weapons[[10, 14].includes(_0x40ec6a.weapons[1]) ? 1 : 0]);
                                }
                                return {
                                    dir: undefined,
                                    action: 1
                                };
                            } else {
                                if (_0x40a1ae < _0x547d1b.a) {
                                    if (_0x40a1ae >= _0x547d1b.g) {
                                        if (_0x40a1ae >= _0x547d1b.e) {
                                            if (_0x40a1ae >= _0x547d1b.c) {
                                                _0x419dc1(40, 0);
                                                _0x419dc1(10, 1);
                                                if (_0x42ddbd.slowOT) {
                                                    if (_0x40ec6a.buildIndex != _0x40ec6a.items[1]) {
                                                        _0x4ac07b(_0x40ec6a.items[1]);
                                                    }
                                                } else if (_0x40ec6a.weaponIndex != _0x40ec6a.weapons[[10, 14].includes(_0x40ec6a.weapons[1]) ? 1 : 0] || _0x40ec6a.buildIndex > -1) {
                                                    _0x3789ff(_0x40ec6a.weapons[[10, 14].includes(_0x40ec6a.weapons[1]) ? 1 : 0]);
                                                }
                                            } else {
                                                _0x419dc1(22, 0);
                                                _0x419dc1(13, 1);
                                                if (_0x40ec6a.weaponIndex != _0x40ec6a.weapons[[10, 14].includes(_0x40ec6a.weapons[1]) ? 1 : 0] || _0x40ec6a.buildIndex > -1) {
                                                    _0x3789ff(_0x40ec6a.weapons[[10, 14].includes(_0x40ec6a.weapons[1]) ? 1 : 0]);
                                                }
                                            }
                                        } else {
                                            _0x419dc1(6, 0);
                                            _0x419dc1(12, 1);
                                            if (_0x40ec6a.weaponIndex != _0x40ec6a.weapons[[10, 14].includes(_0x40ec6a.weapons[1]) ? 1 : 0] || _0x40ec6a.buildIndex > -1) {
                                                _0x3789ff(_0x40ec6a.weapons[[10, 14].includes(_0x40ec6a.weapons[1]) ? 1 : 0]);
                                            }
                                        }
                                    } else {
                                        _0x12fba9();
                                        _0x419dc1(11, 1);
                                        if (_0x40ec6a.weaponIndex != _0x40ec6a.weapons[[10, 14].includes(_0x40ec6a.weapons[1]) ? 1 : 0] || _0x40ec6a.buildIndex > -1) {
                                            _0x3789ff(_0x40ec6a.weapons[[10, 14].includes(_0x40ec6a.weapons[1]) ? 1 : 0]);
                                        }
                                    }
                                    return {
                                        dir: _0x5f501e.aim2 + Math.PI,
                                        action: 0
                                    };
                                } else if (_0x40a1ae > _0x547d1b.b) {
                                    if (_0x40a1ae <= _0x547d1b.h) {
                                        if (_0x40a1ae <= _0x547d1b.f) {
                                            if (_0x40a1ae <= _0x547d1b.d) {
                                                _0x419dc1(40, 0);
                                                _0x419dc1(9, 1);
                                                if (_0x42ddbd.slowOT) {
                                                    if (_0x40ec6a.buildIndex != _0x40ec6a.items[1]) {
                                                        _0x4ac07b(_0x40ec6a.items[1]);
                                                    }
                                                } else if (_0x40ec6a.weaponIndex != _0x40ec6a.weapons[[10, 14].includes(_0x40ec6a.weapons[1]) ? 1 : 0] || _0x40ec6a.buildIndex > -1) {
                                                    _0x3789ff(_0x40ec6a.weapons[[10, 14].includes(_0x40ec6a.weapons[1]) ? 1 : 0]);
                                                }
                                            } else {
                                                _0x419dc1(22, 0);
                                                _0x419dc1(13, 1);
                                                if (_0x40ec6a.weaponIndex != _0x40ec6a.weapons[[10, 14].includes(_0x40ec6a.weapons[1]) ? 1 : 0] || _0x40ec6a.buildIndex > -1) {
                                                    _0x3789ff(_0x40ec6a.weapons[[10, 14].includes(_0x40ec6a.weapons[1]) ? 1 : 0]);
                                                }
                                            }
                                        } else {
                                            _0x419dc1(6, 0);
                                            _0x419dc1(12, 1);
                                            if (_0x40ec6a.weaponIndex != _0x40ec6a.weapons[[10, 14].includes(_0x40ec6a.weapons[1]) ? 1 : 0] || _0x40ec6a.buildIndex > -1) {
                                                _0x3789ff(_0x40ec6a.weapons[[10, 14].includes(_0x40ec6a.weapons[1]) ? 1 : 0]);
                                            }
                                        }
                                    } else {
                                        _0x12fba9();
                                        _0x419dc1(11, 1);
                                        if (_0x40ec6a.weaponIndex != _0x40ec6a.weapons[[10, 14].includes(_0x40ec6a.weapons[1]) ? 1 : 0] || _0x40ec6a.buildIndex > -1) {
                                            _0x3789ff(_0x40ec6a.weapons[[10, 14].includes(_0x40ec6a.weapons[1]) ? 1 : 0]);
                                        }
                                    }
                                    return {
                                        dir: _0x5f501e.aim2,
                                        action: 0
                                    };
                                }
                                return {
                                    dir: undefined,
                                    action: 0
                                };
                            }
                        } else {
                            this.ticking = false;
                            return {
                                dir: undefined,
                                action: 0
                            };
                        }
                    };
                    this.bowMovement = function() {
                        let _0x471458 = this.gotoGoal(685, 3);
                        if (_0x471458.action) {
                            if (_0x40ec6a.reloads[53] == 0 && !this.isTrue) {
                                this.rangeType("ageInsta");
                            } else {
                                _0x3a2c8f("a", _0x471458.dir, 1);
                            }
                        } else {
                            _0x3a2c8f("a", _0x471458.dir, 1);
                        }
                    };
                    this.tickMovement = function() {
                        const _0x191046 = _0x207b6e.filter(_0x30dad0 => _0x30dad0.trap && _0x30dad0.active).sort((_0x1df212, _0x45fce4) => _0x1b05b9.getDist(_0x1df212, _0x5f501e, 0, 2) - _0x1b05b9.getDist(_0x45fce4, _0x5f501e, 0, 2)).find(_0x4fbe20 => {
                            const _0x48da3d = Math.hypot(_0x4fbe20.y - _0x5f501e.y2, _0x4fbe20.x - _0x5f501e.x2);
                            return _0x4fbe20 !== _0x40ec6a && (_0x40ec6a.sid === _0x4fbe20.owner.sid || _0x495258(_0x4fbe20.owner.sid)) && _0x48da3d <= 50;
                        });
                        let _0xa16fc9 = this.gotoGoal([10, 14].includes(_0x40ec6a.weapons[1]) && _0x40ec6a.y2 > _0x18564b.snowBiomeTop ? 240 : _0x40ec6a.weapons[1] == 15 ? 250 : _0x40ec6a.y2 <= _0x18564b.snowBiomeTop ? [10, 14].includes(_0x40ec6a.weapons[1]) ? 270 : 265 : 275, 3);
                        if (_0xa16fc9.action) {
                            if ((![6, 22].includes(_0x5f501e.skinIndex) || [6, 22].includes(_0x5f501e.skinIndex) && _0x191046) && _0x40ec6a.reloads[53] == 0 && !this.isTrue) {
                                if ([10, 14].includes(_0x40ec6a.weapons[1]) && _0x40ec6a.y2 > _0x18564b.snowBiomeTop || _0x40ec6a.weapons[1] == 15) {
                                    this.oneTickType();
                                } else {
                                    this.threeOneTickType();
                                }
                                if ([6, 22].includes(_0x5f501e.skinIndex) && _0x191046) {
                                    _0x36e03b.send("6", "p_OT [1/3]");
                                }
                            } else {
                                _0x3a2c8f("a", _0xa16fc9.dir, 1);
                            }
                        } else {
                            _0x3a2c8f("a", _0xa16fc9.dir, 1);
                        }
                    };
                    this.kmTickMovement = function() {
                        let _0x1a19bb = this.gotoGoal(240, 3);
                        if (_0x1a19bb.action) {
                            if (_0x5f501e.skinIndex != 22 && _0x40ec6a.reloads[53] == 0 && !this.isTrue && (_0x39dcdf.tick - _0x5f501e.poisonTick) % _0x18564b.serverUpdateRate == 8) {
                                this.kmTickType();
                            } else {
                                _0x3a2c8f("a", _0x1a19bb.dir, 1);
                            }
                        } else {
                            _0x3a2c8f("a", _0x1a19bb.dir, 1);
                        }
                    };
                    this.boostTickMovement = function() {
                        let _0x3ab470 = _0x40ec6a.weapons[1] == 9 ? 365 : _0x40ec6a.weapons[1] == 12 ? 380 : _0x40ec6a.weapons[1] == 13 ? 390 : _0x40ec6a.weapons[1] == 15 ? 365 : 370;
                        let _0x23ddb7 = _0x40ec6a.weapons[1] == 9 ? 2 : _0x40ec6a.weapons[1] == 12 ? 1.5 : _0x40ec6a.weapons[1] == 13 ? 1.5 : _0x40ec6a.weapons[1] == 15 ? 2 : 3;
                        let _0xc0486b = this.gotoGoal(_0x3ab470, _0x23ddb7);
                        if (_0xc0486b.action) {
                            if (_0x40ec6a.reloads[53] == 0 && !this.isTrue) {
                                this.boostTickType();
                            } else {
                                _0x3a2c8f("a", _0xc0486b.dir, 1);
                            }
                        } else {
                            _0x3a2c8f("a", _0xc0486b.dir, 1);
                        }
                    };
                    this.perfCheck = function(_0x21ad34, _0x39adbd) {
                        if (_0x39adbd.weaponIndex == 11 && _0x1b05b9.getAngleDist(_0x39adbd.aim2 + Math.PI, _0x39adbd.d2) <= _0x18564b.shieldAngle) {
                            return false;
                        }
                        if (![9, 12, 13, 15].includes(_0x40ec6a.weapons[1])) {
                            return true;
                        }
                        let _0x2f12a6 = {
                            x: _0x39adbd.x2 + Math.cos(_0x39adbd.aim2 + Math.PI) * 70,
                            y: _0x39adbd.y2 + Math.sin(_0x39adbd.aim2 + Math.PI) * 70
                        };
                        if (_0x1b05b9.lineInRect(_0x21ad34.x2 - _0x21ad34.scale, _0x21ad34.y2 - _0x21ad34.scale, _0x21ad34.x2 + _0x21ad34.scale, _0x21ad34.y2 + _0x21ad34.scale, _0x2f12a6.x, _0x2f12a6.y, _0x2f12a6.x, _0x2f12a6.y)) {
                            return true;
                        }
                        let _0x5d5974 = _0x45aa6e.filter(_0x47405b => _0x47405b.visible).find(_0xd25ce => {
                            if (_0x1b05b9.lineInRect(_0xd25ce.x2 - _0xd25ce.scale, _0xd25ce.y2 - _0xd25ce.scale, _0xd25ce.x2 + _0xd25ce.scale, _0xd25ce.y2 + _0xd25ce.scale, _0x2f12a6.x, _0x2f12a6.y, _0x2f12a6.x, _0x2f12a6.y)) {
                                return true;
                            }
                        });
                        if (_0x5d5974) {
                            return false;
                        }
                        _0x5d5974 = _0x207b6e.filter(_0x10049b => _0x10049b.active).find(_0x481db3 => {
                            let _0x55cdbf = _0x481db3.getScale();
                            if (!_0x481db3.ignoreCollision && _0x1b05b9.lineInRect(_0x481db3.x - _0x55cdbf, _0x481db3.y - _0x55cdbf, _0x481db3.x + _0x55cdbf, _0x481db3.y + _0x55cdbf, _0x2f12a6.x, _0x2f12a6.y, _0x2f12a6.x, _0x2f12a6.y)) {
                                return true;
                            }
                        });
                        if (_0x5d5974) {
                            return false;
                        }
                        return true;
                    };
                }
            };
            class _0x54c3c9 {
                constructor(_0x56c0a3, _0x17f217) {
                    this.hat = function() {
                        _0x56c0a3.forEach(_0x1d53a6 => {
                            let _0x53f93e = _0x29112f(_0x3716f2, _0x1d53a6);
                            if (_0x53f93e && !_0x40ec6a.skins[_0x1d53a6] && _0x40ec6a.points >= _0x53f93e.price) {
                                _0x3a2c8f("c", 1, _0x1d53a6, 0);
                            }
                        });
                    };
                    this.acc = function() {
                        _0x17f217.forEach(_0x48c34c => {
                            let _0x1fa072 = _0x29112f(_0x25434a, _0x48c34c);
                            if (_0x1fa072 && !_0x40ec6a.tails[_0x48c34c] && _0x40ec6a.points >= _0x1fa072.price) {
                                _0x3a2c8f("c", 1, _0x48c34c, 1);
                            }
                        });
                    };
                }
            };
            class _0x3f6dfe {
                constructor() {
                    this.sb = function(_0x21fefc) {
                        _0x21fefc(3);
                        _0x21fefc(17);
                        _0x21fefc(31);
                        _0x21fefc(23);
                        _0x21fefc(9);
                        _0x21fefc(38);
                    };
                    this.kh = function(_0x54e7a7) {
                        _0x54e7a7(3);
                        _0x54e7a7(17);
                        _0x54e7a7(31);
                        _0x54e7a7(23);
                        _0x54e7a7(10);
                        _0x54e7a7(38);
                        _0x54e7a7(4);
                        _0x54e7a7(25);
                    };
                    this.pb = function(_0x98d77) {
                        _0x98d77(5);
                        _0x98d77(17);
                        _0x98d77(32);
                        _0x98d77(23);
                        _0x98d77(9);
                        _0x98d77(38);
                    };
                    this.ph = function(_0x330452) {
                        _0x330452(5);
                        _0x330452(17);
                        _0x330452(32);
                        _0x330452(23);
                        _0x330452(10);
                        _0x330452(38);
                        _0x330452(28);
                        _0x330452(25);
                    };
                    this.db = function(_0x2b892e) {
                        _0x2b892e(7);
                        _0x2b892e(17);
                        _0x2b892e(31);
                        _0x2b892e(23);
                        _0x2b892e(9);
                        _0x2b892e(34);
                    };
                    this.km = function(_0x199ebd) {
                        _0x199ebd(7);
                        _0x199ebd(17);
                        _0x199ebd(31);
                        _0x199ebd(23);
                        _0x199ebd(10);
                        _0x199ebd(38);
                        _0x199ebd(4);
                        _0x199ebd(15);
                    };
                }
            };
            class _0x4ec3e1 {
                constructor(_0x5a6f36) {
                    this.calcDmg = function(_0x25da03, _0x214ad9) {
                        return _0x25da03 * _0x214ad9;
                    };
                    this.getAllDamage = function(_0x294b72) {
                        return [this.calcDmg(_0x294b72, 0.75), _0x294b72, this.calcDmg(_0x294b72, 1.125), this.calcDmg(_0x294b72, 1.5)];
                    };
                    this.weapons = [];
                    for (let _0x4b26eb = 0; _0x4b26eb < _0x5a6f36.weapons.length; _0x4b26eb++) {
                        let _0xe83f85 = _0x5a6f36.weapons[_0x4b26eb];
                        let _0x30de1e = _0xe83f85.name.split(" ").length <= 1 ? _0xe83f85.name : _0xe83f85.name.split(" ")[0] + "_" + _0xe83f85.name.split(" ")[1];
                        this.weapons.push(this.getAllDamage(_0x4b26eb > 8 ? _0xe83f85.Pdmg : _0xe83f85.dmg));
                        this[_0x30de1e] = this.weapons[_0x4b26eb];
                    }
                }
            }
            let _0x49358d = false;

            function _0x3950c3() {
                if (_0x211cfe === 50 && !_0x49358d) {
                    _0x49358d = true;
                    const _0x5d5527 = Object.assign(document.createElement("div"), {
                        innerHTML: "Warning: Many Packets, High Ping " + window.pingTime,
                        style: "\n            position: fixed;\n            top: 8%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            font-size: 1.5rem;\n            color: #a12a22;\n            text-shadow: -1px -1px 0 #333, 1px -1px 0 #333, -1px 1px 0 #333, 1px 1px 0 #333;\n            z-index: 9999;"
                    });
                    document.body.appendChild(_0x5d5527);
                    setTimeout(function() {
                        _0x5d5527.remove();
                        _0x49358d = false;
                    }, 2000);
                }
            }
            setInterval(_0x3950c3, 100);
            let _0x40c932 = [];
            let _0x1b05b9 = new _0x2b333c();
            let _0x4e0368 = new _0x95c985();
            let _0x18b804 = new _0x27e651(_0x5bb688, _0x207b6e, _0x1b05b9, _0x18564b);
            let _0x296b94 = new _0x59b2ce();
            let _0x3716f2 = _0x296b94.hats;
            let _0x25434a = _0x296b94.accessories;
            let _0x1da04a = new _0x453b06(_0x2208d9, _0x40c6a3, _0x5795c8, _0x45aa6e, _0x18b804, _0x4e0368, _0x18564b, _0x1b05b9);
            let _0x30713c = new _0x3ac1fc(_0x45aa6e, _0x89e306, _0x5795c8, _0x4e0368, null, _0x18564b, _0x1b05b9);
            let _0x29f096 = new _0x51628f();
            let _0x3973f5 = new _0x4a3fb1(_0x1b05b9, _0x4e0368);
            let _0x53f820 = new _0x2baffc();
            let _0x3b9f7e = new _0x54c3c9([15, 31, 6, 7, 22, 12, 53, 20, 40], [11, 13, 19, 18, 21]);
            let _0x5d2c59 = new _0x3f6dfe();
            let _0x2350f6;
            let _0x48ba60;
            let _0x42520e = {};
            let _0x1f993a = [];
            let _0x16b804;
            let _0x4d6c00 = [];
            let _0x4cafd5 = 0;
            let _0x50fa15 = [];
            let _0x158fb2 = {
                active: false,
                grid: 40,
                scale: 1440,
                x: 14400,
                y: 14400,
                chaseNear: false,
                array: [],
                lastX: this.grid / 2,
                lastY: this.grid / 2
            };

            function _0x3bc986(_0x30816e) {
                _0x3a2c8f("6", _0x30816e.slice(0, 30));
            }
            let _0x9ad12d = [];

            function _0x390b3c(_0x2af665, _0x20ce9d, _0x435635, _0x330247, _0x1d3e71, _0x21ee68, _0x461882, _0x18c06f) {
                let _0x360def = _0x21ee68 == 0 ? 9 : _0x21ee68 == 2 ? 12 : _0x21ee68 == 3 ? 13 : _0x21ee68 == 5 && 15;
                let _0x577ece = _0x18564b.playerScale * 2;
                let _0x32bf18 = {
                    x: _0x21ee68 == 1 ? _0x2af665 : _0x2af665 - _0x577ece * Math.cos(_0x435635),
                    y: _0x21ee68 == 1 ? _0x20ce9d : _0x20ce9d - _0x577ece * Math.sin(_0x435635)
                };
                let _0x1a9cf5 = _0x5795c8.filter(_0x221d36 => _0x221d36.visible && _0x1b05b9.getDist(_0x32bf18, _0x221d36, 0, 2) <= _0x221d36.scale).sort(function(_0x448698, _0x54a1bc) {
                    return _0x1b05b9.getDist(_0x32bf18, _0x448698, 0, 2) - _0x1b05b9.getDist(_0x32bf18, _0x54a1bc, 0, 2);
                })[0];
                if (_0x1a9cf5) {
                    if (_0x21ee68 == 1) {
                        _0x1a9cf5.shooting[53] = 1;
                    } else {
                        _0x1a9cf5.shootIndex = _0x360def;
                        _0x1a9cf5.shooting[1] = 1;
                        _0x3db90b(_0x1a9cf5, _0x435635, _0x330247, _0x1d3e71, _0x21ee68, _0x360def);
                    }
                }
            }
            let _0x11fd40 = 0;

            function _0x3db90b(_0x4a9167, _0x37d81e, _0x236d33, _0x160413, _0xab517a, _0x2ad19d) {
                if (!_0x4a9167.isTeam(_0x40ec6a)) {
                    _0x3802db = _0x1b05b9.getDirect(_0x40ec6a, _0x4a9167, 2, 2);
                    if (_0x1b05b9.getAngleDist(_0x3802db, _0x37d81e) <= 0.2) {
                        _0x4a9167.bowThreat[_0x2ad19d]++;
                        if (_0xab517a == 5) {
                            _0x11fd40++;
                        }
                        setTimeout(() => {
                            _0x4a9167.bowThreat[_0x2ad19d]--;
                            if (_0xab517a == 5) {
                                _0x11fd40--;
                            }
                        }, _0x236d33 / _0x160413);
                        if (_0x4a9167.bowThreat[9] >= 1 && (_0x4a9167.bowThreat[12] >= 1 || _0x4a9167.bowThreat[15] >= 1)) {
                            _0x199e4d(1, _0x4a9167.aim2);
                            _0x541fa4.anti0Tick = 4;
                            if (!_0x541fa4.antiSync) {
                                _0x194940(4);
                            }
                        } else if (_0x11fd40 >= 2) {
                            _0x199e4d(1, _0x4a9167.aim2);
                            _0x541fa4.anti0Tick = 4;
                            if (!_0x541fa4.antiSync) {
                                _0x194940(4);
                            }
                        }
                    }
                }
            }

            function _0x4ca310(_0xdba79c, _0xae6865, _0x15dae3) {
                if (_0x40ec6a && _0xdba79c) {
                    _0x1b05b9.removeAllChildren(_0x525bd7);
                    _0x525bd7.classList.add("visible");
                    _0x1b05b9.generateElement({
                        id: "itemInfoName",
                        text: _0x1b05b9.capitalizeFirst(_0xdba79c.name),
                        parent: _0x525bd7
                    });
                    _0x1b05b9.generateElement({
                        id: "itemInfoDesc",
                        text: _0xdba79c.desc,
                        parent: _0x525bd7
                    });
                    if (_0x15dae3) {} else if (_0xae6865) {
                        _0x1b05b9.generateElement({
                            class: "itemInfoReq",
                            text: !_0xdba79c.type ? "primary" : "secondary",
                            parent: _0x525bd7
                        });
                    } else {
                        for (let _0x52e990 = 0; _0x52e990 < _0xdba79c.req.length; _0x52e990 += 2) {
                            _0x1b05b9.generateElement({
                                class: "itemInfoReq",
                                html: _0xdba79c.req[_0x52e990] + "<span class='itemInfoReqVal'> x" + _0xdba79c.req[_0x52e990 + 1] + "</span>",
                                parent: _0x525bd7
                            });
                        }
                        if (_0xdba79c.group.limit) {
                            _0x1b05b9.generateElement({
                                class: "itemInfoLmt",
                                text: (_0x40ec6a.itemCounts[_0xdba79c.group.id] || 0) + "/" + (_0x18564b.isSandbox ? 99 : _0xdba79c.group.limit),
                                parent: _0x525bd7
                            });
                        }
                    }
                } else {
                    _0x525bd7.classList.remove("visible");
                }
            }
            window.addEventListener("resize", _0x1b05b9.checkTrusted(_0x21a332));

            function _0x21a332() {
                _0x29e8d6 = window.innerWidth;
                _0xcf3647 = window.innerHeight;
            }
            _0x21a332();
            var _0x4d1491;
            const _0x1901aa = document.getElementById("touch-controls-fullscreen");
            _0x1901aa.style.display = "block";
            _0x1901aa.addEventListener("mousemove", _0x10e125, false);

            function _0x10e125(_0xb54b49) {
                _0x2ebec6 = _0xb54b49.clientX;
                _0x3fa6e4 = _0xb54b49.clientY;
            }
            let _0x21ff46 = {
                left: false,
                middle: false,
                right: false
            };
            _0x1901aa.addEventListener("mousedown", _0x3cef2b, false);

            function _0x3cef2b(_0x1983d7) {
                if (_0x1c2e52 != 1) {
                    _0x1c2e52 = 1;
                    if (_0x1983d7.button == 0) {
                        _0x21ff46.left = true;
                    } else if (_0x1983d7.button == 1) {
                        _0x21ff46.middle = true;
                    } else if (_0x1983d7.button == 2) {
                        _0x21ff46.right = true;
                    }
                }
            }
            _0x1901aa.addEventListener("mouseup", _0x1b05b9.checkTrusted(_0x98d85e));

            function _0x98d85e(_0x9364c0) {
                if (_0x1c2e52 != 0) {
                    _0x1c2e52 = 0;
                    if (_0x9364c0.button == 0) {
                        _0x21ff46.left = false;
                    } else if (_0x9364c0.button == 1) {
                        _0x21ff46.middle = false;
                    } else if (_0x9364c0.button == 2) {
                        _0x21ff46.right = false;
                    }
                }
            }
            _0x1901aa.addEventListener("wheel", _0x13622c, false);

            function _0x13622c(_0x5f15e5) {
                if (_0x5f15e5.deltaY < 0) {
                    _0x541fa4.reSync = true;
                } else {
                    _0x541fa4.reSync = false;
                }
            }

            function _0x5c9adc() {
                let _0x456526 = 0;
                let _0x4cc843 = 0;
                for (let _0x11a3f2 in _0x3f4ab1) {
                    let _0x47d2a3 = _0x3f4ab1[_0x11a3f2];
                    _0x456526 += !!_0x38a50d[_0x11a3f2] * _0x47d2a3[0];
                    _0x4cc843 += !!_0x38a50d[_0x11a3f2] * _0x47d2a3[1];
                }
                if (_0x456526 == 0 && _0x4cc843 == 0) {
                    return undefined;
                } else {
                    return Math.atan2(_0x4cc843, _0x456526);
                }
            }

            function _0x23139a() {
                if (!_0x40ec6a) {
                    return 0;
                }
                if (!_0x40ec6a.lockDir) {
                    _0x3adf43 = Math.atan2(_0x3fa6e4 - _0xcf3647 / 2, _0x2ebec6 - _0x29e8d6 / 2);
                }
                return _0x3adf43 || 0;
            }

            function _0x57bc8e(_0x3e424e) {
                if (_0x3e424e) {
                    if (!_0x40ec6a) {
                        return "0";
                    }
                    if (_0x541fa4.autoAim || (_0x21ff46.left || _0x4655d8 && _0x5f501e.dist2 <= _0x4e0368.weapons[_0x40ec6a.weapons[0]].range + _0x5f501e.scale * 1.8 && !_0x3973f5.inTrap) && _0x40ec6a.reloads[_0x40ec6a.weapons[0]] == 0) {
                        _0x3adf43 = _0x1dff6e.autoGrind.enabled ? "getSafeDir()" : _0x4d42b6.length ? _0x541fa4.revAim ? "(near.aim2 + Math.PI)" : "near.aim2" : "getSafeDir()";
                    } else if (_0x21ff46.right && _0x40ec6a.reloads[_0x40ec6a.weapons[1] == 10 ? _0x40ec6a.weapons[1] : _0x40ec6a.weapons[0]] == 0) {
                        _0x3adf43 = "getSafeDir()";
                    } else if (_0x3973f5.inTrap && _0x40ec6a.reloads[_0x3973f5.notFast() ? _0x40ec6a.weapons[1] : _0x40ec6a.weapons[0]] == 0) {
                        _0x3adf43 = "traps.aim";
                    } else if (!_0x40ec6a.lockDir) {
                        if (_0x42ddbd.noDir) {
                            return "undefined";
                        }
                        _0x3adf43 = "getSafeDir()";
                    }
                    return _0x3adf43;
                } else {
                    if (!_0x40ec6a) {
                        return 0;
                    }
                    if (_0x541fa4.autoAim || (_0x21ff46.left || _0x4655d8 && _0x5f501e.dist2 <= _0x4e0368.weapons[_0x40ec6a.weapons[0]].range + _0x5f501e.scale * 1.8 && !_0x3973f5.inTrap) && _0x40ec6a.reloads[_0x40ec6a.weapons[0]] == 0) {
                        _0x3adf43 = _0x1dff6e.autoGrind.enabled ? _0x23139a() : _0x4d42b6.length ? _0x541fa4.revAim ? _0x5f501e.aim2 + Math.PI : _0x5f501e.aim2 : _0x23139a();
                    } else if (_0x21ff46.right && _0x40ec6a.reloads[_0x40ec6a.weapons[1] == 10 ? _0x40ec6a.weapons[1] : _0x40ec6a.weapons[0]] == 0) {
                        _0x3adf43 = _0x23139a();
                    } else if (_0x3973f5.inTrap && _0x40ec6a.reloads[_0x3973f5.notFast() ? _0x40ec6a.weapons[1] : _0x40ec6a.weapons[0]] == 0) {
                        _0x3adf43 = _0x3973f5.aim;
                    } else if (!_0x40ec6a.lockDir) {
                        if (_0x42ddbd.noDir) {
                            return undefined;
                        }
                        _0x3adf43 = _0x23139a();
                    }
                    return _0x3adf43 || 0;
                }
            }

            function _0x593d36() {
                if (!_0x40ec6a) {
                    return 0;
                }
                if (_0x541fa4.autoAim || (_0x21ff46.left || _0x4655d8 && _0x5f501e.dist2 <= _0x4e0368.weapons[_0x40ec6a.weapons[0]].range + _0x5f501e.scale * 1.8 && !_0x3973f5.inTrap) && _0x40ec6a.reloads[_0x40ec6a.weapons[0]] == 0) {
                    _0x3adf43 = _0x1dff6e.autoGrind.enabled ? _0x23139a() : _0x4d42b6.length ? _0x541fa4.revAim ? _0x5f501e.aim2 + Math.PI : _0x5f501e.aim2 : _0x23139a();
                } else if (_0x21ff46.right && _0x40ec6a.reloads[_0x40ec6a.weapons[1] == 10 ? _0x40ec6a.weapons[1] : _0x40ec6a.weapons[0]] == 0) {
                    _0x3adf43 = _0x23139a();
                } else if (_0x3973f5.inTrap && _0x40ec6a.reloads[_0x3973f5.notFast() ? _0x40ec6a.weapons[1] : _0x40ec6a.weapons[0]] == 0) {
                    _0x3adf43 = _0x3973f5.aim;
                } else if (!_0x40ec6a.lockDir) {
                    _0x3adf43 = _0x23139a();
                }
                return _0x3adf43 || 0;
            }

            function _0x3c0c6d() {
                return _0x2cb485.style.display != "block" && _0x2b22da.style.display != "block" && !_0xea6ee2;
            }

            function _0x48016e(_0x22820a) {
                let _0x1ca3fb = _0x22820a.which || _0x22820a.keyCode || 0;
                if (_0x40ec6a && _0x40ec6a.alive && _0x3c0c6d()) {
                    if (!_0x38a50d[_0x1ca3fb]) {
                        _0x38a50d[_0x1ca3fb] = 1;
                        _0x2b3df3[_0x22820a.key] = 1;
                        if (_0x1ca3fb == 27) {
                            _0x364f66 = !_0x364f66;
                            $("#modMenu").toggle();
                        } else if (_0x1ca3fb == 69) {
                            _0x24db7();
                        } else if (_0x1ca3fb == 67) {
                            _0x5c6338(document.getElementById("autochats").value);
                            document.getElementById("mscVolume").value = _0x4b1843[_0x4b1843.current].audio.volume * 100;
                            _0x335f74();
                        } else if (_0x40ec6a.weapons[_0x1ca3fb - 49] != undefined) {
                            _0x40ec6a.weaponCode = _0x40ec6a.weapons[_0x1ca3fb - 49];
                        } else if (_0x3f4ab1[_0x1ca3fb]) {
                            _0x3672ee();
                        } else if (_0x22820a.key == "m") {
                            _0x241376.placeSpawnPads = !_0x241376.placeSpawnPads;
                        } else if (_0x22820a.key == "z") {
                            _0x241376.place = !_0x241376.place;
                        } else if (_0x22820a.key == "Z") {
                            if (typeof window.debug == "function") {
                                window.debug();
                            }
                        } else if (_0x1ca3fb == 32) {
                            _0x3a2c8f("d", 1, _0x23139a(), 1);
                            _0x3a2c8f("d", 0, _0x23139a(), 1);
                        } else if (_0x22820a.key == ",") {
                            _0x40ec6a.sync = true;
                        }
                    }
                }
            }
            addEventListener("keydown", _0x1b05b9.checkTrusted(_0x48016e));

            function _0x3e1583(_0x21779e) {
                if (_0x40ec6a && _0x40ec6a.alive) {
                    let _0x480719 = _0x21779e.which || _0x21779e.keyCode || 0;
                    if (_0x480719 == 13) {
                        toggleMenuChat();
                    } else if (_0x3c0c6d()) {
                        if (_0x38a50d[_0x480719]) {
                            _0x38a50d[_0x480719] = 0;
                            _0x2b3df3[_0x21779e.key] = 0;
                            if (_0x3f4ab1[_0x480719]) {
                                _0x3672ee();
                            } else if (_0x21779e.key == ",") {
                                _0x40ec6a.sync = false;
                            }
                        }
                    }
                }
            }
            window.addEventListener("keyup", _0x1b05b9.checkTrusted(_0x3e1583));

            function _0x3672ee() {
                let _0x47b018 = _0x5c9adc();
                if (_0x5232f7 == undefined || _0x47b018 == undefined || Math.abs(_0x47b018 - _0x5232f7) > 0.3) {
                    if (!_0x541fa4.autoPush) {
                        _0x3a2c8f("a", _0x47b018, 1);
                    }
                    _0x5232f7 = _0x47b018;
                }
            }

            function _0x5a07a7() {}
            _0x5a07a7();

            function _0x2666b2(_0x3ac60b) {
                return (_0x40ec6a.scale + _0x3ac60b.getScale()) / (_0x40ec6a.maxSpeed * _0x4e0368.weapons[_0x40ec6a.weaponIndex].spdMult) + (_0x3ac60b.dmg && !_0x3ac60b.isTeamObject(_0x40ec6a) ? 35 : 0);
                if (_0x3ac60b.colDiv == 0.5) {
                    return _0x3ac60b.scale * _0x3ac60b.colDiv;
                } else if (!_0x3ac60b.isTeamObject(_0x40ec6a) && _0x3ac60b.dmg) {
                    return _0x3ac60b.scale + _0x40ec6a.scale;
                } else if (_0x3ac60b.isTeamObject(_0x40ec6a) && _0x3ac60b.trap) {
                    return 0;
                } else {
                    return _0x3ac60b.scale;
                }
            }

            function _0x52d185() {
                let _0x41a022 = _0x207b6e.filter(_0x4c9ff5 => _0x40ec6a.canSee(_0x4c9ff5) && _0x4c9ff5.active);
                for (let _0x10f819 = 0; _0x10f819 < _0x158fb2.grid; _0x10f819++) {
                    _0x50fa15[_0x10f819] = [];
                    for (let _0x225c8d = 0; _0x225c8d < _0x158fb2.grid; _0x225c8d++) {
                        let _0x40f72d = {
                            x: _0x40ec6a.x2 - _0x158fb2.scale / 2 + _0x158fb2.scale / _0x158fb2.grid * _0x225c8d,
                            y: _0x40ec6a.y2 - _0x158fb2.scale / 2 + _0x158fb2.scale / _0x158fb2.grid * _0x10f819
                        };
                        if (_0x1b05b9.getDist(_0x158fb2.chaseNear ? _0x5f501e : _0x158fb2, _0x40f72d, _0x158fb2.chaseNear ? 2 : 0, 0) <= (_0x158fb2.chaseNear ? 35 : 60)) {
                            _0x158fb2.lastX = _0x225c8d;
                            _0x158fb2.lastY = _0x10f819;
                            _0x50fa15[_0x10f819][_0x225c8d] = 0;
                            continue;
                        }
                        let _0x2a796d = _0x41a022.find(_0x5a643f => _0x1b05b9.getDist(_0x5a643f, _0x40f72d, 0, 0) <= _0x2666b2(_0x5a643f));
                        if (_0x2a796d) {
                            if (_0x2a796d.trap) {
                                _0x50fa15[_0x10f819][_0x225c8d] = 0;
                                continue;
                            }
                            _0x50fa15[_0x10f819][_0x225c8d] = 1;
                        } else {
                            _0x50fa15[_0x10f819][_0x225c8d] = 0;
                        }
                    }
                }
            }

            function _0x303e09(_0x3828d3) {
                let _0x25faa5 = ~~(_0x3828d3 % 3600 / 60);
                let _0x1dc375 = ~~_0x3828d3 % 60;
                if (_0x1dc375 <= 9) {
                    _0x1dc375 = "0" + _0x1dc375;
                }
                return _0x25faa5 + ":" + _0x1dc375;
            }
            let _0x45d649 = {};
            let _0x2fdf5a = false;
            let _0x19ff5d = "";

            function _0x403554() {
                _0x50fa15 = [];
                _0x52d185();
            }

            function _0x4abd56() {
                _0x158fb2.scale = _0x18564b.maxScreenWidth / 2 * 1.3;
                if (!_0x3973f5.inTrap && (_0x158fb2.chaseNear ? _0x4d42b6.length : true)) {
                    if (_0x5f501e.dist2 <= _0x4e0368.weapons[_0x40ec6a.weapons[0]].range) {
                        _0x3a2c8f("a", undefined, 1);
                    } else {
                        _0x403554();
                        easystar.setGrid(_0x50fa15);
                        easystar.setAcceptableTiles([0]);
                        easystar.enableDiagonals();
                        easystar.findPath(_0x50fa15[0].length / 2, _0x50fa15.length / 2, _0x158fb2.lastX, _0x158fb2.lastY, function(_0x553320) {
                            if (_0x553320 === null) {
                                _0x158fb2.array = [];
                                if (_0x5f501e.dist2 <= _0x4e0368.weapons[_0x40ec6a.weapons[0]].range) {
                                    _0x3a2c8f("a", undefined, 1);
                                } else {
                                    _0x3a2c8f("a", _0x5f501e.aim2, 1);
                                }
                            } else {
                                _0x158fb2.array = _0x553320;
                                if (_0x158fb2.array.length > 1) {
                                    let _0x2adc1f = {
                                        x: _0x40ec6a.x2 - _0x158fb2.scale / 2 + _0x158fb2.scale / _0x158fb2.grid * _0x553320[1].x,
                                        y: _0x40ec6a.y2 - _0x158fb2.scale / 2 + _0x158fb2.scale / _0x158fb2.grid * _0x553320[1].y
                                    };
                                    _0x3a2c8f("a", _0x1b05b9.getDirect(_0x2adc1f, _0x40ec6a, 0, 2), 1);
                                }
                            }
                        });
                        easystar.calculate();
                    }
                }
            }
            let _0x33166f = [];

            function _0x45d7cc(_0x369d94 = undefined) {
                for (let _0x4bef25 = 0; _0x4bef25 < _0x4e0368.list.length; ++_0x4bef25) {
                    let _0x4f073b = _0x4e0368.list[_0x4bef25].group.id;
                    let _0x383ee4 = _0x4e0368.weapons.length + _0x4bef25;
                    if (!_0x33166f[_0x383ee4]) {
                        _0x33166f[_0x383ee4] = document.createElement("div");
                        _0x33166f[_0x383ee4].id = "itemCount" + _0x383ee4;
                        document.getElementById("actionBarItem" + _0x383ee4).appendChild(_0x33166f[_0x383ee4]);
                        _0x33166f[_0x383ee4].style = "\n                    display: block;\n                    position: absolute;\n                    padding-left: 5px;\n                    font-size: 2em;\n                    color: #fff;\n                    ";
                        if (_0x4bef25 < 3) {
                            _0x33166f[_0x383ee4].innerHTML = Math.floor(_0x40ec6a.food / _0x4e0368.list[_0x4bef25].req[1]);
                        } else {
                            _0x33166f[_0x383ee4].innerHTML = _0x40ec6a.itemCounts[_0x4f073b] || 0;
                        }
                    } else {
                        if (_0x369d94 == _0x4f073b) {
                            _0x33166f[_0x383ee4].innerHTML = _0x40ec6a.itemCounts[_0x369d94] || 0;
                        }
                        if (_0x369d94 == undefined) {
                            if (_0x4bef25 < 3) {
                                _0x33166f[_0x383ee4].innerHTML = Math.floor(_0x40ec6a.food / _0x4e0368.list[_0x4bef25].req[1]);
                            }
                        }
                    }
                }
            }

            function _0x280a1b() {
                let _0x30936c = _0x207b6e.filter(_0xbb503d => _0xbb503d.trap && _0xbb503d.active && _0xbb503d.isTeamObject(_0x40ec6a) && _0x1b05b9.getDist(_0xbb503d, _0x5f501e, 0, 2) <= _0x5f501e.scale + _0xbb503d.getScale() + 5).sort(function(_0x207137, _0x523e7c) {
                    return _0x1b05b9.getDist(_0x207137, _0x5f501e, 0, 2) - _0x1b05b9.getDist(_0x523e7c, _0x5f501e, 0, 2);
                })[0];
                if (_0x30936c) {
                    let _0x6c9aa2 = _0x207b6e.filter(_0x573334 => _0x573334.dmg && _0x573334.active && _0x573334.isTeamObject(_0x40ec6a) && _0x1b05b9.getDist(_0x573334, _0x30936c, 0, 0) <= _0x5f501e.scale + _0x30936c.scale + _0x573334.scale).sort(function(_0x47364e, _0x58c673) {
                        return _0x1b05b9.getDist(_0x47364e, _0x5f501e, 0, 2) - _0x1b05b9.getDist(_0x58c673, _0x5f501e, 0, 2);
                    })[0];
                    if (_0x6c9aa2) {
                        let _0xdb5fa3 = {
                            x: _0x6c9aa2.x + Math.cos(_0x1b05b9.getDirect(_0x5f501e, _0x6c9aa2, 2, 0)) * 250,
                            y: _0x6c9aa2.y + Math.sin(_0x1b05b9.getDirect(_0x5f501e, _0x6c9aa2, 2, 0)) * 250,
                            x2: _0x6c9aa2.x + (_0x1b05b9.getDist(_0x5f501e, _0x6c9aa2, 2, 0) + _0x40ec6a.scale) * Math.cos(_0x1b05b9.getDirect(_0x5f501e, _0x6c9aa2, 2, 0)),
                            y2: _0x6c9aa2.y + (_0x1b05b9.getDist(_0x5f501e, _0x6c9aa2, 2, 0) + _0x40ec6a.scale) * Math.sin(_0x1b05b9.getDirect(_0x5f501e, _0x6c9aa2, 2, 0))
                        };
                        let _0x566486 = _0x207b6e.filter(_0x1dc35f => _0x1dc35f.active).find(_0x524d4f => {
                            let _0x7e81f8 = _0x524d4f.getScale();
                            if (!_0x524d4f.ignoreCollision && _0x1b05b9.lineInRect(_0x524d4f.x - _0x7e81f8, _0x524d4f.y - _0x7e81f8, _0x524d4f.x + _0x7e81f8, _0x524d4f.y + _0x7e81f8, _0x40ec6a.x2, _0x40ec6a.y2, _0xdb5fa3.x2, _0xdb5fa3.y2)) {
                                return true;
                            }
                        });
                        if (_0x566486) {
                            if (_0x541fa4.autoPush) {
                                _0x541fa4.autoPush = false;
                                _0x3a2c8f("a", _0x5232f7 || undefined, 1);
                            }
                        } else {
                            _0x541fa4.autoPush = true;
                            _0x541fa4.pushData = {
                                x: _0x6c9aa2.x + 70,
                                y: _0x6c9aa2.y + 70,
                                x2: _0xdb5fa3.x2 + 20,
                                y2: _0xdb5fa3.y2 + 20
                            };
                            let _0x4d0090 = _0x40ec6a.scale / 10;
                            let _0x12828d = _0x1b05b9.getDirect(_0x5f501e, _0x6c9aa2, 2, 0) > 70 ? _0x5f501e.aim2 : undefined;
                            if (_0x1b05b9.lineInRect(_0x40ec6a.x2 - _0x4d0090, _0x40ec6a.y2 - _0x4d0090, _0x40ec6a.x2 + _0x4d0090, _0x40ec6a.y2 + _0x4d0090, _0x5f501e.x2, _0x5f501e.y2, _0xdb5fa3.x, _0xdb5fa3.y)) {
                                _0x3a2c8f("a", _0x12828d, 1);
                            } else {
                                _0x3a2c8f("a", _0x1b05b9.getDirect(_0xdb5fa3, _0x40ec6a, 2, 2), 1);
                            }
                        }
                    } else if (_0x541fa4.autoPush) {
                        _0x541fa4.autoPush = false;
                        _0x3a2c8f("a", _0x5232f7 || undefined, 1);
                    }
                } else if (_0x541fa4.autoPush) {
                    _0x541fa4.autoPush = false;
                    _0x3a2c8f("a", _0x5232f7 || undefined, 1);
                }
            }

            function _0x5b83c4(_0x184ce8) {
                _0x171f5f.push(new _0x3bfc1a(_0x184ce8.x, _0x184ce8.y, _0x184ce8.dir, _0x184ce8.buildIndex, _0x184ce8.weaponIndex, _0x184ce8.weaponVariant, _0x184ce8.skinColor, _0x184ce8.scale, _0x184ce8.name));
            }

            function _0x2b9c67(_0x298887) {
                _0x4d7cfa = _0x298887.teams;
            }
            var _0x562119 = false;

            function _0x2c6773(_0x40588f) {
                _0x38a50d = {};
                _0x2b3df3 = {};
                _0x453339 = _0x40588f;
                _0x1c2e52 = 0;
                _0x54d918 = true;
                _0x562119 = true;
                _0x3a2c8f("d", 0, _0x57bc8e(), 1);
                _0x541fa4.ageInsta = true;
                if (_0x1d14a7) {
                    _0x1d14a7 = false;
                    _0x207b6e.length = 0;
                }
            }

            function _0x2b6b03(_0x568ba6, _0x5dc102) {
                let _0x150826 = _0x123103(_0x568ba6[0]);
                if (!_0x150826) {
                    _0x150826 = new _0x4af63b(_0x568ba6[0], _0x568ba6[1], _0x18564b, _0x1b05b9, _0x1da04a, _0x18b804, _0x5795c8, _0x45aa6e, _0x4e0368, _0x3716f2, _0x25434a);
                    _0x5795c8.push(_0x150826);
                    if (_0x568ba6[1] != _0x453339) {
                        _0x3f8e1a("System", "Found " + _0x568ba6[2] + " {" + _0x568ba6[1] + "}", "#fff");
                    }
                } else if (_0x568ba6[1] != _0x453339) {
                    _0x3f8e1a("Game", "Encount " + _0x568ba6[2] + " {" + _0x568ba6[1] + "}", "yellow");
                }
                _0x150826.spawn(_0x5dc102 ? true : null);
                _0x150826.visible = false;
                _0x150826.oldPos = {
                    x2: undefined,
                    y2: undefined
                };
                _0x150826.x2 = undefined;
                _0x150826.y2 = undefined;
                _0x150826.x3 = undefined;
                _0x150826.y3 = undefined;
                _0x150826.setData(_0x568ba6);
                if (_0x5dc102) {
                    if (!_0x40ec6a) {
                        window.prepareUI(_0x150826);
                    }
                    _0x40ec6a = _0x150826;
                    _0x2f0e10 = _0x40ec6a.x;
                    _0x2b9101 = _0x40ec6a.y;
                    _0x541fa4.lastDir = 0;
                    _0xe016b9();
                    _0x200c34();
                    updateItemCountDisplay();
                    if (_0x40ec6a.skins[7]) {
                        _0x541fa4.reSync = true;
                    }
                }
            }

            function _0x1e6c12(_0xb73a) {
                for (let _0x395fe5 = 0; _0x395fe5 < _0x5795c8.length; _0x395fe5++) {
                    if (_0x5795c8[_0x395fe5].id == _0xb73a) {
                        let _0x4cf466 = _0x5795c8[_0x395fe5];
                        chchch(_0x4cf466.name + " has died", "red");
                        _0x5795c8.splice(_0x395fe5, 1);
                        break;
                    }
                }
            }
            var _0x42b586 = [];
            var _0x319879 = _0x529245 => _0x529245.reduce((_0x3a66d0, _0x47ccba, _0x659c95, _0x4aeb43) => _0x4aeb43.filter(_0x5d8a39 => _0x5d8a39 === _0x3a66d0).length >= _0x4aeb43.filter(_0x1714b2 => _0x1714b2 === _0x47ccba).length ? _0x3a66d0 : _0x47ccba, null);
            class _0x3b38f4 {
                constructor(_0x507d1b, _0x2755ff) {
                    this.id = _0x2755ff;
                    this.oldhp = _0x507d1b;
                    this.dmgPromises = [];
                    this.list = [];
                    this.diesTo = [];
                    this.pings = [];
                    this.ping = 0;
                    this.text = "no information gathered";
                }
                isRealPing(_0x54e5b4) {
                    return Math.abs(this.ping - _0x54e5b4) < 40;
                }
                calculate() {
                    let _0x2f36d4 = [];
                    let _0x31012d = [];
                    let _0x20605b = [];
                    let _0x44007d = 0;
                    let _0x7921c2 = null;
                    let _0x31f88a = 0;
                    let _0x1c2135 = false;
                    for (let _0x372552 = 0, _0x570daa; _0x372552 < this.list.length; _0x372552++) {
                        _0x570daa = this.list[_0x372552];
                        if (_0x570daa.dmg < 45 && _0x570daa.dmg >= 40 && _0x570daa.type == "slow" && this.isRealPing(_0x570daa.gap - 120) && !_0x2f36d4.includes("nobull")) {
                            _0x2f36d4.push("nobull");
                        } else if (_0x570daa.dmg >= 45) {
                            if (_0x7921c2 - _0x570daa.delay2 < 400) {
                                if (_0x570daa.type == "fast" && _0x570daa.clown > _0x31f88a) {
                                    _0x31f88a = _0x570daa.clown;
                                    _0x44007d++;
                                } else if (_0x570daa.type == "slow" && _0x7921c2 - _0x570daa.delay2 < 260) {
                                    _0x1c2135 = true;
                                } else if (_0x570daa.type == "slow") {
                                    console.log(_0x570daa.clown);
                                    _0x20605b.push(_0x570daa.clown);
                                    _0x31012d.push(_0x44007d);
                                    _0x44007d = 0;
                                }
                            }
                            _0x7921c2 = _0x570daa.delay2;
                        }
                    }
                    _0x31012d.push(_0x44007d);
                    if (_0x31012d.length > 0) {
                        _0x2f36d4.push(["bullspam", Math.max(_0x31012d)]);
                    }
                    _0x2f36d4.push(["shamePerInsta", _0x1c2135 ? -2 : 1]);
                    if (_0x20605b.length > 0) {
                        let _0x45a922 = _0x319879(_0x20605b);
                        _0x2f36d4.push(["stopAntiAt", _0x45a922]);
                    };
                    return _0x2f36d4;
                }
                updateElem(_0x424c81, _0x4749da) {
                    let _0x5f0bce = _0x424c81.findIndex(_0x5e8807 => _0x5e8807[0] == _0x4749da[0]);
                    if (_0x5f0bce === -1) {
                        _0x424c81.push(_0x4749da);
                    } else {
                        _0x424c81[_0x5f0bce] = _0x4749da;
                    }
                    return _0x424c81;
                }
                assign(_0x5ae36f, _0x887ab) {
                    for (let _0x1bfbcf = 0; _0x1bfbcf < _0x887ab.length; _0x1bfbcf++) {
                        _0x5ae36f = this.updateElem(_0x5ae36f, _0x887ab[_0x1bfbcf]);
                    }
                    return _0x5ae36f;
                }
                track(_0x1b812b) {
                    this.list.push(_0x1b812b);
                    if (_0x1b812b.type == "slow") {
                        this.pings.push(_0x1b812b.gap - 120);
                        if (this.pings.length > 20) {
                            this.pings.shift();
                        }
                        this.ping = Math.round(this.pings.reduce((_0x4386fe, _0x274949) => _0x4386fe + _0x274949, 0) / this.pings.length);
                    };
                    if (this.list.length > 15) {
                        this.list.shift();
                    };
                    let _0x4b54a2 = this.calculate();
                    if (_0x4b54a2.length > 0) {
                        this.diesTo = this.assign(this.diesTo, _0x4b54a2);
                        try {
                            this.text = "dies to " + this.diesTo.map(_0x5c297b => _0x5c297b.join(" ")).join(",");
                        } catch (_0x451518) {
                            this.text = "";
                        };
                    };
                }
                add(_0x329205, _0x46c68d) {
                    let _0x45ed26 = this.healthType(_0x329205, this.oldhp);
                    let _0x54a061 = this.oldhp - _0x329205;
                    this.oldhp = _0x329205;
                    if (_0x45ed26 === "damage") {
                        let _0x9a959e = this.dmgPromises.length;
                        let _0x11853f = null;
                        let _0x325cae = Date.now();
                        let _0x21895d = _0x42b586[this.id];
                        new Promise(function(_0x2c1264) {
                            _0x21895d.dmgPromises.push(_0x2c1264);
                            setTimeout(_0x2c1264, 1000, false);
                        }).then(function(_0x348e36) {
                            _0x21895d.dmgPromises.splice(_0x9a959e, 1);
                            if (!_0x348e36) {
                                return;
                            }
                            let _0x185aec = Date.now() - _0x325cae;
                            let _0x267abd = {
                                delay1: _0x325cae,
                                delay2: Date.now(),
                                gap: _0x185aec,
                                dmg: _0x54a061,
                                type: _0x185aec < 120 ? "fast" : "slow",
                                clown: _0x46c68d
                            };
                            _0x21895d.track(_0x267abd);
                        });
                        _0x42b586[this.id] = _0x21895d;
                    } else if (this.dmgPromises.length) {
                        this.dmgPromises.forEach(_0x16a35a => _0x16a35a(true));
                        this.dmgPromises = [];
                    }
                }
                healthType(_0x45e954, _0x336eec) {
                    if (_0x45e954 < _0x336eec) {
                        return "damage";
                    } else {
                        return "heal";
                    }
                }
                update(_0x1ce641, _0x1f8660) {
                    this.add(_0x1ce641, _0x1f8660);
                }
            }
            let _0x4b1843 = new _0x4801ee();

            function _0x5c6338(_0x4c5854) {
                if (_0x4b1843[_0x4c5854].audio.paused) {
                    _0x4de0e0 = Date.now();
                    if (_0x4b1843.current == _0x4c5854 && _0x5178ab) {
                        _0x1ad66d = _0x5178ab;
                    } else {
                        _0x4b1843[_0x4c5854].audio.currentTime = 0;
                        _0x1ad66d = Array(..._0x4b1843[_0x4c5854].chats);
                    }
                    _0x4b1843.current = _0x4c5854;
                    _0x4b1843[_0x4c5854].audio.play();
                    _0x1ad66d.forEach((_0x9824a9, _0x99eb65) => {
                        _0x17877b.push(setTimeout(() => {
                            _0x1ad66d.splice(0, 1);
                            _0x9824a9[0] = _0x9824a9[0].replaceAll("’", "'");
                            _0x36e03b.send("6", _0x9824a9[0]);
                            if (_0x1ad66d.length == 0) {
                                _0x1ad66d = Array(..._0x4b1843[_0x4c5854].chats);
                            }
                        }, _0x9824a9[1]));
                    });
                } else {
                    _0x4b1843[_0x4b1843.current].audio.pause();
                    _0x5178ab = _0x1ad66d.map(_0x5cc175 => [_0x5cc175[0], _0x5cc175[1] - (Date.now() - _0x4de0e0)]);
                    _0x17877b.forEach(_0x30212c => clearTimeout(_0x30212c));
                }
            }

            function _0x42ab0e(_0x306cd4, _0x3d549e) {
                _0x1d199f = _0x44509b(_0x306cd4);
                if (_0x1d199f) {
                    _0x1d199f.oldHealth = _0x1d199f.health;
                    _0x1d199f.health = _0x3d549e;
                    _0x1d199f.judgeShame();
                    if (_0x1d199f.oldHealth > _0x1d199f.health) {
                        _0x1d199f.damaged = _0x1d199f.oldHealth - _0x1d199f.health;
                        _0x33becd.push([_0x306cd4, _0x3d549e, _0x1d199f.damaged]);
                    } else {}
                    if (_0x1d199f.health <= 0) {}
                }
            }

            function _0x34d441() {
                _0x54d918 = false;
                _0x2350f6 = {
                    x: _0x40ec6a.x,
                    y: _0x40ec6a.y
                };
                if (_0x42ddbd.autoRespawn) {
                    getEl("ot-sdk-btn-floating").style.display = "none";
                    _0x3a2c8f("M", {
                        name: _0x2d669e[0],
                        moofoll: _0x2d669e[1],
                        skin: _0x2d669e[2]
                    });
                }
            }

            function _0x421008(_0x2287be, _0xa79dd1) {
                if (_0x40ec6a) {
                    _0x40ec6a.itemCounts[_0x2287be] = _0xa79dd1;
                    updateItemCountDisplay(_0x2287be);
                }
            }

            function _0x200c34(_0x3bdacb, _0x2c3ebe, _0x58b91f) {
                if (_0x3bdacb != undefined) {
                    _0x40ec6a.XP = _0x3bdacb;
                }
                if (_0x2c3ebe != undefined) {
                    _0x40ec6a.maxXP = _0x2c3ebe;
                }
                if (_0x58b91f != undefined) {
                    _0x40ec6a.age = _0x58b91f;
                }
            }

            function _0x117375(_0xed3701, _0x54db7b) {
                _0x40ec6a.upgradePoints = _0xed3701;
                _0x40ec6a.upgrAge = _0x54db7b;
                if (_0xed3701 > 0) {
                    _0x40c932.length = 0;
                    _0x1b05b9.removeAllChildren(_0x1f8961);
                    for (let _0x5d437c = 0; _0x5d437c < _0x4e0368.weapons.length; ++_0x5d437c) {
                        if (_0x4e0368.weapons[_0x5d437c].age == _0x54db7b && (ae89 || _0x4e0368.weapons[_0x5d437c].pre == undefined || _0x40ec6a.weapons.indexOf(_0x4e0368.weapons[_0x5d437c].pre) >= 0)) {
                            let _0xc1a888 = _0x1b05b9.generateElement({
                                id: "upgradeItem" + _0x5d437c,
                                class: "actionBarItem",
                                onmouseout: function() {
                                    _0x4ca310();
                                },
                                parent: _0x1f8961
                            });
                            _0xc1a888.style.backgroundImage = getEl("actionBarItem" + _0x5d437c).style.backgroundImage;
                            _0x40c932.push(_0x5d437c);
                        }
                    }
                    for (let _0x356b91 = 0; _0x356b91 < _0x4e0368.list.length; ++_0x356b91) {
                        if (_0x4e0368.list[_0x356b91].age == _0x54db7b && (ae89 || _0x4e0368.list[_0x356b91].pre == undefined || _0x40ec6a.items.indexOf(_0x4e0368.list[_0x356b91].pre) >= 0)) {
                            let _0x2658a1 = _0x4e0368.weapons.length + _0x356b91;
                            let _0x18a69e = _0x1b05b9.generateElement({
                                id: "upgradeItem" + _0x2658a1,
                                class: "actionBarItem",
                                onmouseout: function() {
                                    _0x4ca310();
                                },
                                parent: _0x1f8961
                            });
                            _0x18a69e.style.backgroundImage = getEl("actionBarItem" + _0x2658a1).style.backgroundImage;
                            _0x40c932.push(_0x2658a1);
                        }
                    }
                    for (let _0x439aed = 0; _0x439aed < _0x40c932.length; _0x439aed++) {
                        (function(_0x502f84) {
                            let _0x46ae8f = getEl("upgradeItem" + _0x502f84);
                            _0x46ae8f.onmouseover = function() {
                                if (_0x4e0368.weapons[_0x502f84]) {
                                    _0x4ca310(_0x4e0368.weapons[_0x502f84], true);
                                } else {
                                    _0x4ca310(_0x4e0368.list[_0x502f84 - _0x4e0368.weapons.length]);
                                }
                            };
                            _0x46ae8f.onclick = _0x1b05b9.checkTrusted(function() {
                                _0x3a2c8f("H", _0x502f84);
                            });
                            _0x1b05b9.hookTouchEvents(_0x46ae8f);
                        })(_0x40c932[_0x439aed]);
                    }
                    if (_0x40c932.length) {
                        _0x1f8961.style.display = "block";
                        _0x59eab6.style.display = "block";
                        _0x59eab6.style.borderRadius = "4px";
                        _0x59eab6.innerHTML = "SELECT ITEMS (" + _0xed3701 + ")";
                    } else {
                        _0x1f8961.style.display = "none";
                        _0x59eab6.style.display = "none";
                        _0x4ca310();
                    }
                } else {
                    _0x1f8961.style.display = "none";
                    _0x59eab6.style.display = "none";
                    _0x4ca310();
                }
            }

            function _0x27b2dc(_0x3d9966, _0x5369f9) {
                try {
                    return Math.hypot((_0x5369f9.y2 || _0x5369f9.y) - (_0x3d9966.y2 || _0x3d9966.y), (_0x5369f9.x2 || _0x5369f9.x) - (_0x3d9966.x2 || _0x3d9966.x));
                } catch (_0x2b7ef6) {
                    return Infinity;
                }
            }

            function _0x11efd5(_0x3c8d49, _0x2c29e0) {
                try {
                    return Math.atan2((_0x2c29e0.y2 || _0x2c29e0.y) - (_0x3c8d49.y2 || _0x3c8d49.y), (_0x2c29e0.x2 || _0x2c29e0.x) - (_0x3c8d49.x2 || _0x3c8d49.x));
                } catch (_0x5a0a60) {
                    return 0;
                }
            }

            function _0x4ac874(_0x4a49ff = 0, _0x5e3589 = 1, _0x2edd93, _0x30f180 = 1) {
                let _0x1a3910 = [];
                for (let _0x4950c5 = _0x4a49ff; _0x4950c5 < _0x5e3589; _0x4950c5 += _0x30f180) {
                    _0x1a3910.push(_0x4950c5);
                    if (typeof _0x2edd93 == "function") {
                        _0x2edd93(_0x4950c5);
                    }
                }
                return _0x1a3910;
            }

            function _0x49ce37(_0x3584d4) {
                var _0x224d69 = _0x3584d4 * Math.PI / 180 % (Math.PI * 2);
                if (_0x224d69 > Math.PI) {
                    return Math.PI - _0x224d69;
                } else {
                    return _0x224d69;
                }
            }

            function _0x21244d(_0x2c1c96) {
                var _0x5d245a = _0x2c1c96 / Math.PI * 360 % 360;
                if (_0x5d245a >= 360) {
                    return _0x5d245a - 360;
                } else {
                    return _0x5d245a;
                }
            }

            function _0x34d73c(_0x3e0106) {
                let _0x39df55 = _0x5fb95d(_0x3e0106);
                _0x18b804.disableBySid(_0x3e0106);
                let _0x48adf5 = _0x39df55;
                if (_0x48adf5 && _0x27b2dc(_0x40ec6a, _0x48adf5) < 200) {
                    if (_0x89b1ee.length) {
                        let _0x2c8f7e = _0x5f501e;
                        let _0xdd961c = _0x40ec6a;
                        let _0x2be0a4 = _0x27b2dc(_0xdd961c, _0x2c8f7e);
                        let _0x5c98be = _0x11efd5(_0xdd961c, _0x2c8f7e);
                        let _0x50045c = _0x11efd5(_0x40ec6a, _0x5c98be + 180);
                        let _0x55e343 = [0, 0];
                        let _0x539ba5 = function(_0x1939f7, _0x4be599) {
                            _0x48ac11(_0x1939f7, _0x4be599);
                        };
                        if (_0x2be0a4 < 500) {
                            for (let _0x402c74 = 0; _0x402c74 != 2; _0x402c74++) {
                                if (_0x2be0a4 < 200) {
                                    for (let _0x2d4a6c = 0; _0x2d4a6c < Math.PI; _0x2d4a6c += _0x49ce37(_0x4e0368.list[_0xdd961c.items[2]].scale)) {
                                        let _0x4093f2;
                                        if (_0x55e343[0]) {
                                            _0x4093f2 = false;
                                            _0x55e343[0]--;
                                        } else if (_0x539ba5(2, (_0x5c98be || _0x50045c) + _0x2d4a6c)) {
                                            if (_0x21244d(_0x2d4a6c) < _0x4e0368.list[_0xdd961c.items[2]].scale) {
                                                _0x55e343[1] = Math.ceil(_0x4e0368.list[_0xdd961c.items[2]].scale / _0x21244d(Math.PI / 12));
                                            }
                                            _0x4093f2 = true;
                                        }
                                        if (_0x4093f2) {
                                            _0x55e343[0] = Math.ceil(_0x4e0368.list[_0xdd961c.items[2]].scale / _0x21244d(Math.PI / 12));
                                        }
                                        if (!_0x4093f2 || _0x1b05b9.getAngleDist(_0x5c98be + _0x2d4a6c, _0x5c98be - _0x2d4a6c) > _0x49ce37(_0x4e0368.list[_0xdd961c.items[2]].scale)) {
                                            if (_0x55e343[1]) {
                                                _0x55e343[1]--;
                                            } else if (_0x539ba5(2, _0x5c98be - _0x2d4a6c)) {
                                                _0x55e343[1] = Math.ceil(_0x4e0368.list[_0xdd961c.items[2]].scale / _0x21244d(Math.PI / 12));
                                            }
                                        }
                                    }
                                    _0x539ba5(4, _0x49ce37(_0x21244d(_0x5c98be) - 180));
                                } else {
                                    let _0x33d50f = 0;
                                    if (_0x33d50f) {
                                        _0x33d50f--;
                                    } else {
                                        for (let _0x5c1c7d = 0; _0x5c1c7d < Math.PI / 2; _0x5c1c7d += Math.PI / 3) {
                                            if (_0x48ac11(4, _0x5c98be + _0x5c1c7d)) {
                                                _0x33d50f = Math.ceil(50 / Math.PI / 6);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }

            function _0x5bd063(_0x5392a) {
                if (_0x40ec6a) {
                    _0x18b804.removeAllItems(_0x5392a);
                }
            }

            function _0x1b9693(_0x2b3dae, _0x42fde4) {
                return Math.sqrt(Math.pow(_0x42fde4.y - _0x2b3dae.y, 2) + Math.pow(_0x42fde4.x - _0x2b3dae.x, 2));
            }

            function _0x55454f(_0x297bd4, _0x4623ce) {
                _0x48ac11(_0x297bd4, _0x4623ce);
                console.log("success");
            }
            let _0x1e6808 = {
                tick: 0,
                delay: 0,
                time: [],
                manage: []
            };

            function _0x457926(_0x5f3f77, _0x378013) {
                if (!_0x1e6808.manage[_0x1e6808.tick + _0x378013]) {
                    _0x1e6808.manage[_0x1e6808.tick + _0x378013] = [_0x5f3f77];
                } else {
                    _0x1e6808.manage[_0x1e6808.tick + _0x378013].push(_0x5f3f77);
                }
            }

            function _0x4719a4(_0x441321) {
                _0x3f1ecd.push(_0x441321);
            }
            let _0x3f1ecd = [];
            let _0x30deb5;
            let _0xc689cc = [];
            let _0x38b838 = [];
            let _0x8e264e = 0.35;

            function _0x5b09a3(_0x3bbbb9) {
                _0x39dcdf.tick++;
                _0x4d42b6 = [];
                _0x89b1ee = [];
                _0x5f501e = [];
                _0x39dcdf.tickSpeed = performance.now() - _0x39dcdf.lastTick;
                _0x39dcdf.lastTick = performance.now();
                _0x1e6808.tick++;
                _0x1e6808.time.push(Date.now() - _0x1e6808.delay <= 50 || Date.now() - _0x1e6808.delay >= 175 ? "lag" : 1);
                if (_0x1e6808.tick % 10 === 0) {
                    _0x1e6808.time = [];
                }
                if (_0x1e6808.tick % 300 === 0) {}
                _0x1e6808.delay = Date.now();
                _0x5795c8.forEach(_0x9fa184 => {
                    _0x9fa184.forcePos = !_0x9fa184.visible;
                    _0x9fa184.visible = false;
                });
                for (let _0x4d291c = 0; _0x4d291c < _0x3bbbb9.length;) {
                    _0x1d199f = _0x44509b(_0x3bbbb9[_0x4d291c]);
                    if (_0x1d199f) {
                        _0x1d199f.t1 = _0x1d199f.t2 === undefined ? _0x39dcdf.lastTick : _0x1d199f.t2;
                        _0x1d199f.t2 = _0x39dcdf.lastTick;
                        _0x1d199f.oldPos.x2 = _0x1d199f.x2;
                        _0x1d199f.oldPos.y2 = _0x1d199f.y2;
                        _0x1d199f.x1 = _0x1d199f.x;
                        _0x1d199f.y1 = _0x1d199f.y;
                        _0x1d199f.x2 = _0x3bbbb9[_0x4d291c + 1];
                        _0x1d199f.y2 = _0x3bbbb9[_0x4d291c + 2];
                        _0x1d199f.x3 = _0x1d199f.x2 + (_0x1d199f.x2 - _0x1d199f.oldPos.x2);
                        _0x1d199f.y3 = _0x1d199f.y2 + (_0x1d199f.y2 - _0x1d199f.oldPos.y2);
                        _0x1d199f.d1 = _0x1d199f.d2 === undefined ? _0x3bbbb9[_0x4d291c + 3] : _0x1d199f.d2;
                        _0x1d199f.d2 = _0x3bbbb9[_0x4d291c + 3];
                        _0x1d199f.dt = 0;
                        _0x1d199f.buildIndex = _0x3bbbb9[_0x4d291c + 4];
                        _0x1d199f.weaponIndex = _0x3bbbb9[_0x4d291c + 5];
                        _0x1d199f.weaponVariant = _0x3bbbb9[_0x4d291c + 6];
                        _0x1d199f.team = _0x3bbbb9[_0x4d291c + 7];
                        _0x1d199f.isLeader = _0x3bbbb9[_0x4d291c + 8];
                        _0x1d199f.oldSkinIndex = _0x1d199f.skinIndex;
                        _0x1d199f.oldTailIndex = _0x1d199f.tailIndex;
                        _0x1d199f.skinIndex = _0x3bbbb9[_0x4d291c + 9];
                        _0x1d199f.tailIndex = _0x3bbbb9[_0x4d291c + 10];
                        _0x1d199f.iconIndex = _0x3bbbb9[_0x4d291c + 11];
                        _0x1d199f.zIndex = _0x3bbbb9[_0x4d291c + 12];
                        _0x1d199f.visible = true;
                        _0x1d199f.update(_0x39dcdf.tickSpeed);
                        _0x1d199f.dist2 = _0x1b05b9.getDist(_0x1d199f, _0x40ec6a, 2, 2);
                        _0x1d199f.aim2 = _0x1b05b9.getDirect(_0x1d199f, _0x40ec6a, 2, 2);
                        _0x1d199f.dist3 = _0x1b05b9.getDist(_0x1d199f, _0x40ec6a, 3, 3);
                        _0x1d199f.aim3 = _0x1b05b9.getDirect(_0x1d199f, _0x40ec6a, 3, 3);
                        _0x1d199f.damageThreat = 0;
                        if (_0x1d199f.skinIndex == 45 && _0x1d199f.shameTimer <= 0) {
                            _0x1d199f.addShameTimer();
                        }
                        if (_0x1d199f.oldSkinIndex == 45 && _0x1d199f.skinIndex != 45) {
                            _0x1d199f.shameTimer = 0;
                            _0x1d199f.shameCount = 0;
                            if (_0x1d199f == _0x40ec6a) {
                                _0x4c0d3f();
                            }
                        }
                        _0x30deb5 = _0x1d199f;
                        if (_0x1d199f == _0x40ec6a) {
                            if (_0x207b6e.length) {
                                _0x207b6e.forEach(_0x40e8a6 => {
                                    _0x40e8a6.onNear = false;
                                    if (_0x40e8a6.active) {
                                        if (!_0x40e8a6.onNear && _0x1b05b9.getDist(_0x40e8a6, _0x1d199f, 0, 2) <= _0x40e8a6.scale + _0x4e0368.weapons[_0x1d199f.weapons[0]].range) {
                                            _0x40e8a6.onNear = true;
                                        }
                                        if (_0x40e8a6.isItem && _0x40e8a6.owner) {
                                            if (!_0x40e8a6.pps && _0x1d199f.sid == _0x40e8a6.owner.sid && _0x1b05b9.getDist(_0x40e8a6, _0x1d199f, 0, 2) > (parseInt(getEl("breakRange").value) || 0) && !_0x40e8a6.breakObj && ![13, 14, 20].includes(_0x40e8a6.id)) {
                                                _0x40e8a6.breakObj = true;
                                                _0x14dce3.push({
                                                    x: _0x40e8a6.x,
                                                    y: _0x40e8a6.y,
                                                    sid: _0x40e8a6.sid
                                                });
                                            }
                                        }
                                    }
                                });
                                let _0x5b4ba8 = _0x207b6e.filter(_0x86d54 => _0x86d54.trap && _0x86d54.active && _0x1b05b9.getDist(_0x86d54, _0x1d199f, 0, 2) <= _0x1d199f.scale + _0x86d54.getScale() + 5 && !_0x86d54.isTeamObject(_0x1d199f)).sort(function(_0x3dbeef, _0x1fe609) {
                                    return _0x1b05b9.getDist(_0x3dbeef, _0x1d199f, 0, 2) - _0x1b05b9.getDist(_0x1fe609, _0x1d199f, 0, 2);
                                })[0];
                                if (_0x5b4ba8) {
                                    _0x3973f5.dist = _0x1b05b9.getDist(_0x5b4ba8, _0x1d199f, 0, 2);
                                    _0x3973f5.aim = _0x1b05b9.getDirect(_0x5b4ba8, _0x1d199f, 0, 2);
                                    if (!_0x3973f5.inTrap) {
                                        _0x3973f5.protect(_0x3973f5.aim);
                                    }
                                    _0x3973f5.inTrap = true;
                                    _0x3973f5.info = _0x5b4ba8;
                                } else {
                                    _0x3973f5.inTrap = false;
                                    _0x3973f5.info = {};
                                }
                            } else {
                                _0x3973f5.inTrap = false;
                            }
                        }
                        if (_0x1d199f.weaponIndex < 9) {
                            _0x1d199f.primaryIndex = _0x1d199f.weaponIndex;
                            _0x1d199f.primaryVariant = _0x1d199f.weaponVariant;
                        } else if (_0x1d199f.weaponIndex > 8) {
                            _0x1d199f.secondaryIndex = _0x1d199f.weaponIndex;
                            _0x1d199f.secondaryVariant = _0x1d199f.weaponVariant;
                        }
                    }
                    _0x4d291c += 13;
                }
                if (_0x3f1ecd.length) {
                    _0x3f1ecd.forEach(_0x20b711 => {
                        _0x20b711();
                    });
                    _0x3f1ecd = [];
                }
                if (!_0x31692a) {
                    _0x8e264e += 0.0001;
                } else if (_0x31692a) {
                    if (_0x8e264e < 0.35) {
                        _0x31692a = false;
                    }
                    _0x8e264e -= 0.00015;
                }
                if (_0x8e264e > 0.55) {
                    _0x31692a = true;
                }
                if (_0x9ad12d.length) {
                    _0x9ad12d.forEach(_0x37206f => {
                        _0x390b3c(..._0x37206f);
                    });
                    _0x9ad12d = [];
                }
                if (_0x29f096.stack.length) {
                    let _0x1873d7 = 0;
                    let _0x1f04bb = 0;
                    let _0x1fba52 = {
                        x: null,
                        y: null
                    };
                    let _0x33e02e = {
                        x: null,
                        y: null
                    };
                    _0x29f096.stack.forEach(_0x5171b2 => {
                        if (_0x5171b2.value >= 0) {
                            if (_0x1873d7 == 0) {
                                _0x1fba52 = {
                                    x: _0x5171b2.x,
                                    y: _0x5171b2.y
                                };
                            }
                            _0x1873d7 += Math.abs(_0x5171b2.value);
                        } else {
                            if (_0x1f04bb == 0) {
                                _0x33e02e = {
                                    x: _0x5171b2.x,
                                    y: _0x5171b2.y
                                };
                            }
                            _0x1f04bb += Math.abs(_0x5171b2.value);
                        }
                    });
                    if (_0x1f04bb > 0) {
                        _0x29f096.showText(_0x33e02e.x, _0x33e02e.y, Math.max(43, Math.min(50, _0x1f04bb)), 0.18, 500, _0x1f04bb, healTextColor);
                    }
                    if (_0x1873d7 > 0) {
                        _0x29f096.showText(_0x1fba52.x, _0x1fba52.y, Math.max(43, Math.min(50, _0x1873d7)), 0.18, 500, _0x1873d7, damageTextColor);
                    }
                    _0x29f096.stack = [];
                }
                if (_0x9ad12d.length) {
                    _0x9ad12d.forEach(_0x4d9a03 => {
                        _0x390b3c(..._0x4d9a03);
                    });
                    _0x9ad12d = [];
                }
                for (let _0x843d34 = 0; _0x843d34 < _0x3bbbb9.length;) {
                    _0x1d199f = _0x44509b(_0x3bbbb9[_0x843d34]);
                    if (_0x1d199f) {
                        if (!_0x1d199f.isTeam(_0x40ec6a)) {
                            _0x4d42b6.push(_0x1d199f);
                            if (_0x1d199f.dist2 <= _0x4e0368.weapons[_0x1d199f.primaryIndex == undefined ? 5 : _0x1d199f.primaryIndex].range + _0x40ec6a.scale * 2) {
                                _0x89b1ee.push(_0x1d199f);
                            }
                        }
                        _0x1d199f.manageReload();
                        if (_0x1d199f != _0x40ec6a) {
                            _0x1d199f.addDamageThreat(_0x40ec6a);
                        }
                    }
                    _0x843d34 += 13;
                }
                if (_0x40ec6a && _0x40ec6a.alive) {
                    if (_0x4d42b6.length) {
                        if (_0x40ec6a && _0x40ec6a.alive) {
                            _0xc689cc = _0x3e684c(_0x40ec6a, _0x4e0368.list[_0x40ec6a.items[2]]);
                            _0x38b838 = _0x40ec6a.items[4] == 15 ? _0x3e684c(_0x40ec6a, _0x4e0368.list[_0x40ec6a.items[4]]) : [];
                        }
                        _0x5f501e = _0x4d42b6.sort(function(_0x6232ae, _0xd29138) {
                            return _0x6232ae.dist2 - _0xd29138.dist2;
                        })[0];
                    } else {}
                    if (_0x1dff6e.placementIndicator.enabled && _0x5f501e.dist2 <= 255 && _0x40ec6a.shameCount < 5) {
                        _0x199e4d(0, _0x57bc8e());
                    }
                    if (_0x39dcdf.tickQueue[_0x39dcdf.tick]) {
                        _0x39dcdf.tickQueue[_0x39dcdf.tick].forEach(_0x1ce745 => {
                            _0x1ce745();
                        });
                        _0x39dcdf.tickQueue[_0x39dcdf.tick] = null;
                    }
                    if (_0x33becd.length) {
                        _0x33becd.forEach(_0x19b819 => {
                            let _0x5d1d69 = _0x19b819[0];
                            let _0x35de5a = _0x19b819[1];
                            let _0x11f17f = _0x19b819[2];
                            _0x1d199f = _0x44509b(_0x5d1d69);
                            let _0x1e6917 = false;
                            if (_0x1d199f && _0x1d199f.health <= 0) {
                                if (!_0x1d199f.death) {
                                    _0x1d199f.death = true;
                                    if (_0x1d199f != _0x40ec6a) {
                                        chchch(_0x1d199f.name + " has died", "red", "", "red");
                                    }
                                    _0x5b83c4(_0x1d199f);
                                }
                            }
                            if (_0x1d199f == _0x40ec6a) {
                                if (_0x1d199f.skinIndex == 7 && (_0x11f17f == 5 || _0x1d199f.latestTail == 13 && _0x11f17f == 2)) {
                                    if (_0x541fa4.reSync) {
                                        _0x541fa4.reSync = false;
                                        _0x1d199f.setBullTick = true;
                                    }
                                    _0x1e6917 = true;
                                }
                                if (_0x54d918) {
                                    let _0x137315 = _0x4dd45f(_0x11f17f);
                                    let _0x200e66 = [0.25, 0.45].map(_0x49ef99 => _0x49ef99 * _0x4e0368.weapons[_0x40ec6a.weapons[0]].dmg * _0x4401b0());
                                    let _0x356f6f = !_0x1e6917 && _0x200e66.includes(_0x11f17f);
                                    let _0x39e6b9 = 140 - window.ping;
                                    let _0x1fff75 = function(_0x121633) {
                                        setTimeout(() => {
                                            _0x4c0d3f();
                                        }, _0x121633);
                                    };
                                    if (_0x11f17f >= (_0x356f6f ? 8 : 20) && _0x1d199f.damageThreat >= 25 && _0x39dcdf.tick - _0x1d199f.antiTimer > 1) {
                                        _0x1d199f.canEmpAnti = true;
                                        _0x1d199f.antiTimer = _0x39dcdf.tick;
                                        let _0x2dca71 = 5;
                                        if (_0x1d199f.shameCount < _0x2dca71) {
                                            _0x4c0d3f();
                                        } else {
                                            _0x1fff75(_0x39e6b9);
                                        }
                                    } else {
                                        _0x1fff75(_0x39e6b9);
                                    }
                                    if (_0x11f17f >= 20 && _0x40ec6a.skinIndex == 11) {
                                        _0x53f820.canCounter = true;
                                    }
                                }
                            } else if (!_0x1d199f.setPoisonTick && (_0x1d199f.damaged == 5 || _0x1d199f.latestTail == 13 && _0x1d199f.damaged == 2)) {
                                _0x1d199f.setPoisonTick = true;
                            }
                        });
                        _0x33becd = [];
                    }
                    _0x5795c8.forEach(_0x10bc6c => {
                        if (!_0x10bc6c.visible && _0x40ec6a != _0x10bc6c) {
                            _0x10bc6c.reloads = {
                                0: 0,
                                1: 0,
                                2: 0,
                                3: 0,
                                4: 0,
                                5: 0,
                                6: 0,
                                7: 0,
                                8: 0,
                                9: 0,
                                10: 0,
                                11: 0,
                                12: 0,
                                13: 0,
                                14: 0,
                                15: 0,
                                53: 0
                            };
                        }
                        if (_0x10bc6c.setBullTick) {
                            _0x10bc6c.bullTimer = 0;
                        }
                        if (_0x10bc6c.setPoisonTick) {
                            _0x10bc6c.poisonTimer = 0;
                        }
                        _0x10bc6c.updateTimer();
                    });
                    if (_0x54d918) {
                        if (_0x4d42b6.length) {
                            if (_0x40ec6a.canEmpAnti) {
                                _0x40ec6a.canEmpAnti = false;
                                if (_0x5f501e.dist2 <= 300 && !_0x541fa4.safePrimary(_0x5f501e) && !_0x541fa4.safeSecondary(_0x5f501e)) {
                                    if (_0x5f501e.reloads[53] == 0) {
                                        _0x40ec6a.empAnti = true;
                                        _0x40ec6a.soldierAnti = false;
                                    } else {
                                        _0x40ec6a.empAnti = false;
                                        _0x40ec6a.soldierAnti = true;
                                    }
                                }
                            }
                            let _0x365987 = _0x207b6e.filter(_0x14f9c8 => _0x14f9c8.dmg && _0x14f9c8.active && _0x14f9c8.isTeamObject(_0x40ec6a) && _0x1b05b9.getDist(_0x14f9c8, _0x5f501e, 0, 3) <= _0x14f9c8.scale + _0x5f501e.scale).sort(function(_0x3398c7, _0x4c9a90) {
                                return _0x1b05b9.getDist(_0x3398c7, _0x5f501e, 0, 2) - _0x1b05b9.getDist(_0x4c9a90, _0x5f501e, 0, 2);
                            })[0];
                            if (_0x365987) {
                                if (_0x5f501e.dist2 <= _0x4e0368.weapons[_0x40ec6a.weapons[0]].range + _0x40ec6a.scale * 1.8 && _0x42ddbd.predictTick) {
                                    _0x53f820.canSpikeTick = true;
                                    _0x53f820.syncHit = true;
                                    if (_0x42ddbd.revTick && _0x40ec6a.weapons[1] == 15 && _0x40ec6a.reloads[53] == 0 && _0x53f820.perfCheck(_0x40ec6a, _0x5f501e)) {
                                        _0x53f820.revTick = true;
                                    }
                                }
                            }
                            let _0x1afb7f = _0x207b6e.filter(_0x58b61a => _0x58b61a.dmg && _0x58b61a.active && !_0x58b61a.isTeamObject(_0x40ec6a) && _0x1b05b9.getDist(_0x58b61a, _0x40ec6a, 0, 3) < _0x58b61a.scale + _0x40ec6a.scale).sort(function(_0x75a523, _0x46e2b6) {
                                return _0x1b05b9.getDist(_0x75a523, _0x40ec6a, 0, 2) - _0x1b05b9.getDist(_0x46e2b6, _0x40ec6a, 0, 2);
                            })[0];
                            if (_0x1afb7f && !_0x3973f5.inTrap) {
                                if (_0x5f501e.dist2 <= _0x4e0368.weapons[5].range + _0x5f501e.scale * 1.8) {
                                    _0x541fa4.anti0Tick = 1;
                                }
                            }
                        }
                        if ((_0x4655d8 ? true : (_0x40ec6a.checkCanInsta(true) >= 100 ? _0x40ec6a.checkCanInsta(true) : _0x40ec6a.checkCanInsta(false)) >= (_0x40ec6a.weapons[1] == 10 ? 95 : 100)) && _0x5f501e.dist2 <= _0x4e0368.weapons[_0x40ec6a.weapons[1] == 10 ? _0x40ec6a.weapons[1] : _0x40ec6a.weapons[0]].range + _0x5f501e.scale * 1.8 && (_0x53f820.wait || _0x4655d8 && Math.floor(Math.random() * 5) == 0) && !_0x53f820.isTrue && !_0x541fa4.waitHit && _0x40ec6a.reloads[_0x40ec6a.weapons[0]] == 0 && _0x40ec6a.reloads[_0x40ec6a.weapons[1]] == 0 && (_0x4655d8 ? true : getEl("instaType").value == "oneShot" ? _0x40ec6a.reloads[53] <= (_0x40ec6a.weapons[1] == 10 ? 0 : _0x39dcdf.tickRate) : true) && _0x53f820.perfCheck(_0x40ec6a, _0x5f501e)) {
                            if (_0x40ec6a.checkCanInsta(true) >= 100) {
                                _0x53f820.nobull = _0x4655d8 ? false : _0x53f820.canSpikeTick ? false : true;
                            } else {
                                _0x53f820.nobull = false;
                            }
                            _0x53f820.can = true;
                        } else {
                            _0x53f820.can = false;
                        }
                        if (_0x2b3df3.q) {
                            _0x199e4d(0, _0x57bc8e());
                        }
                        if (_0x2b3df3.f) {
                            _0x199e4d(4, _0x23139a());
                        }
                        if (_0x2b3df3.v) {
                            _0x199e4d(2, _0x23139a());
                        }
                        if (_0x2b3df3.y) {
                            _0x199e4d(5, _0x23139a());
                        }
                        if (_0x2b3df3.h) {
                            _0x199e4d(_0x40ec6a.getItemType(22), _0x23139a());
                        }
                        if (_0x2b3df3.n) {
                            _0x199e4d(3, _0x23139a());
                        }
                        if (_0x39dcdf.tick % 3 == 0) {
                            if (_0x241376.place) {
                                let _0x8f0255 = 1.25;
                                for (let _0x2f2a6d = -_0x8f0255; _0x2f2a6d <= _0x8f0255; _0x2f2a6d += _0x8f0255) {
                                    _0x48ac11(3, _0x1b05b9.getDirect(_0x40ec6a.oldPos, _0x40ec6a, 2, 2) + _0x2f2a6d);
                                }
                            } else if (_0x241376.placeSpawnPads) {
                                for (let _0x10556c = 0; _0x10556c < Math.PI * 2; _0x10556c += Math.PI / 2) {
                                    _0x48ac11(_0x40ec6a.getItemType(20), _0x1b05b9.getDirect(_0x40ec6a.oldPos, _0x40ec6a, 2, 2) + _0x10556c);
                                }
                            }
                        }
                        if (_0x53f820.can) {
                            _0x53f820.changeType(_0x40ec6a.weapons[1] == 10 ? "rev" : _0x53f820.nobull ? "nobull" : "normal");
                        }
                        if (_0x53f820.canCounter) {
                            _0x53f820.canCounter = false;
                            if (_0x40ec6a.reloads[_0x40ec6a.weapons[0]] == 0 && !_0x53f820.isTrue) {
                                _0x53f820.counterType();
                            }
                        }
                        if (_0x53f820.canSpikeTick) {
                            _0x53f820.canSpikeTick = false;
                            if (_0x53f820.revTick) {
                                _0x53f820.revTick = false;
                                if ([1, 2, 3, 4, 5, 6].includes(_0x40ec6a.weapons[0]) && _0x40ec6a.reloads[_0x40ec6a.weapons[1]] == 0 && !_0x53f820.isTrue) {
                                    _0x53f820.changeType("rev");
                                }
                            } else if ([1, 2, 3, 4, 5, 6].includes(_0x40ec6a.weapons[0]) && _0x40ec6a.reloads[_0x40ec6a.weapons[0]] == 0 && !_0x53f820.isTrue) {
                                _0x53f820.spikeTickType();
                                if (_0x53f820.syncHit) {}
                            }
                        }
                        if (!_0x21ff46.middle && (_0x21ff46.left || _0x21ff46.right) && !_0x53f820.isTrue) {
                            if (_0x40ec6a.weaponIndex != (_0x21ff46.right && _0x40ec6a.weapons[1] == 10 ? _0x40ec6a.weapons[1] : _0x40ec6a.weapons[0]) || _0x40ec6a.buildIndex > -1) {
                                _0x3789ff(_0x21ff46.right && _0x40ec6a.weapons[1] == 10 ? _0x40ec6a.weapons[1] : _0x40ec6a.weapons[0]);
                            }
                            if (_0x40ec6a.reloads[_0x21ff46.right && _0x40ec6a.weapons[1] == 10 ? _0x40ec6a.weapons[1] : _0x40ec6a.weapons[0]] == 0 && !_0x541fa4.waitHit) {
                                _0x24db7();
                                _0x541fa4.waitHit = 1;
                                _0x39dcdf.tickBase(() => {
                                    _0x24db7();
                                    _0x541fa4.waitHit = 0;
                                }, 1);
                            }
                        }
                        if (_0x4655d8 && !_0x21ff46.left && !_0x21ff46.right && !_0x53f820.isTrue && _0x5f501e.dist2 <= _0x4e0368.weapons[_0x40ec6a.weapons[0]].range + _0x5f501e.scale * 1.8 && !_0x3973f5.inTrap) {
                            if (_0x40ec6a.weaponIndex != _0x40ec6a.weapons[0] || _0x40ec6a.buildIndex > -1) {
                                _0x3789ff(_0x40ec6a.weapons[0]);
                            }
                            if (_0x40ec6a.reloads[_0x40ec6a.weapons[0]] == 0 && !_0x541fa4.waitHit) {
                                _0x24db7();
                                _0x541fa4.waitHit = 1;
                                _0x39dcdf.tickBase(() => {
                                    _0x24db7();
                                    _0x541fa4.waitHit = 0;
                                }, 1);
                            }
                        }
                        if (_0x3973f5.inTrap) {
                            if (!_0x21ff46.left && !_0x21ff46.right && !_0x53f820.isTrue) {
                                if (_0x40ec6a.weaponIndex != (_0x3973f5.notFast() ? _0x40ec6a.weapons[1] : _0x40ec6a.weapons[0]) || _0x40ec6a.buildIndex > -1) {
                                    _0x3789ff(_0x3973f5.notFast() ? _0x40ec6a.weapons[1] : _0x40ec6a.weapons[0]);
                                }
                                if (_0x40ec6a.reloads[_0x3973f5.notFast() ? _0x40ec6a.weapons[1] : _0x40ec6a.weapons[0]] == 0 && !_0x541fa4.waitHit) {
                                    _0x24db7();
                                    _0x541fa4.waitHit = 1;
                                    _0x39dcdf.tickBase(() => {
                                        _0x24db7();
                                        _0x541fa4.waitHit = 0;
                                    }, 1);
                                }
                            }
                        }
                        if (_0x21ff46.middle && !_0x3973f5.inTrap) {
                            if (!_0x53f820.isTrue && _0x40ec6a.reloads[_0x40ec6a.weapons[1]] == 0) {
                                if (_0x541fa4.ageInsta && _0x40ec6a.weapons[0] != 4 && _0x40ec6a.weapons[1] == 9 && _0x40ec6a.age >= 9 && _0x4d42b6.length) {
                                    _0x53f820.bowMovement();
                                } else {
                                    _0x53f820.rangeType();
                                }
                            }
                        }
                        if (_0x2b3df3.t && !_0x3973f5.inTrap) {
                            if (!_0x53f820.isTrue && _0x40ec6a.reloads[_0x40ec6a.weapons[0]] == 0 && (_0x40ec6a.weapons[1] == 15 ? _0x40ec6a.reloads[_0x40ec6a.weapons[1]] == 0 : true) && (_0x40ec6a.weapons[0] == 5 || _0x40ec6a.weapons[0] == 4 && _0x40ec6a.weapons[1] == 15)) {
                                _0x53f820[_0x40ec6a.weapons[0] == 4 && _0x40ec6a.weapons[1] == 15 ? "kmTickMovement" : "tickMovement"]();
                            }
                        }
                        if (_0x2b3df3["."] && !_0x3973f5.inTrap) {
                            if (!_0x53f820.isTrue && _0x40ec6a.reloads[_0x40ec6a.weapons[0]] == 0 && ([9, 12, 13, 15].includes(_0x40ec6a.weapons[1]) ? _0x40ec6a.reloads[_0x40ec6a.weapons[1]] == 0 : true)) {
                                _0x53f820.boostTickMovement();
                            }
                        }
                        if (_0x40ec6a.weapons[1] && !_0x21ff46.left && !_0x21ff46.right && !_0x3973f5.inTrap && !_0x53f820.isTrue && (!_0x4655d8 || _0x5f501e.dist2 > _0x4e0368.weapons[_0x40ec6a.weapons[0]].range + _0x5f501e.scale * 1.8)) {
                            if (_0x40ec6a.reloads[_0x40ec6a.weapons[0]] == 0 && _0x40ec6a.reloads[_0x40ec6a.weapons[1]] == 0) {
                                if (!_0x541fa4.reloaded) {
                                    _0x541fa4.reloaded = true;
                                    let _0x5b69d8 = _0x4e0368.weapons[_0x40ec6a.weapons[0]].spdMult < _0x4e0368.weapons[_0x40ec6a.weapons[1]].spdMult ? 1 : 0;
                                    if (_0x40ec6a.weaponIndex != _0x40ec6a.weapons[_0x5b69d8] || _0x40ec6a.buildIndex > -1) {
                                        _0x3789ff(_0x40ec6a.weapons[_0x5b69d8]);
                                    }
                                }
                            } else {
                                _0x541fa4.reloaded = false;
                                if (_0x40ec6a.reloads[_0x40ec6a.weapons[0]] > 0) {
                                    if (_0x40ec6a.weaponIndex != _0x40ec6a.weapons[0] || _0x40ec6a.buildIndex > -1) {
                                        _0x3789ff(_0x40ec6a.weapons[0]);
                                    }
                                } else if (_0x40ec6a.reloads[_0x40ec6a.weapons[0]] == 0 && _0x40ec6a.reloads[_0x40ec6a.weapons[1]] > 0) {
                                    if (_0x40ec6a.weaponIndex != _0x40ec6a.weapons[1] || _0x40ec6a.buildIndex > -1) {
                                        _0x3789ff(_0x40ec6a.weapons[1]);
                                    }
                                }
                            }
                        }
                        if (!_0x53f820.isTrue && !_0x3973f5.inTrap && !_0x3973f5.replaced) {
                            _0x3973f5.autoPlace();
                        }
                        if (!_0x2b3df3.q && !_0x2b3df3.f && !_0x2b3df3.v && !_0x2b3df3.h && !_0x2b3df3.n) {
                            _0x3a2c8f("D", _0x57bc8e());
                        }
                        let _0x2da0df = false;
                        let _0x1e49d1 = false;
                        let _0x56b060 = function() {
                            if (_0x541fa4.anti0Tick > 0 && !_0x2da0df) {
                                _0x31c88a(6, 0);
                            } else if (_0x21ff46.left || _0x21ff46.right || _0x2da0df) {
                                if (_0x40ec6a.shameCount > 0 && (_0x39dcdf.tick - _0x40ec6a.bullTick) % _0x18564b.serverUpdateRate === 0 && _0x40ec6a.skinIndex != 45 || _0x541fa4.reSync) {
                                    _0x31c88a(7, 0);
                                } else if (_0x21ff46.left) {
                                    _0x31c88a(_0x40ec6a.reloads[_0x40ec6a.weapons[0]] == 0 ? _0x1dff6e.autoGrind.enabled ? 40 : 7 : _0x40ec6a.empAnti ? 22 : _0x40ec6a.soldierAnti ? 6 : false && _0x5f501e.antiBull > 0 ? 11 : _0x5f501e.dist2 <= 300 ? false && _0x5f501e.reloads[_0x5f501e.primaryIndex] == 0 ? 11 : 6 : _0x12fba9(1, 1), 0);
                                } else if (_0x21ff46.right) {
                                    _0x31c88a(_0x40ec6a.reloads[_0x21ff46.right && _0x40ec6a.weapons[1] == 10 ? _0x40ec6a.weapons[1] : _0x40ec6a.weapons[0]] == 0 ? 40 : _0x40ec6a.empAnti ? 22 : _0x40ec6a.soldierAnti ? 6 : false && _0x5f501e.antiBull > 0 ? 11 : _0x5f501e.dist2 <= 300 ? false && _0x5f501e.reloads[_0x5f501e.primaryIndex] == 0 ? 11 : 6 : _0x12fba9(1, 1), 0);
                                } else if (_0x2da0df) {
                                    if (_0x1e49d1) {
                                        _0x31c88a(55, 0);
                                    } else {
                                        _0x31c88a(7, 0);
                                    }
                                }
                            } else if (_0x3973f5.inTrap) {
                                if (_0x3973f5.info.health <= _0x4e0368.weapons[_0x40ec6a.weaponIndex].dmg ? false : _0x40ec6a.reloads[_0x40ec6a.weapons[1] == 10 ? _0x40ec6a.weapons[1] : _0x40ec6a.weapons[0]] == 0) {
                                    _0x31c88a(40, 0);
                                } else if (_0x40ec6a.shameCount > 0 && (_0x39dcdf.tick - _0x40ec6a.bullTick) % _0x18564b.serverUpdateRate === 0 && _0x40ec6a.skinIndex != 45 || _0x541fa4.reSync) {
                                    _0x31c88a(7, 0);
                                } else {
                                    _0x31c88a(_0x40ec6a.empAnti || _0x5f501e.dist2 > 300 || !_0x4d42b6.length ? 22 : 6, 0);
                                }
                            } else if (_0x40ec6a.empAnti || _0x40ec6a.soldierAnti && !_0x2da0df) {
                                _0x31c88a(_0x40ec6a.empAnti ? 22 : 6, 0);
                            } else if (_0x40ec6a.shameCount > 0 && (_0x39dcdf.tick - _0x40ec6a.bullTick) % _0x18564b.serverUpdateRate === 0 && _0x40ec6a.skinIndex != 45 || _0x541fa4.reSync) {
                                _0x31c88a(7, 0);
                            } else if (_0x5f501e.dist2 <= 300 && !_0x2da0df) {
                                _0x31c88a(false && _0x5f501e.antiBull > 0 ? 11 : false && _0x5f501e.reloads[_0x5f501e.primaryIndex] == 0 ? 11 : 6, 0);
                            } else {
                                _0x12fba9(1);
                            }
                        };
                        let _0x335cd1 = function() {
                            if (_0x21ff46.left) {
                                if (_0x40ec6a.tailIndex == 11) {
                                    _0x31c88a(0, 1);
                                }
                                _0x31c88a(18, 1);
                            } else if (_0x21ff46.right) {
                                _0x31c88a(11, 1);
                            } else if (_0x3973f5.inTrap) {
                                _0x31c88a(_0x5f501e.dist3 <= _0x4e0368.weapons[_0x40ec6a.weaponIndex].range + _0x40ec6a.scale * 1.8 && _0x40ec6a.reloads[_0x40ec6a.weaponIndex] == 0 ? 21 : 11, 1);
                            } else if (_0x2da0df) {
                                _0x31c88a(18, 1);
                            } else {
                                _0x31c88a(11, 1);
                            }
                        };
                        if (_0x1c0e6f.style.display != "block" && !_0x53f820.isTrue && !_0x53f820.ticking) {
                            _0x56b060();
                            _0x335cd1();
                        }
                        if (_0x42ddbd.autoPush && _0x4d42b6.length && !_0x3973f5.inTrap && !_0x53f820.ticking) {
                            _0x280a1b();
                        } else if (_0x541fa4.autoPush) {
                            _0x541fa4.autoPush = false;
                            _0x3a2c8f("a", _0x5232f7 || undefined, 1);
                        }
                        if (!_0x541fa4.autoPush && _0x158fb2.active) {
                            _0x4abd56();
                        }
                        _0x53f820.ticking &&= false;
                        _0x53f820.syncHit &&= false;
                        _0x40ec6a.empAnti &&= false;
                        _0x40ec6a.soldierAnti &&= false;
                        if (_0x541fa4.anti0Tick > 0) {
                            _0x541fa4.anti0Tick--;
                        }
                        _0x3973f5.replaced &&= false;
                        _0x3973f5.antiTrapped &&= false;
                    }
                }
                if (_0x586579.length) {
                    _0x586579.forEach(_0x570962 => {
                        if (true) {
                            _0x570962[0].ssend("player", _0x40ec6a, _0x5f501e, _0x2777e8);
                        }
                    });
                }
            }

            function _0x2fdfb1(_0x4d0095) {
                _0x144733 = _0x4d0095;
                return;
                _0x1b05b9.removeAllChildren(_0x4293d7);
                let _0x53ca73 = 1;
                for (let _0x108dbf = 0; _0x108dbf < _0x4d0095.length; _0x108dbf += 3) {
                    (function(_0x524e8b) {
                        _0x1b05b9.generateElement({
                            class: "leaderHolder",
                            parent: _0x4293d7,
                            children: [_0x1b05b9.generateElement({
                                class: "leaderboardItem",
                                style: "color:" + (_0x4d0095[_0x524e8b] == _0x453339 ? "#fff" : "rgba(255,255,255,0.6)"),
                                text: _0x53ca73 + ". " + (_0x4d0095[_0x524e8b + 1] != "" ? _0x4d0095[_0x524e8b + 1] : "unknown")
                            }), _0x1b05b9.generateElement({
                                class: "leaderScore",
                                text: _0x1b05b9.sFormat(_0x4d0095[_0x524e8b + 2]) || "0"
                            })]
                        });
                    })(_0x108dbf);
                    _0x53ca73++;
                }
            }

            function _0x5cc5e8(_0xaa656b) {
                for (let _0x2813ca = 0; _0x2813ca < _0xaa656b.length;) {
                    _0x18b804.add(_0xaa656b[_0x2813ca], _0xaa656b[_0x2813ca + 1], _0xaa656b[_0x2813ca + 2], _0xaa656b[_0x2813ca + 3], _0xaa656b[_0x2813ca + 4], _0xaa656b[_0x2813ca + 5], _0x4e0368.list[_0xaa656b[_0x2813ca + 6]], true, _0xaa656b[_0x2813ca + 7] >= 0 ? {
                        sid: _0xaa656b[_0x2813ca + 7]
                    } : null);
                    _0x2813ca += 8;
                }
            }

            function _0x199cd5(_0x330655) {
                for (let _0x46c011 = 0; _0x46c011 < _0x45aa6e.length; ++_0x46c011) {
                    _0x45aa6e[_0x46c011].forcePos = !_0x45aa6e[_0x46c011].visible;
                    _0x45aa6e[_0x46c011].visible = false;
                }
                if (_0x330655) {
                    let _0x349fa8 = performance.now();
                    for (let _0x48e1b1 = 0; _0x48e1b1 < _0x330655.length;) {
                        _0x1d199f = _0x2bc1dd(_0x330655[_0x48e1b1]);
                        if (_0x1d199f) {
                            _0x1d199f.index = _0x330655[_0x48e1b1 + 1];
                            _0x1d199f.t1 = _0x1d199f.t2 === undefined ? _0x349fa8 : _0x1d199f.t2;
                            _0x1d199f.t2 = _0x349fa8;
                            _0x1d199f.x1 = _0x1d199f.x;
                            _0x1d199f.y1 = _0x1d199f.y;
                            _0x1d199f.x2 = _0x330655[_0x48e1b1 + 2];
                            _0x1d199f.y2 = _0x330655[_0x48e1b1 + 3];
                            _0x1d199f.d1 = _0x1d199f.d2 === undefined ? _0x330655[_0x48e1b1 + 4] : _0x1d199f.d2;
                            _0x1d199f.d2 = _0x330655[_0x48e1b1 + 4];
                            _0x1d199f.health = _0x330655[_0x48e1b1 + 5];
                            _0x1d199f.dt = 0;
                            _0x1d199f.visible = true;
                        } else {
                            _0x1d199f = _0x30713c.spawn(_0x330655[_0x48e1b1 + 2], _0x330655[_0x48e1b1 + 3], _0x330655[_0x48e1b1 + 4], _0x330655[_0x48e1b1 + 1]);
                            _0x1d199f.x2 = _0x1d199f.x;
                            _0x1d199f.y2 = _0x1d199f.y;
                            _0x1d199f.d2 = _0x1d199f.dir;
                            _0x1d199f.health = _0x330655[_0x48e1b1 + 5];
                            if (!_0x30713c.aiTypes[_0x330655[_0x48e1b1 + 1]].name) {
                                _0x1d199f.name = _0x18564b.cowNames[_0x330655[_0x48e1b1 + 6]];
                            }
                            _0x1d199f.forcePos = true;
                            _0x1d199f.sid = _0x330655[_0x48e1b1];
                            _0x1d199f.visible = true;
                        }
                        _0x48e1b1 += 7;
                    }
                }
            }

            function _0x304256(_0x2379da) {
                _0x1d199f = _0x2bc1dd(_0x2379da);
                if (_0x1d199f) {
                    _0x1d199f.startAnim();
                }
            }

            function _0x37a667(_0x134645, _0x2ca57a, _0x49db4f) {
                _0x1d199f = _0x44509b(_0x134645);
                if (_0x1d199f) {
                    _0x1d199f.startAnim(_0x2ca57a, _0x49db4f);
                    _0x1d199f.gatherIndex = _0x49db4f;
                    _0x1d199f.gathering = 1;
                    if (_0x2ca57a) {
                        let _0x5bf697 = _0x18b804.hitObj;
                        _0x457926(() => {
                            setTimeout(() => {
                                if (_0x517116(_0x40ec6a, _0x4d42b6) <= 200) {
                                    _0x199e4d(2, _0x55c600(_0x5bf697, _0x40ec6a));
                                } else {
                                    _0x199e4d(4, _0x55c600(_0x5bf697, _0x40ec6a));
                                }
                            }, _0x4e0368.weapons[_0x49db4f].speed - window.pingTime);
                        }, 2);
                        _0x18b804.hitObj = [];
                        _0x39dcdf.tickBase(() => {
                            _0x1d199f = _0x44509b(_0x134645);
                            let _0x306fe2 = _0x4e0368.weapons[_0x49db4f].dmg * _0x18564b.weaponVariants[_0x1d199f[(_0x49db4f < 9 ? "prima" : "seconda") + "ryVariant"]].val * (_0x4e0368.weapons[_0x49db4f].sDmg || 1) * (_0x1d199f.skinIndex == 40 ? 3.3 : 1);
                            _0x5bf697.forEach(_0x6f1d58 => {
                                _0x6f1d58.healthMov = _0x6f1d58.health - _0x306fe2 / 2;
                                _0x6f1d58.health -= _0x306fe2;
                                let _0x2ae947;
                                let _0x1fa6f1;
                                let _0x3c2cbc;
                                let _0x4dff37 = (() => {
                                    const _0x55dbad = (_0x17cbbf, _0x769772) => {
                                        return Math.floor(Math.random() * (_0x769772 - _0x17cbbf + 1)) + _0x17cbbf;
                                    };
                                    _0x2ae947 = _0x55dbad(0, 360);
                                    _0x1fa6f1 = _0x55dbad(42, 98);
                                    _0x3c2cbc = _0x55dbad(40, 90);
                                })();
                            });
                        }, 1);
                    }
                }
            }

            function _0x4f9582(_0x16f1c4, _0x25c21f) {
                _0x1d199f = _0x5fb95d(_0x25c21f);
                if (_0x1d199f) {
                    _0x1d199f.xWiggle += _0x18564b.gatherWiggle * Math.cos(_0x16f1c4);
                    _0x1d199f.yWiggle += _0x18564b.gatherWiggle * Math.sin(_0x16f1c4);
                    if (_0x1d199f.health) {
                        _0x18b804.hitObj.push(_0x1d199f);
                    }
                }
            }

            function _0x4c29a9(_0x2fe987, _0x50fa75) {
                _0x1d199f = _0x5fb95d(_0x2fe987);
                if (_0x1d199f) {
                    if (_0x18564b.anotherVisual) {
                        _0x1d199f.lastDir = _0x50fa75;
                    } else {
                        _0x1d199f.dir = _0x50fa75;
                    }
                    _0x1d199f.xWiggle += _0x18564b.gatherWiggle * Math.cos(_0x50fa75 + Math.PI);
                    _0x1d199f.yWiggle += _0x18564b.gatherWiggle * Math.sin(_0x50fa75 + Math.PI);
                }
            }

            function _0x1af566() {
                const _0x59a21d = ["were slain...", "met their demise...", "life was extinguished...", "perished...", "were overwhelmed...", "were defeated...", "were vanquished...", "bit the dust...", "met a tragic end...", "were obliterated...", "met a gruesome fate...", "were eradicated...", "were annihilated...", "were crushed...", "were overwhelmed...", "were turned to ash...", "were reduced to rubble...", "were shattered...", "were disintegrated...", "were torn apart...", "were consumed by darkness...", "were consumed by the void...", "were consumed by the abyss...", "were consumed by chaos...", "were consumed by despair...", "were consumed by madness...", "were consumed by the unknown...", "were consumed by the shadows..."];
                return _0x59a21d[Math.floor(Math.random() * _0x59a21d.length)];
            }

            function _0x4aadb7(_0x170adc, _0x2c19c4, _0x2d4cb0) {
                if (_0x40ec6a) {
                    _0x40ec6a[_0x170adc] = _0x2c19c4;
                    if (_0x170adc == "points") {
                        if (_0x42ddbd.autoBuy) {
                            _0x3b9f7e.hat();
                            _0x3b9f7e.acc();
                        }
                    }
                }
            }

            function _0xe016b9(_0x4cc918, _0x122e8c) {
                if (_0x4cc918) {
                    if (_0x122e8c) {
                        _0x40ec6a.weapons = _0x4cc918;
                        _0x40ec6a.primaryIndex = _0x40ec6a.weapons[0];
                        _0x40ec6a.secondaryIndex = _0x40ec6a.weapons[1];
                        if (!_0x53f820.isTrue) {
                            _0x3789ff(_0x40ec6a.weapons[0]);
                        }
                    } else {
                        _0x40ec6a.items = _0x4cc918;
                    }
                }
                for (let _0x828367 = 0; _0x828367 < _0x4e0368.list.length; _0x828367++) {
                    let _0xa25139 = _0x4e0368.weapons.length + _0x828367;
                    getEl("actionBarItem" + _0xa25139).style.display = _0x40ec6a.items.indexOf(_0x4e0368.list[_0x828367].id) >= 0 ? "inline-block" : "none";
                }
                for (let _0x52e979 = 0; _0x52e979 < _0x4e0368.weapons.length; _0x52e979++) {
                    getEl("actionBarItem" + _0x52e979).style.display = _0x40ec6a.weapons[_0x4e0368.weapons[_0x52e979].type] == _0x4e0368.weapons[_0x52e979].id ? "inline-block" : "none";
                }
                let _0x3b9fe0 = _0x40ec6a.weapons[0] == 3 && _0x40ec6a.weapons[1] == 15;
                if (_0x3b9fe0) {
                    getEl("actionBarItem3").style.display = "none";
                    getEl("actionBarItem4").style.display = "inline-block";
                }
            }

            function _0x12f424(_0x5c0772, _0x612676, _0x4ec826, _0x5417a2, _0xd9ecc2, _0xd9952e, _0x3bf3ff, _0x4f20a7) {
                _0x1da04a.addProjectile(_0x5c0772, _0x612676, _0x4ec826, _0x5417a2, _0xd9ecc2, _0xd9952e, null, null, _0x3bf3ff, _0x2c7097).sid = _0x4f20a7;
                _0x9ad12d.push(Array.prototype.slice.call(arguments));
            }

            function _0x17b42d(_0x3bafdc, _0x2becab) {
                for (let _0x232fbf = 0; _0x232fbf < _0x40c6a3.length; ++_0x232fbf) {
                    if (_0x40c6a3[_0x232fbf].sid == _0x3bafdc) {
                        _0x40c6a3[_0x232fbf].range = _0x2becab;
                        let _0x5c9bb6 = _0x18b804.hitObj;
                        _0x18b804.hitObj = [];
                        _0x39dcdf.tickBase(() => {
                            let _0x544665 = _0x40c6a3[_0x232fbf].dmg;
                            _0x5c9bb6.forEach(_0x487275 => {
                                if (_0x487275.projDmg) {
                                    _0x487275.health -= _0x544665;
                                }
                            });
                        }, 1);
                    }
                }
            }

            function _0x559ae1(_0x192bfa, _0x3cacf4) {
                let _0x553b56 = _0x5adecb(_0x4efb57, _0x192bfa);
                if (_0x553b56) {}
            }

            function _0x476dfe(_0x22b16e, _0xe21a68) {
                if (_0x40ec6a) {
                    _0x40ec6a.team = _0x22b16e;
                    _0x40ec6a.isOwner = _0xe21a68;
                    if (_0x22b16e == null) {
                        _0x8b521c = [];
                    }
                }
            }

            function _0x2671ca(_0xecf664) {
                _0x8b521c = _0xecf664;
            }

            function _0x547bd3(_0x23883e, _0x2f4b28, _0x517770) {
                if (_0x517770) {
                    if (!_0x23883e) {
                        _0x40ec6a.tails[_0x2f4b28] = 1;
                    } else {
                        _0x40ec6a.latestTail = _0x2f4b28;
                    }
                } else if (!_0x23883e) {
                    _0x40ec6a.skins[_0x2f4b28] = 1;
                    if (_0x2f4b28 == 7) {
                        _0x541fa4.reSync = true;
                    }
                } else {
                    _0x40ec6a.latestSkin = _0x2f4b28;
                }
            }

            function _0x4df933(_0x390149, _0x3e4ca8) {
                let _0x17bd80 = _0x44509b(_0x390149);
                if (_0x17bd80) {
                    _0x3f8e1a(_0x17bd80.name + " {" + _0x17bd80.sid + "}", _0x3e4ca8, "white");
                    if (_0x18564b.anotherVisual) {
                        _0x45a189.push(new _0xe5c79f(_0x17bd80.x, _0x17bd80.y, _0x3e4ca8, _0x17bd80));
                    } else {
                        _0x17bd80.chatMessage = (_0xb3ad4a => {
                            let _0x404c43;
                            _0x17a9a9.forEach(_0x53ae04 => {
                                if (_0xb3ad4a.indexOf(_0x53ae04) > -1) {
                                    _0x404c43 = "";
                                    for (var _0x5826e1 = 0; _0x5826e1 < _0x53ae04.length; ++_0x5826e1) {
                                        _0x404c43 += _0x404c43.length ? "o" : "M";
                                    }
                                    var _0x5d4e9e = new RegExp(_0x53ae04, "g");
                                    _0xb3ad4a = _0xb3ad4a.replace(_0x5d4e9e, _0x404c43);
                                }
                            });
                            return _0xb3ad4a;
                        })(_0x3e4ca8);
                        _0x17bd80.chatCountdown = _0x18564b.chatCountdown;
                    }
                } else {
                    _0x3f8e1a("Anonymous {null}", _0x3e4ca8, "white");
                }
            }

            function _0x46ce32(_0x128ab5) {
                _0x48ba60 = _0x128ab5;
            }

            function _0x4c21f(_0x8908dc, _0x18ca32, _0x6aa7ac, _0x408c1d) {
                if (_0x18564b.anotherVisual) {
                    _0x29f096.stack.push({
                        x: _0x8908dc,
                        y: _0x18ca32,
                        value: _0x6aa7ac
                    });
                } else {
                    _0x29f096.showText(_0x8908dc, _0x18ca32, 50, 0.18, _0x4655d8 ? 500 : 1500, Math.abs(_0x6aa7ac), _0x6aa7ac >= 0 ? "#fff" : "#8ecc51");
                }
            }
            let _0x4efb57 = [];
            let _0x5a09af = {
                x: _0x1b05b9.randInt(35, 14365),
                y: _0x1b05b9.randInt(35, 14365)
            };
            setInterval(() => {
                _0x5a09af = {
                    x: _0x1b05b9.randInt(35, 14365),
                    y: _0x1b05b9.randInt(35, 14365)
                };
            }, 60000);
            class _0x31490f {
                constructor(_0x5911f7, _0x2b32f7, _0x1e000e, _0x44632f) {
                    this.id = _0x5911f7;
                    this.sid = _0x2b32f7;
                    this.team = null;
                    this.skinIndex = 0;
                    this.tailIndex = 0;
                    this.hitTime = 0;
                    this.iconIndex = 0;
                    this.enemy = [];
                    this.near = [];
                    this.dist2 = 0;
                    this.aim2 = 0;
                    this.tick = 0;
                    this.itemCounts = {};
                    this.latestSkin = 0;
                    this.latestTail = 0;
                    this.points = 0;
                    this.tails = {};
                    for (let _0x56b8fe = 0; _0x56b8fe < _0x44632f.length; ++_0x56b8fe) {
                        if (_0x44632f[_0x56b8fe].price <= 0) {
                            this.tails[_0x44632f[_0x56b8fe].id] = 1;
                        }
                    }
                    this.skins = {};
                    for (let _0x299089 = 0; _0x299089 < _0x1e000e.length; ++_0x299089) {
                        if (_0x1e000e[_0x299089].price <= 0) {
                            this.skins[_0x1e000e[_0x299089].id] = 1;
                        }
                    }
                    this.spawn = function(_0x3f6973) {
                        this.upgraded = 0;
                        this.enemy = [];
                        this.near = [];
                        this.active = true;
                        this.alive = true;
                        this.lockMove = false;
                        this.lockDir = false;
                        this.minimapCounter = 0;
                        this.chatCountdown = 0;
                        this.shameCount = 0;
                        this.shameTimer = 0;
                        this.sentTo = {};
                        this.gathering = 0;
                        this.autoGather = 0;
                        this.animTime = 0;
                        this.animSpeed = 0;
                        this.mouseState = 0;
                        this.buildIndex = -1;
                        this.weaponIndex = 0;
                        this.dmgOverTime = {};
                        this.noMovTimer = 0;
                        this.maxXP = 300;
                        this.XP = 0;
                        this.age = 1;
                        this.kills = 0;
                        this.upgrAge = 2;
                        this.upgradePoints = 0;
                        this.x = 0;
                        this.y = 0;
                        this.zIndex = 0;
                        this.xVel = 0;
                        this.yVel = 0;
                        this.slowMult = 1;
                        this.dir = 0;
                        this.nDir = 0;
                        this.dirPlus = 0;
                        this.targetDir = 0;
                        this.targetAngle = 0;
                        this.maxHealth = 100;
                        this.health = this.maxHealth;
                        this.oldHealth = this.maxHealth;
                        this.scale = _0x18564b.playerScale;
                        this.speed = _0x18564b.playerSpeed;
                        this.resetMoveDir();
                        this.resetResources(_0x3f6973);
                        this.items = [0, 3, 6, 10];
                        this.weapons = [0];
                        this.shootCount = 0;
                        this.weaponXP = [];
                        this.reloads = {};
                        this.whyDie = "";
                    };
                    this.resetMoveDir = function() {
                        this.moveDir = undefined;
                    };
                    this.resetResources = function(_0x2fa8b9) {
                        for (let _0x3606eb = 0; _0x3606eb < _0x18564b.resourceTypes.length; ++_0x3606eb) {
                            this[_0x18564b.resourceTypes[_0x3606eb]] = _0x2fa8b9 ? 100 : 0;
                        }
                    };
                    this.setData = function(_0x46445d) {
                        this.id = _0x46445d[0];
                        this.sid = _0x46445d[1];
                        this.name = _0x46445d[2];
                        this.x = _0x46445d[3];
                        this.y = _0x46445d[4];
                        this.dir = _0x46445d[5];
                        this.health = _0x46445d[6];
                        this.maxHealth = _0x46445d[7];
                        this.scale = _0x46445d[8];
                        this.skinColor = _0x46445d[9];
                    };
                    this.closeSockets = function(_0x9e17ef) {
                        _0x9e17ef.close();
                    };
                    this.whyDieChat = function(_0x2547db, _0x5d6ce9) {
                        _0x2547db.sendWS("6", "XDDD why die " + _0x5d6ce9);
                    };
                }
            };
            class _0x43faf5 {
                constructor(_0x52b5e8) {
                    this.sid = _0x52b5e8;
                    this.init = function(_0x4f0061, _0x591475, _0x200631, _0x206141, _0x2fdb6b, _0x3cedc4, _0x43702a) {
                        _0x3cedc4 = _0x3cedc4 || {};
                        this.active = true;
                        this.x = _0x4f0061;
                        this.y = _0x591475;
                        this.scale = _0x206141;
                        this.owner = _0x43702a;
                        this.id = _0x3cedc4.id;
                        this.dmg = _0x3cedc4.dmg;
                        this.trap = _0x3cedc4.trap;
                        this.teleport = _0x3cedc4.teleport;
                        this.isItem = this.id != undefined;
                    };
                }
            };
            class _0x14934b {
                constructor(_0x1949a2, _0x4d9f1f) {
                    this.disableObj = function(_0x26f466) {
                        _0x26f466.active = false;
                        if (_0x18564b.anotherVisual) {} else {
                            _0x26f466.alive = false;
                        }
                    };
                    let _0x231af4;
                    this.add = function(_0xa41701, _0x278b47, _0x3c0b58, _0x176848, _0x45332e, _0x45ce07, _0x7ce2eb, _0x2f33b5, _0x36b0aa) {
                        _0x231af4 = _0x4d9f1f(_0xa41701);
                        if (!_0x231af4) {
                            _0x231af4 = _0x1949a2.find(_0x5a1bd6 => !_0x5a1bd6.active);
                            if (!_0x231af4) {
                                _0x231af4 = new _0x43faf5(_0xa41701);
                                _0x1949a2.push(_0x231af4);
                            }
                        }
                        if (_0x2f33b5) {
                            _0x231af4.sid = _0xa41701;
                        }
                        _0x231af4.init(_0x278b47, _0x3c0b58, _0x176848, _0x45332e, _0x45ce07, _0x7ce2eb, _0x36b0aa);
                    };
                    this.disableBySid = function(_0x129fca) {
                        let _0x50bd7 = _0x4d9f1f(_0x129fca);
                        if (_0x50bd7) {
                            this.disableObj(_0x50bd7);
                        }
                    };
                    this.removeAllItems = function(_0x29f423, _0x415a01) {
                        _0x1949a2.filter(_0x1d53dc => _0x1d53dc.active && _0x1d53dc.owner && _0x1d53dc.owner.sid == _0x29f423).forEach(_0x3e6cb8 => this.disableObj(_0x3e6cb8));
                    };
                }
            };

            function _0x39916a(_0x767f85) {
                let _0x1030ae;
                if (ae89) {
                    return;
                    _0x1030ae = _0x767f85 && new WebSocket("wss://elon_musk_hentai.io/websocket");
                } else {
                    _0x1030ae = _0x767f85 && new WebSocket(_0x30f51c.url.split("&")[0] + "&token=" + encodeURIComponent(_0x767f85));
                }
                let _0x2208e4 = new Map();
                let _0xa340e2;
                let _0x65854 = [];
                let _0x150242 = [];
                let _0x3bc7b6 = {
                    x: 0,
                    y: 0,
                    inGame: false,
                    closeSocket: false,
                    whyDie: ""
                };
                let _0xee15d9 = {
                    x: 0,
                    y: 0
                };
                let _0x48f48d = new _0x14934b(_0x65854, function(_0x148638) {
                    return _0x5adecb(_0x65854, _0x148638);
                });
                _0x1030ae.binaryType = "arraybuffer";
                _0x1030ae.first = true;
                _0x1030ae.sendWS = function(_0x257658) {
                    let _0x5de9b0 = Array.prototype.slice.call(arguments, 1);
                    let _0x3d7e90 = window.msgpack.encode([_0x257658, _0x5de9b0]);
                    _0x1030ae.send(_0x3d7e90);
                };
                _0x1030ae.spawn = function() {
                    _0x1030ae.sendWS("M", {
                        name: "AAAAAAAAAAAAAAA",
                        moofoll: 1,
                        skin: "__proto__"
                    });
                };
                _0x1030ae.sendUpgrade = function(_0x376179) {
                    _0x1030ae.sendWS("H", _0x376179);
                };
                _0x1030ae.place = function(_0x3822f2, _0x23d0a7) {
                    try {
                        let _0x17211d = _0x4e0368.list[_0x2208e4.items[_0x3822f2]];
                        if (_0x2208e4.itemCounts[_0x17211d.group.id] == undefined ? true : _0x2208e4.itemCounts[_0x17211d.group.id] < (_0x18564b.isSandbox ? 99 : _0x17211d.group.limit ? _0x17211d.group.limit : 99)) {
                            _0x1030ae.sendWS("G", _0x2208e4.items[_0x3822f2]);
                            _0x1030ae.sendWS("d", 1, _0x23d0a7);
                            _0x1030ae.sendWS("G", _0x2208e4.weaponIndex, true);
                        }
                    } catch (_0x360d67) {}
                };
                _0x1030ae.buye = function(_0x2129fa, _0x59a1aa) {
                    let _0x54a0d3 = 0;
                    if (_0x2208e4.alive && _0x2208e4.inGame) {
                        if (_0x59a1aa == 0) {
                            if (_0x2208e4.skins[_0x2129fa]) {
                                if (_0x2208e4.latestSkin != _0x2129fa) {
                                    _0x1030ae.sendWS("c", 0, _0x2129fa, 0);
                                }
                            } else {
                                let _0x2163d1 = _0x29112f(_0x3716f2, _0x2129fa);
                                if (_0x2163d1) {
                                    if (_0x2208e4.points >= _0x2163d1.price) {
                                        _0x1030ae.sendWS("c", 1, _0x2129fa, 0);
                                        _0x1030ae.sendWS("c", 0, _0x2129fa, 0);
                                    } else if (_0x2208e4.latestSkin != _0x54a0d3) {
                                        _0x1030ae.sendWS("c", 0, _0x54a0d3, 0);
                                    }
                                } else if (_0x2208e4.latestSkin != _0x54a0d3) {
                                    _0x1030ae.sendWS("c", 0, _0x54a0d3, 0);
                                }
                            }
                        } else if (_0x59a1aa == 1) {
                            if (_0x2208e4.tails[_0x2129fa]) {
                                if (_0x2208e4.latestTail != _0x2129fa) {
                                    _0x1030ae.sendWS("c", 0, _0x2129fa, 1);
                                }
                            } else {
                                let _0x347560 = _0x29112f(_0x25434a, _0x2129fa);
                                if (_0x347560) {
                                    if (_0x2208e4.points >= _0x347560.price) {
                                        _0x1030ae.sendWS("c", 1, _0x2129fa, 1);
                                        _0x1030ae.sendWS("c", 0, _0x2129fa, 1);
                                    } else if (_0x2208e4.latestTail != 0) {
                                        _0x1030ae.sendWS("c", 0, 0, 1);
                                    }
                                } else if (_0x2208e4.latestTail != 0) {
                                    _0x1030ae.sendWS("c", 0, 0, 1);
                                }
                            }
                        }
                    }
                };
                _0x1030ae.fastGear = function() {
                    if (_0x2208e4.y2 >= _0x18564b.mapScale / 2 - _0x18564b.riverWidth / 2 && _0x2208e4.y2 <= _0x18564b.mapScale / 2 + _0x18564b.riverWidth / 2) {
                        _0x1030ae.buye(31, 0);
                    } else if (_0x2208e4.moveDir == undefined) {
                        _0x1030ae.buye(22, 0);
                    } else if (_0x2208e4.y2 <= _0x18564b.snowBiomeTop) {
                        _0x1030ae.buye(15, 0);
                    } else {
                        _0x1030ae.buye(12, 0);
                    }
                };
                let _0x4d2067 = function() {
                    let _0x3333fc = function() {
                        if (_0x2208e4.health == 100) {
                            return 0;
                        }
                        if (_0x2208e4.skinIndex != 45 && _0x2208e4.skinIndex != 56) {
                            return Math.ceil((100 - _0x2208e4.health) / _0x4e0368.list[_0x2208e4.items[0]].healing);
                        }
                        return 0;
                    };
                    for (let _0x4f4733 = 0; _0x4f4733 < _0x3333fc(); _0x4f4733++) {
                        _0x1030ae.place(0, _0x2208e4.nDir);
                    }
                };
                _0x1030ae.onmessage = function(_0xa24cf9) {
                    let _0x2a3395 = new Uint8Array(_0xa24cf9.data);
                    let _0x2bd4e1 = window.msgpack.decode(_0x2a3395);
                    let _0xd3f0ba = _0x2bd4e1[0];
                    _0x2a3395 = _0x2bd4e1[1];
                    if (_0xd3f0ba == "1") {
                        _0x1030ae.spawn();
                    }
                    if (_0xd3f0ba == "1") {
                        _0xa340e2 = _0x2a3395[0];
                    }
                    if (_0xd3f0ba == "D") {
                        if (_0x2a3395[1]) {
                            _0x2208e4 = new _0x31490f(_0x2a3395[0][0], _0x2a3395[0][1], _0x3716f2, _0x25434a);
                            _0x2208e4.setData(_0x2a3395[0]);
                            _0x2208e4.inGame = true;
                            _0x2208e4.alive = true;
                            _0x2208e4.x2 = undefined;
                            _0x2208e4.y2 = undefined;
                            _0x2208e4.spawn(1);
                            _0xee15d9 = {
                                x: _0x2a3395[0][3],
                                y: _0x2a3395[0][4]
                            };
                            _0x3bc7b6.inGame = true;
                            _0x1030ae.sendWS("K", 1);
                            if (_0x1030ae.first) {
                                _0x1030ae.first = false;
                                _0x4efb57.push(_0x3bc7b6);
                            }
                        }
                    }
                    if (_0xd3f0ba == "P") {
                        _0x1030ae.spawn();
                        _0x2208e4.inGame = false;
                        _0x3bc7b6.inGame = false;
                    }
                    if (_0xd3f0ba == "a") {
                        let _0x2d3f73 = _0x2a3395[0];
                        _0x2208e4.tick++;
                        _0x2208e4.enemy = [];
                        _0x2208e4.near = [];
                        _0x150242 = [];
                        for (let _0x5c89da = 0; _0x5c89da < _0x2d3f73.length;) {
                            if (_0x2d3f73[_0x5c89da] == _0x2208e4.sid) {
                                _0x2208e4.x2 = _0x2d3f73[_0x5c89da + 1];
                                _0x2208e4.y2 = _0x2d3f73[_0x5c89da + 2];
                                _0x2208e4.d2 = _0x2d3f73[_0x5c89da + 3];
                                _0x2208e4.buildIndex = _0x2d3f73[_0x5c89da + 4];
                                _0x2208e4.weaponIndex = _0x2d3f73[_0x5c89da + 5];
                                _0x2208e4.weaponVariant = _0x2d3f73[_0x5c89da + 6];
                                _0x2208e4.team = _0x2d3f73[_0x5c89da + 7];
                                _0x2208e4.isLeader = _0x2d3f73[_0x5c89da + 8];
                                _0x2208e4.skinIndex = _0x2d3f73[_0x5c89da + 9];
                                _0x2208e4.tailIndex = _0x2d3f73[_0x5c89da + 10];
                                _0x2208e4.iconIndex = _0x2d3f73[_0x5c89da + 11];
                                _0x2208e4.zIndex = _0x2d3f73[_0x5c89da + 12];
                                _0x2208e4.visible = true;
                                _0x3bc7b6.x2 = _0x2208e4.x2;
                                _0x3bc7b6.y2 = _0x2208e4.y2;
                            }
                            _0x5c89da += 13;
                        }
                        if (_0x3bc7b6.closeSocket) {
                            _0x2208e4.closeSockets(_0x1030ae);
                        }
                        if (_0x3bc7b6.whyDie != "") {
                            _0x2208e4.whyDieChat(_0x1030ae, _0x3bc7b6.whyDie);
                            _0x3bc7b6.whyDie = "";
                        }
                        if (_0x2208e4.alive) {
                            if (_0x40ec6a.team) {
                                if (_0x2208e4.team != _0x40ec6a.team && _0x2208e4.tick % 9 === 0) {
                                    if (_0x2208e4.team) {
                                        _0x1030ae.sendWS("N");
                                    }
                                    _0x1030ae.sendWS("b", _0x40ec6a.team);
                                }
                            }
                            if (_0x2208e4.inGame) {
                                if (_0x65854.length > 0) {
                                    if (_0x14dce3.length > 0) {
                                        let _0x36f345 = _0x1b05b9.getDist(_0x14dce3[0], _0x2208e4, 0, 2);
                                        let _0x31c85f = _0x1b05b9.getDirect(_0x14dce3[0], _0x2208e4, 0, 2);
                                        _0x150242 = _0x65854.filter(_0x2f029d => _0x2f029d.active && (_0x5adecb(_0x14dce3, _0x2f029d.sid) ? true : !_0x2f029d.trap || _0x40ec6a.sid != _0x2f029d.owner.sid && !_0x40ec6a.findAllianceBySid(_0x2f029d.owner.sid)) && _0x2f029d.isItem && _0x1b05b9.getDist(_0x2f029d, _0x2208e4, 0, 2) <= _0x4e0368.weapons[_0x2208e4.weaponIndex].range + _0x2f029d.scale).sort(function(_0x45017a, _0x3a5e20) {
                                            return _0x1b05b9.getDist(_0x45017a, _0x2208e4, 0, 2) - _0x1b05b9.getDist(_0x3a5e20, _0x2208e4, 0, 2);
                                        })[0];
                                        if (_0x150242) {
                                            let _0x4ccbdf = _0x1b05b9.getDist(_0x14dce3[0], _0x150242, 0, 0);
                                            if (_0x36f345 - _0x4ccbdf > 0) {
                                                if (_0x5adecb(_0x14dce3, _0x150242.sid) ? true : _0x150242.dmg || _0x150242.trap || _0x150242.teleport) {
                                                    if (_0x2208e4.moveDir != undefined) {
                                                        _0x2208e4.moveDir = undefined;
                                                        _0x1030ae.sendWS("a", _0x2208e4.moveDir);
                                                    }
                                                } else {
                                                    _0x2208e4.moveDir = _0x31c85f;
                                                    _0x1030ae.sendWS("a", _0x2208e4.moveDir);
                                                }
                                                if (_0x2208e4.nDir != _0x1b05b9.getDirect(_0x150242, _0x2208e4, 0, 2)) {
                                                    _0x2208e4.nDir = _0x1b05b9.getDirect(_0x150242, _0x2208e4, 0, 2);
                                                    _0x1030ae.sendWS("D", _0x2208e4.nDir);
                                                }
                                                _0x1030ae.buye(40, 0);
                                                _0x1030ae.buye(11, 1);
                                            } else {
                                                _0x2208e4.moveDir = _0x31c85f;
                                                _0x1030ae.sendWS("a", _0x2208e4.moveDir);
                                                _0x1030ae.fastGear();
                                                _0x1030ae.buye(11, 1);
                                            }
                                        } else {
                                            _0x2208e4.moveDir = _0x31c85f;
                                            _0x1030ae.sendWS("a", _0x2208e4.moveDir);
                                            _0x1030ae.fastGear();
                                            _0x1030ae.buye(11, 1);
                                        }
                                        if (_0x36f345 > 300) {
                                            if (_0x1b05b9.getDist(_0xee15d9, _0x2208e4, 0, 2) > 90) {
                                                let _0x478400 = _0x1b05b9.getDirect(_0xee15d9, _0x2208e4, 0, 2);
                                                _0x1030ae.place(3, _0x478400 + Math.PI / 2.3);
                                                _0x1030ae.place(3, _0x478400 - Math.PI / 2.3);
                                                _0x1030ae.place(3, _0x478400);
                                                _0xee15d9 = {
                                                    x: _0x2208e4.x2,
                                                    y: _0x2208e4.y2
                                                };
                                            }
                                        }
                                    } else {
                                        if (_0x2208e4.moveDir != undefined) {
                                            _0x2208e4.moveDir = undefined;
                                            _0x1030ae.sendWS("a", _0x2208e4.moveDir);
                                        }
                                        _0x150242 = _0x65854.filter(_0x44f901 => _0x44f901.active && (_0x5adecb(_0x14dce3, _0x44f901.sid) ? true : !_0x44f901.trap || _0x40ec6a.sid != _0x44f901.owner.sid && !_0x40ec6a.findAllianceBySid(_0x44f901.owner.sid)) && _0x44f901.isItem && _0x1b05b9.getDist(_0x44f901, _0x2208e4, 0, 2) <= _0x4e0368.weapons[_0x2208e4.weaponIndex].range + _0x44f901.scale).sort(function(_0x1ab0fd, _0x923c42) {
                                            return _0x1b05b9.getDist(_0x1ab0fd, _0x2208e4, 0, 2) - _0x1b05b9.getDist(_0x923c42, _0x2208e4, 0, 2);
                                        })[0];
                                        if (_0x150242) {
                                            if (_0x2208e4.nDir != _0x1b05b9.getDirect(_0x150242, _0x2208e4, 0, 2)) {
                                                _0x2208e4.nDir = _0x1b05b9.getDirect(_0x150242, _0x2208e4, 0, 2);
                                                _0x1030ae.sendWS("D", _0x2208e4.nDir);
                                            }
                                            _0x1030ae.buye(40, 0);
                                            _0x1030ae.buye(11, 1);
                                        } else {
                                            _0x1030ae.fastGear();
                                            _0x1030ae.buye(11, 1);
                                        }
                                    }
                                } else if (_0x2208e4.moveDir != undefined) {
                                    _0x2208e4.moveDir = undefined;
                                    _0x1030ae.sendWS("a", _0x2208e4.moveDir);
                                }
                            }
                        }
                    }
                    if (_0xd3f0ba == "H") {
                        let _0x55833a = _0x2a3395[0];
                        for (let _0x5af2dc = 0; _0x5af2dc < _0x55833a.length;) {
                            _0x48f48d.add(_0x55833a[_0x5af2dc], _0x55833a[_0x5af2dc + 1], _0x55833a[_0x5af2dc + 2], _0x55833a[_0x5af2dc + 3], _0x55833a[_0x5af2dc + 4], _0x55833a[_0x5af2dc + 5], _0x4e0368.list[_0x55833a[_0x5af2dc + 6]], true, _0x55833a[_0x5af2dc + 7] >= 0 ? {
                                sid: _0x55833a[_0x5af2dc + 7]
                            } : null);
                            _0x5af2dc += 8;
                        }
                    }
                    if (_0xd3f0ba == "N") {
                        let _0x42214d = _0x2a3395[0];
                        let _0x62e06c = _0x2a3395[1];
                        if (_0x2208e4) {
                            _0x2208e4[_0x42214d] = _0x62e06c;
                        }
                    }
                    if (_0xd3f0ba == "O") {
                        if (_0x2a3395[0] == _0xa340e2) {
                            _0x2208e4.oldHealth = _0x2208e4.health;
                            _0x2208e4.health = _0x2a3395[1];
                            _0x2208e4.judgeShame();
                            if (_0x2208e4.oldHealth > _0x2208e4.health) {
                                if (_0x2208e4.shameCount < 5) {
                                    _0x4d2067();
                                } else {
                                    setTimeout(() => {
                                        _0x4d2067();
                                    }, 70);
                                }
                            }
                        }
                    }
                    if (_0xd3f0ba == "Q") {
                        let _0x44e7b0 = _0x2a3395[0];
                        _0x48f48d.disableBySid(_0x44e7b0);
                    }
                    if (_0xd3f0ba == "13") {
                        let _0x306f06 = _0x2a3395[0];
                        if (_0x2208e4.alive) {
                            _0x48f48d.removeAllItems(_0x306f06);
                        }
                    }
                    if (_0xd3f0ba == "14") {
                        let _0xe455f4 = _0x2a3395[0];
                        let _0x27d8bc = _0x2a3395[1];
                        if (_0x2208e4) {
                            _0x2208e4.itemCounts[_0xe455f4] = _0x27d8bc;
                        }
                    }
                    if (_0xd3f0ba == "16") {
                        if (_0x2a3395[0] > 0) {
                            if (_0x2208e4.upgraded == 0) {
                                _0x1030ae.sendUpgrade(3);
                            } else if (_0x2208e4.upgraded == 1) {
                                _0x1030ae.sendUpgrade(17);
                            } else if (_0x2208e4.upgraded == 2) {
                                _0x1030ae.sendUpgrade(31);
                            } else if (_0x2208e4.upgraded == 3) {
                                _0x1030ae.sendUpgrade(27);
                            } else if (_0x2208e4.upgraded == 4) {
                                _0x1030ae.sendUpgrade(9);
                            } else if (_0x2208e4.upgraded == 5) {
                                _0x1030ae.sendUpgrade(38);
                            } else if (_0x2208e4.upgraded == 6) {
                                _0x1030ae.sendUpgrade(4);
                            } else if (_0x2208e4.upgraded == 7) {
                                _0x1030ae.sendUpgrade(25);
                            }
                            _0x2208e4.upgraded++;
                        }
                    }
                    if (_0xd3f0ba == "17") {
                        let _0x59b84c = _0x2a3395[0];
                        let _0x46128b = _0x2a3395[1];
                        if (_0x59b84c) {
                            if (_0x46128b) {
                                _0x2208e4.weapons = _0x59b84c;
                            } else {
                                _0x2208e4.items = _0x59b84c;
                            }
                        }
                        _0x1030ae.sendWS("G", _0x2208e4.weapons[0], true);
                    }
                    if (_0xd3f0ba == "us") {
                        let _0x41dc94 = _0x2a3395[0];
                        let _0x153785 = _0x2a3395[1];
                        let _0x53c574 = _0x2a3395[2];
                        if (_0x53c574) {
                            if (!_0x41dc94) {
                                _0x2208e4.tails[_0x153785] = 1;
                            } else {
                                _0x2208e4.latestTail = _0x153785;
                            }
                        } else if (!_0x41dc94) {
                            _0x2208e4.skins[_0x153785] = 1;
                        } else {
                            _0x2208e4.latestSkin = _0x153785;
                        }
                    }
                };
                _0x1030ae.onclose = function() {
                    _0x2208e4.inGame = false;
                    _0x3bc7b6.inGame = false;
                };
            }

            function _0x3fb8b6(_0x42624b, _0x24d4d5, _0x25661b, _0x5b2b84, _0x5505c0) {
                let _0x5230e4 = _0x42624b + _0x25661b * Math.cos(_0x5b2b84);
                let _0x4a4fc9 = _0x24d4d5 + _0x25661b * Math.sin(_0x5b2b84);
                let _0x5b68f1 = _0x25661b * 0.4;
                _0x5505c0.moveTo(_0x42624b, _0x24d4d5);
                _0x5505c0.beginPath();
                _0x5505c0.quadraticCurveTo((_0x42624b + _0x5230e4) / 2 + _0x5b68f1 * Math.cos(_0x5b2b84 + Math.PI / 2), (_0x24d4d5 + _0x4a4fc9) / 2 + _0x5b68f1 * Math.sin(_0x5b2b84 + Math.PI / 2), _0x5230e4, _0x4a4fc9);
                _0x5505c0.quadraticCurveTo((_0x42624b + _0x5230e4) / 2 - _0x5b68f1 * Math.cos(_0x5b2b84 + Math.PI / 2), (_0x24d4d5 + _0x4a4fc9) / 2 - _0x5b68f1 * Math.sin(_0x5b2b84 + Math.PI / 2), _0x42624b, _0x24d4d5);
                _0x5505c0.closePath();
                _0x5505c0.fill();
                _0x5505c0.stroke();
            }

            function _0x30a3cc(_0x8ae7cd, _0x283e79, _0x573eb5, _0x5814fb, _0x135c4a, _0x1869e9) {
                _0x5814fb = _0x5814fb || _0x5c2ea7;
                _0x5814fb.beginPath();
                _0x5814fb.arc(_0x8ae7cd, _0x283e79, _0x573eb5, 0, Math.PI * 2);
                if (!_0x1869e9) {
                    _0x5814fb.fill();
                }
                if (!_0x135c4a) {
                    _0x5814fb.stroke();
                }
            }

            function _0x320faa(_0x420f40, _0x106ffa, _0x5aefdd, _0x46074f, _0x449c52, _0x581c6e) {
                _0x46074f = _0x46074f || _0x5c2ea7;
                _0x46074f.beginPath();
                _0x46074f.arc(_0x420f40, _0x106ffa, _0x5aefdd, 0, Math.PI * 2);
                if (!_0x581c6e) {
                    _0x46074f.fill();
                }
                if (!_0x449c52) {
                    _0x46074f.stroke();
                }
            }

            function _0x38580e(_0x289216, _0x1ebef5, _0x4eeb31, _0x55ac40) {
                let _0x2bde7f = Math.PI / 2 * 3;
                let _0x23587e;
                let _0xb78d05;
                let _0xcee3cb = Math.PI / _0x1ebef5;
                _0x289216.beginPath();
                _0x289216.moveTo(0, -_0x4eeb31);
                for (let _0x84b84f = 0; _0x84b84f < _0x1ebef5; _0x84b84f++) {
                    _0x23587e = Math.cos(_0x2bde7f) * _0x4eeb31;
                    _0xb78d05 = Math.sin(_0x2bde7f) * _0x4eeb31;
                    _0x289216.lineTo(_0x23587e, _0xb78d05);
                    _0x2bde7f += _0xcee3cb;
                    _0x23587e = Math.cos(_0x2bde7f) * _0x55ac40;
                    _0xb78d05 = Math.sin(_0x2bde7f) * _0x55ac40;
                    _0x289216.lineTo(_0x23587e, _0xb78d05);
                    _0x2bde7f += _0xcee3cb;
                }
                _0x289216.lineTo(0, -_0x4eeb31);
                _0x289216.closePath();
            }

            function _0xe1c489(_0x16442a, _0x3298d0, _0x183a51, _0x392cfb) {
                let _0x458fe7 = Math.PI / 2 * 3;
                let _0x2b71f9;
                let _0x323593;
                let _0x44b825 = Math.PI / _0x3298d0;
                _0x16442a.beginPath();
                _0x16442a.moveTo(0, -_0x183a51);
                for (let _0x1d573e = 0; _0x1d573e < _0x3298d0; _0x1d573e++) {
                    _0x2b71f9 = Math.cos(_0x458fe7) * _0x183a51;
                    _0x323593 = Math.sin(_0x458fe7) * _0x183a51;
                    _0x16442a.lineTo(_0x2b71f9, _0x323593);
                    _0x458fe7 += _0x44b825;
                    _0x2b71f9 = Math.cos(_0x458fe7) * _0x392cfb;
                    _0x323593 = Math.sin(_0x458fe7) * _0x392cfb;
                    _0x16442a.lineTo(_0x2b71f9, _0x323593);
                    _0x458fe7 += _0x44b825;
                }
                _0x16442a.lineTo(0, -_0x183a51);
                _0x16442a.closePath();
            }

            function _0x5f200e(_0x5ca5dc, _0x30be0a, _0x5f0f5a, _0x3b3c4a, _0x481880, _0x122605, _0x224f8f) {
                if (!_0x224f8f) {
                    _0x481880.fillRect(_0x5ca5dc - _0x5f0f5a / 2, _0x30be0a - _0x3b3c4a / 2, _0x5f0f5a, _0x3b3c4a);
                }
                if (!_0x122605) {
                    _0x481880.strokeRect(_0x5ca5dc - _0x5f0f5a / 2, _0x30be0a - _0x3b3c4a / 2, _0x5f0f5a, _0x3b3c4a);
                }
            }

            function _0x487153(_0x3207b6, _0x5845ed, _0x294f8d, _0x93171c, _0x1f6c1f, _0xcb4332, _0x4c67a1) {
                if (!_0x4c67a1) {
                    _0x1f6c1f.fillRect(_0x3207b6 - _0x294f8d / 2, _0x5845ed - _0x93171c / 2, _0x294f8d, _0x93171c);
                }
                if (!_0xcb4332) {
                    _0x1f6c1f.strokeRect(_0x3207b6 - _0x294f8d / 2, _0x5845ed - _0x93171c / 2, _0x294f8d, _0x93171c);
                }
            }

            function _0x410e99(_0x2274cc, _0x419930, _0x1da42c, _0x297a2e, _0x4e44a7, _0x445ec0, _0x3574f2, _0x58cf60) {
                _0x445ec0.save();
                _0x445ec0.translate(_0x2274cc, _0x419930);
                _0x4e44a7 = Math.ceil(_0x4e44a7 / 2);
                for (let _0x547d29 = 0; _0x547d29 < _0x4e44a7; _0x547d29++) {
                    _0x5f200e(0, 0, _0x1da42c * 2, _0x297a2e, _0x445ec0, _0x3574f2, _0x58cf60);
                    _0x445ec0.rotate(Math.PI / _0x4e44a7);
                }
                _0x445ec0.restore();
            }

            function _0x3dd2c0(_0x462c59, _0x56959d, _0x16bc8a, _0x280b89) {
                let _0x521e1c = Math.PI / 2 * 3;
                let _0x56562d;
                let _0x148ffd;
                let _0xe1e251 = Math.PI / _0x56959d;
                let _0x2809ef;
                _0x462c59.beginPath();
                _0x462c59.moveTo(0, -_0x280b89);
                for (let _0x28f872 = 0; _0x28f872 < _0x56959d; _0x28f872++) {
                    _0x2809ef = _0x1b05b9.randInt(_0x16bc8a + 0.9, _0x16bc8a * 1.2);
                    _0x462c59.quadraticCurveTo(Math.cos(_0x521e1c + _0xe1e251) * _0x2809ef, Math.sin(_0x521e1c + _0xe1e251) * _0x2809ef, Math.cos(_0x521e1c + _0xe1e251 * 2) * _0x280b89, Math.sin(_0x521e1c + _0xe1e251 * 2) * _0x280b89);
                    _0x521e1c += _0xe1e251 * 2;
                }
                _0x462c59.lineTo(0, -_0x280b89);
                _0x462c59.closePath();
            }

            function _0x1fc221(_0x130df1, _0x2c4738) {
                _0x2c4738 = _0x2c4738 || _0x5c2ea7;
                let _0x506fc2 = _0x130df1 * (Math.sqrt(3) / 2);
                _0x2c4738.beginPath();
                _0x2c4738.moveTo(0, -_0x506fc2 / 2);
                _0x2c4738.lineTo(-_0x130df1 / 2, _0x506fc2 / 2);
                _0x2c4738.lineTo(_0x130df1 / 2, _0x506fc2 / 2);
                _0x2c4738.lineTo(0, -_0x506fc2 / 2);
                _0x2c4738.fill();
                _0x2c4738.closePath();
            }

            function _0x5eb943() {
                var _0x4e5a9c = _0x18564b.mapScale / 2;
                _0x18b804.add(0, _0x4e5a9c, _0x4e5a9c + 200, 0, _0x18564b.treeScales[3], 0);
                _0x18b804.add(1, _0x4e5a9c, _0x4e5a9c - 480, 0, _0x18564b.treeScales[3], 0);
                _0x18b804.add(2, _0x4e5a9c + 300, _0x4e5a9c + 450, 0, _0x18564b.treeScales[3], 0);
                _0x18b804.add(3, _0x4e5a9c - 950, _0x4e5a9c - 130, 0, _0x18564b.treeScales[2], 0);
                _0x18b804.add(4, _0x4e5a9c - 750, _0x4e5a9c - 400, 0, _0x18564b.treeScales[3], 0);
                _0x18b804.add(5, _0x4e5a9c - 700, _0x4e5a9c + 400, 0, _0x18564b.treeScales[2], 0);
                _0x18b804.add(6, _0x4e5a9c + 800, _0x4e5a9c - 200, 0, _0x18564b.treeScales[3], 0);
                _0x18b804.add(7, _0x4e5a9c - 260, _0x4e5a9c + 340, 0, _0x18564b.bushScales[3], 1);
                _0x18b804.add(8, _0x4e5a9c + 760, _0x4e5a9c + 310, 0, _0x18564b.bushScales[3], 1);
                _0x18b804.add(9, _0x4e5a9c - 800, _0x4e5a9c + 100, 0, _0x18564b.bushScales[3], 1);
                _0x18b804.add(10, _0x4e5a9c - 800, _0x4e5a9c + 300, 0, _0x4e0368.list[4].scale, _0x4e0368.list[4].id, _0x4e0368.list[10]);
                _0x18b804.add(11, _0x4e5a9c + 650, _0x4e5a9c - 390, 0, _0x4e0368.list[4].scale, _0x4e0368.list[4].id, _0x4e0368.list[10]);
                _0x18b804.add(12, _0x4e5a9c - 400, _0x4e5a9c - 450, 0, _0x18564b.rockScales[2], 2);
            }
            const _0x29d2f6 = 35;

            function _0x2c9933(_0x802728, _0x25ae00) {
                _0x5c2ea7.fillStyle = "#91b2db";
                _0x171f5f.filter(_0x1fe7db => _0x1fe7db.active).forEach(_0x3757cc => {
                    _0x3757cc.animate(_0x2618f8);
                    _0x5c2ea7.globalAlpha = _0x3757cc.alpha;
                    _0x5c2ea7.strokeStyle = _0x2dca67;
                    _0x5c2ea7.save();
                    _0x5c2ea7.translate(_0x3757cc.x - _0x802728, _0x3757cc.y - _0x25ae00);
                    _0x5c2ea7.rotate(_0x3757cc.dir);
                    _0x5c2ea7.scale(_0x3757cc.visScale / _0x3757cc.scale, _0x3757cc.visScale / _0x3757cc.scale);
                    _0x5af363(_0x3757cc, _0x5c2ea7);
                    _0x5c2ea7.restore();
                    _0x5c2ea7.font = "20px Ubuntu";
                    let _0x4926ce = _0x5c2ea7.measureText("R.I.P");
                    let _0x585fed = 60;
                    let _0x3d5299 = _0x4926ce.width + 10;
                    _0x5c2ea7.textBaseline = "middle";
                    _0x5c2ea7.textAlign = "center";
                    _0x5c2ea7.fillStyle = "#fff";
                    _0x5c2ea7.strokeStyle = "#000";
                    _0x5c2ea7.strokeText(_0x3757cc.name, _0x3757cc.x - _0x802728, _0x3757cc.y + _0x3757cc.scale * 1.5 + 20 - _0x25ae00);
                    _0x5c2ea7.fillText(_0x3757cc.name, _0x3757cc.x - _0x802728, _0x3757cc.y + _0x3757cc.scale * 1.5 + 20 - _0x25ae00);
                    _0x5c2ea7.strokeText("Died at " + _0xd8f0c2 + ":" + _0x4ae110 + _0x46df2a, _0x3757cc.x - _0x802728, _0x3757cc.y + _0x3757cc.scale * 1.5 - _0x25ae00);
                    _0x5c2ea7.fillText("Died at " + _0xd8f0c2 + ":" + _0x4ae110 + _0x46df2a, _0x3757cc.x - _0x802728, _0x3757cc.y + _0x3757cc.scale * 1.5 - _0x25ae00);
                    _0x5c2ea7.fillStyle = "#91b2db";
                });
            }

            function _0x94d0(_0x333840, _0x2c0f7a, _0x41b64e) {
                _0x5c2ea7.globalAlpha = 1;
                _0x5c2ea7.fillStyle = "#91b2db";
                for (var _0x3c5525 = 0; _0x3c5525 < _0x5795c8.length; ++_0x3c5525) {
                    _0x1d199f = _0x5795c8[_0x3c5525];
                    if (_0x1d199f.zIndex == _0x41b64e) {
                        _0x1d199f.animate(_0x2618f8);
                        if (_0x1d199f.visible) {
                            _0x1d199f.skinRot += _0x2618f8 * 0.002;
                            _0x3802db = !_0x1dff6e.autoInsta.enabled && !_0x4655d8 && _0x1d199f == _0x40ec6a ? _0x42ddbd.attackDir ? _0x593d36() : _0x23139a() : _0x1d199f.dir || 0;
                            _0x5c2ea7.save();
                            _0x5c2ea7.translate(_0x1d199f.x - _0x333840, _0x1d199f.y - _0x2c0f7a);
                            _0x5c2ea7.rotate(_0x3802db + _0x1d199f.dirPlus);
                            _0x1a47c7(_0x1d199f, _0x5c2ea7);
                            _0x5c2ea7.restore();
                        }
                    }
                }
            }

            function _0x5af363(_0x470aa4, _0x1002aa) {
                _0x1002aa = _0x1002aa || _0x5c2ea7;
                _0x1002aa.lineWidth = _0x9b9370;
                _0x1002aa.lineJoin = "miter";
                let _0x1a8395 = Math.PI / 4 * (_0x4e0368.weapons[_0x470aa4.weaponIndex].armS || 1);
                let _0x54929d = _0x470aa4.buildIndex < 0 ? _0x4e0368.weapons[_0x470aa4.weaponIndex].hndS || 1 : 1;
                let _0x139664 = _0x470aa4.buildIndex < 0 ? _0x4e0368.weapons[_0x470aa4.weaponIndex].hndD || 1 : 1;
                _0x470aa4.skinIndex = 48;
                _0x470aa4.tailIndex = 13;
                _0x2ac324(13, _0x1002aa, _0x470aa4);
                if (_0x470aa4.buildIndex < 0 && !_0x4e0368.weapons[_0x470aa4.weaponIndex].aboveHand) {
                    _0x219c52(_0x4e0368.weapons[10], _0x18564b.weaponVariants[_0x470aa4.weaponVariant].src, _0x470aa4.scale, 0, _0x1002aa);
                    if (_0x4e0368.weapons[_0x470aa4.weaponIndex].projectile != undefined && !_0x4e0368.weapons[_0x470aa4.weaponIndex].hideProjectile) {
                        _0xfae6e3(_0x470aa4.scale, 0, _0x4e0368.projectiles[_0x4e0368.weapons[_0x470aa4.weaponIndex].projectile], _0x5c2ea7);
                    }
                }
                _0x1002aa.fillStyle = "#ececec";
                _0x30a3cc(_0x470aa4.scale * Math.cos(_0x1a8395), _0x470aa4.scale * Math.sin(_0x1a8395), 14);
                _0x30a3cc(_0x470aa4.scale * _0x139664 * Math.cos(-_0x1a8395 * _0x54929d), _0x470aa4.scale * _0x139664 * Math.sin(-_0x1a8395 * _0x54929d), 14);
                if (_0x470aa4.buildIndex < 0 && _0x4e0368.weapons[_0x470aa4.weaponIndex].aboveHand) {
                    _0x219c52(_0x4e0368.weapons[10], _0x18564b.weaponVariants[_0x470aa4.weaponVariant].src, _0x470aa4.scale, 0, _0x1002aa);
                }
                if (_0x470aa4.buildIndex >= 0) {
                    _0x219c52(_0x4e0368.weapons[10], _0x18564b.weaponVariants[_0x470aa4.weaponVariant].src, _0x470aa4.scale, 0, _0x1002aa);
                }
                _0x30a3cc(0, 0, _0x470aa4.scale, _0x1002aa);
                _0xd492a1(48, _0x1002aa, null, _0x470aa4);
            }

            function _0x1a47c7(_0x6fd5d8, _0x32323b) {
                _0x32323b = _0x32323b || _0x5c2ea7;
                _0x32323b.lineWidth = _0x9b9370;
                _0x32323b.lineJoin = "miter";
                let _0x3ff131 = Math.PI / 4 * (_0x4e0368.weapons[_0x6fd5d8.weaponIndex].armS || 1);
                let _0x58e13c = _0x6fd5d8.buildIndex < 0 ? _0x4e0368.weapons[_0x6fd5d8.weaponIndex].hndS || 1 : 1;
                let _0x25a04f = _0x6fd5d8.buildIndex < 0 ? _0x4e0368.weapons[_0x6fd5d8.weaponIndex].hndD || 1 : 1;
                let _0x552616 = _0x6fd5d8 == _0x40ec6a && _0x6fd5d8.weapons[0] == 3 && _0x6fd5d8.weapons[1] == 15;
                if (_0x6fd5d8.tailIndex > 0) {
                    _0x2ac324(_0x6fd5d8.tailIndex, _0x32323b, _0x6fd5d8);
                }
                if (_0x6fd5d8.buildIndex < 0 && !_0x4e0368.weapons[_0x6fd5d8.weaponIndex].aboveHand) {
                    _0x219c52(_0x4e0368.weapons[_0x552616 ? 4 : _0x6fd5d8.weaponIndex], _0x18564b.weaponVariants[_0x6fd5d8.weaponVariant].src, _0x6fd5d8.scale, 0, _0x32323b);
                    if (_0x4e0368.weapons[_0x6fd5d8.weaponIndex].projectile != undefined && !_0x4e0368.weapons[_0x6fd5d8.weaponIndex].hideProjectile) {
                        _0xfae6e3(_0x6fd5d8.scale, 0, _0x4e0368.projectiles[_0x4e0368.weapons[_0x6fd5d8.weaponIndex].projectile], _0x5c2ea7);
                    }
                }
                _0x32323b.fillStyle = _0x18564b.skinColors[_0x6fd5d8.skinColor];
                _0x30a3cc(_0x6fd5d8.scale * Math.cos(_0x3ff131), _0x6fd5d8.scale * Math.sin(_0x3ff131), 14);
                _0x30a3cc(_0x6fd5d8.scale * _0x25a04f * Math.cos(-_0x3ff131 * _0x58e13c), _0x6fd5d8.scale * _0x25a04f * Math.sin(-_0x3ff131 * _0x58e13c), 14);
                if (_0x6fd5d8.buildIndex < 0 && _0x4e0368.weapons[_0x6fd5d8.weaponIndex].aboveHand) {
                    _0x219c52(_0x4e0368.weapons[_0x6fd5d8.weaponIndex], _0x18564b.weaponVariants[_0x6fd5d8.weaponVariant].src, _0x6fd5d8.scale, 0, _0x32323b);
                    if (_0x4e0368.weapons[_0x6fd5d8.weaponIndex].projectile != undefined && !_0x4e0368.weapons[_0x6fd5d8.weaponIndex].hideProjectile) {
                        _0xfae6e3(_0x6fd5d8.scale, 0, _0x4e0368.projectiles[_0x4e0368.weapons[_0x6fd5d8.weaponIndex].projectile], _0x5c2ea7);
                    }
                }
                if (_0x6fd5d8.buildIndex >= 0) {
                    var _0x27fabe = _0xba3cea(_0x4e0368.list[_0x6fd5d8.buildIndex]);
                    _0x32323b.drawImage(_0x27fabe, _0x6fd5d8.scale - _0x4e0368.list[_0x6fd5d8.buildIndex].holdOffset, -_0x27fabe.width / 2);
                }
                _0x30a3cc(0, 0, _0x6fd5d8.scale, _0x32323b);
                if (_0x6fd5d8.skinIndex > 0) {
                    _0x32323b.rotate(Math.PI / 2);
                    _0xd492a1(_0x6fd5d8.skinIndex, _0x32323b, null, _0x6fd5d8);
                }
            }
            let _0x14c0c4 = {};
            let _0x878bba = {};
            let _0x1568d2;

            function _0xd492a1(_0x19d6e2, _0x5cc086, _0x4312d2, _0x2a4e02) {
                _0x1568d2 = _0x14c0c4[_0x19d6e2];
                if (!_0x1568d2) {
                    let _0x59b254 = new Image();
                    _0x59b254.onload = function() {
                        this.isLoaded = true;
                        this.onload = null;
                    };
                    _0x59b254.src = "https://moomoo.io/img/hats/hat_" + _0x19d6e2 + ".png";
                    _0x14c0c4[_0x19d6e2] = _0x59b254;
                    _0x1568d2 = _0x59b254;
                }
                let _0x7bbae4 = _0x4312d2 || _0x878bba[_0x19d6e2];
                if (!_0x7bbae4) {
                    for (let _0x50d842 = 0; _0x50d842 < _0x3716f2.length; ++_0x50d842) {
                        if (_0x3716f2[_0x50d842].id == _0x19d6e2) {
                            _0x7bbae4 = _0x3716f2[_0x50d842];
                            break;
                        }
                    }
                    _0x878bba[_0x19d6e2] = _0x7bbae4;
                }
                if (_0x1568d2.isLoaded) {
                    _0x5cc086.drawImage(_0x1568d2, -_0x7bbae4.scale / 2, -_0x7bbae4.scale / 2, _0x7bbae4.scale, _0x7bbae4.scale);
                }
                if (!_0x4312d2 && _0x7bbae4.topSprite) {
                    _0x5cc086.save();
                    _0x5cc086.rotate(_0x2a4e02.skinRot);
                    _0xd492a1(_0x19d6e2 + "_top", _0x5cc086, _0x7bbae4, _0x2a4e02);
                    _0x5cc086.restore();
                }
            }
            let _0x62a440 = {};
            let _0x195879 = {};

            function _0x2ac324(_0x203113, _0x479d1c, _0x44c808) {
                _0x1568d2 = _0x62a440[_0x203113];
                if (!_0x1568d2) {
                    let _0x2efba5 = new Image();
                    _0x2efba5.onload = function() {
                        this.isLoaded = true;
                        this.onload = null;
                    };
                    _0x2efba5.src = "https://moomoo.io/img/accessories/access_" + _0x203113 + ".png";
                    _0x62a440[_0x203113] = _0x2efba5;
                    _0x1568d2 = _0x2efba5;
                }
                let _0x28b60c = _0x195879[_0x203113];
                if (!_0x28b60c) {
                    for (let _0x2ec0d1 = 0; _0x2ec0d1 < _0x25434a.length; ++_0x2ec0d1) {
                        if (_0x25434a[_0x2ec0d1].id == _0x203113) {
                            _0x28b60c = _0x25434a[_0x2ec0d1];
                            break;
                        }
                    }
                    _0x195879[_0x203113] = _0x28b60c;
                }
                if (_0x1568d2.isLoaded) {
                    _0x479d1c.save();
                    _0x479d1c.translate(-20 - (_0x28b60c.xOff || 0), 0);
                    if (_0x28b60c.spin) {
                        _0x479d1c.rotate(_0x44c808.skinRot);
                    }
                    _0x479d1c.drawImage(_0x1568d2, -(_0x28b60c.scale / 2), -(_0x28b60c.scale / 2), _0x28b60c.scale, _0x28b60c.scale);
                    _0x479d1c.restore();
                }
            }
            var _0x2ab0d0 = {};
            var _0x93736a = {};

            function _0x12b6e5(_0x1e4967, _0x3ada21, _0x5ad76e) {
                _0x1568d2 = _0x2ab0d0[_0x1e4967];
                if (!_0x1568d2) {
                    var _0x3d4188 = new Image();
                    _0x3d4188.onload = function() {
                        this.isLoaded = true;
                        this.onload = null;
                    };
                    _0x3d4188.src = "https://moomoo.io/img/accessories/access_" + _0x1e4967 + ".png";
                    _0x2ab0d0[_0x1e4967] = _0x3d4188;
                    _0x1568d2 = _0x3d4188;
                }
                var _0x3c4f6f = _0x93736a[_0x1e4967];
                if (!_0x3c4f6f) {
                    for (var _0x27146e = 0; _0x27146e < _0x25434a.length; ++_0x27146e) {
                        if (_0x25434a[_0x27146e].id == _0x1e4967) {
                            _0x3c4f6f = _0x25434a[_0x27146e];
                            break;
                        }
                    }
                    _0x93736a[_0x1e4967] = _0x3c4f6f;
                }
                if (_0x1568d2.isLoaded) {
                    _0x3ada21.save();
                    _0x3ada21.translate(-20 - (_0x3c4f6f.xOff || 0), 0);
                    if (_0x3c4f6f.spin) {
                        _0x3ada21.rotate(_0x5ad76e.skinRot);
                    }
                    _0x3ada21.drawImage(_0x1568d2, -(_0x3c4f6f.scale / 2), -(_0x3c4f6f.scale / 2), _0x3c4f6f.scale, _0x3c4f6f.scale);
                    _0x3ada21.restore();
                }
            }
            let _0x5b9560 = {};

            function _0x56a9e5(_0x44a87b, _0x5b02b6, _0x17eff2) {
                for (let _0xe4f73 = 0; _0xe4f73 < _0x40c6a3.length; _0xe4f73++) {
                    _0x1d199f = _0x40c6a3[_0xe4f73];
                    if (_0x1d199f.active && _0x1d199f.layer == _0x44a87b && _0x1d199f.inWindow) {
                        _0x1d199f.update(_0x2618f8);
                        if (_0x1d199f.active && _0x4507e7(_0x1d199f.x - _0x5b02b6, _0x1d199f.y - _0x17eff2, _0x1d199f.scale)) {
                            _0x5c2ea7.save();
                            _0x5c2ea7.translate(_0x1d199f.x - _0x5b02b6, _0x1d199f.y - _0x17eff2);
                            _0x5c2ea7.rotate(_0x1d199f.dir);
                            _0xfae6e3(0, 0, _0x1d199f, _0x5c2ea7, 1);
                            _0x5c2ea7.restore();
                        }
                    }
                };
            }
            let _0x362331 = {};

            function _0xfae6e3(_0x12eaef, _0x202ba4, _0xbd550e, _0x4b1c28, _0x4fe4f3) {
                if (_0xbd550e.src) {
                    let _0x2b3cc3 = _0x4e0368.projectiles[_0xbd550e.indx].src;
                    let _0x3c8bf7 = _0x362331[_0x2b3cc3];
                    if (!_0x3c8bf7) {
                        _0x3c8bf7 = new Image();
                        _0x3c8bf7.onload = function() {
                            this.isLoaded = true;
                        };
                        _0x3c8bf7.src = "https://moomoo.io/img/weapons/" + _0x2b3cc3 + ".png";
                        _0x362331[_0x2b3cc3] = _0x3c8bf7;
                    }
                    if (_0x3c8bf7.isLoaded) {
                        _0x4b1c28.drawImage(_0x3c8bf7, _0x12eaef - _0xbd550e.scale / 2, _0x202ba4 - _0xbd550e.scale / 2, _0xbd550e.scale, _0xbd550e.scale);
                    }
                } else if (_0xbd550e.indx == 1) {
                    _0x4b1c28.fillStyle = "#939393";
                    _0x30a3cc(_0x12eaef, _0x202ba4, _0xbd550e.scale, _0x4b1c28);
                }
            }
            let _0x3eb2cc = {};

            function _0x349d3b(_0x5cbb08, _0x550f24) {
                let _0x317945 = _0x5cbb08.index;
                let _0x19325d = _0x3eb2cc[_0x317945];
                if (!_0x19325d) {
                    let _0x515dd6 = new Image();
                    _0x515dd6.onload = function() {
                        this.isLoaded = true;
                        this.onload = null;
                    };
                    _0x515dd6.src = "https://moomoo.io/img/animals/" + _0x5cbb08.src + ".png";
                    _0x19325d = _0x515dd6;
                    _0x3eb2cc[_0x317945] = _0x19325d;
                }
                if (_0x19325d.isLoaded) {
                    let _0x4d6ee5 = _0x5cbb08.scale * 1.2 * (_0x5cbb08.spriteMlt || 1);
                    _0x550f24.drawImage(_0x19325d, -_0x4d6ee5, -_0x4d6ee5, _0x4d6ee5 * 2, _0x4d6ee5 * 2);
                }
            }

            function _0x14baec(_0x558158, _0x3b782e, _0x447594, _0x48396f) {
                let _0x1d8d6c = _0x18564b.riverWidth + _0x48396f;
                let _0x290b51 = _0x18564b.mapScale / 2 - _0x3b782e - _0x1d8d6c / 2;
                if (_0x290b51 < _0x4483d4 && _0x290b51 + _0x1d8d6c > 0) {
                    _0x447594.fillRect(0, _0x290b51, _0x12111d, _0x1d8d6c);
                }
            }

            function _0x219c52(_0x47db4f, _0x5842c6, _0x1bedf7, _0x50a899, _0x18deec) {
                var _0x5d5149 = _0x47db4f.src + (_0x5842c6 || "");
                var _0x4e14c8 = _0x5b9560[_0x5d5149];
                if (!_0x4e14c8) {
                    _0x4e14c8 = new Image();
                    _0x4e14c8.onload = function() {
                        this.isLoaded = true;
                    };
                    _0x4e14c8.src = ".././img/weapons/" + _0x5d5149 + ".png";
                    _0x5b9560[_0x5d5149] = _0x4e14c8;
                }
                if (_0x4e14c8.isLoaded) {
                    _0x18deec.drawImage(_0x4e14c8, _0x1bedf7 + _0x47db4f.xOff - _0x47db4f.length / 2, _0x50a899 + _0x47db4f.yOff - _0x47db4f.width / 2, _0x47db4f.length, _0x47db4f.width);
                }
            }
            var _0x3f6734 = {};
            let _0x123ba0 = {};

            function _0x306dfd(_0x1a9961) {
                var _0x8b8df0 = _0x1a9961.y >= _0x18564b.mapScale - _0x18564b.snowBiomeTop ? 2 : _0x1a9961.y <= _0x18564b.snowBiomeTop ? 1 : 0;
                var _0x4808ce = _0x1a9961.type + "_" + _0x1a9961.scale + "_" + _0x8b8df0;
                var _0x34cc40 = _0x123ba0[_0x4808ce];
                if (!_0x34cc40) {
                    var _0x43e172 = document.createElement("canvas");
                    _0x43e172.width = _0x43e172.height = _0x1a9961.scale * 2.1 + _0x9b9370;
                    var _0xbb07a = _0x43e172.getContext("2d");
                    _0xbb07a.translate(_0x43e172.width / 2, _0x43e172.height / 2);
                    _0xbb07a.rotate(_0x1b05b9.randFloat(0, Math.PI));
                    _0xbb07a.strokeStyle = _0x2dca67;
                    _0xbb07a.lineWidth = _0x9b9370;
                    let _0x57e6b4 = [
                        ["#b1d959", "#95b946"],
                        ["#bade6e", "#aac76b"],
                        ["#a7d544", "#86a63f"],
                        ["#b4db62", "#9ebf57"]
                    ];
                    let _0x453f87 = _0x57e6b4[Math.floor(Math.random() * _0x57e6b4.length)];
                    if (_0x1a9961.type == 0) {
                        var _0x36c672;
                        for (var _0x308624 = 0; _0x308624 < 2; ++_0x308624) {
                            _0x36c672 = _0x1d199f.scale * (!_0x308624 ? 1 : 0.5);
                            _0x38580e(_0xbb07a, 7, _0x36c672, _0x36c672 * 0.7);
                            _0xbb07a.fillStyle = !_0x8b8df0 ? !_0x308624 ? "#9ebf57" : "#b4db62" : !_0x308624 ? "#e3f1f4" : "#fff";
                            _0xbb07a.fill();
                            if (!_0x308624) {
                                _0xbb07a.stroke();
                            }
                        }
                    } else if (_0x1a9961.type == 1) {
                        if (_0x8b8df0 == 2) {
                            _0xbb07a.fillStyle = "#606060";
                            _0x38580e(_0xbb07a, 6, _0x1a9961.scale * 0.3, _0x1a9961.scale * 0.71);
                            _0xbb07a.fill();
                            _0xbb07a.stroke();
                            _0xbb07a.fillStyle = "#89a54c";
                            _0x30a3cc(0, 0, _0x1a9961.scale * 0.55, _0xbb07a);
                            _0xbb07a.fillStyle = "#a5c65b";
                            _0x30a3cc(0, 0, _0x1a9961.scale * 0.3, _0xbb07a, true);
                        } else {
                            _0x3dd2c0(_0xbb07a, 6, _0x1d199f.scale, _0x1d199f.scale * 0.7);
                            _0xbb07a.fillStyle = _0x8b8df0 ? "#e3f1f4" : "#89a54c";
                            _0xbb07a.fill();
                            _0xbb07a.stroke();
                            _0xbb07a.fillStyle = _0x8b8df0 ? "#6a64af" : "#c15555";
                            var _0x559260;
                            var _0xf0c693 = 4;
                            var _0x2ef279 = _0x1327ef / _0xf0c693;
                            for (var _0x308624 = 0; _0x308624 < _0xf0c693; ++_0x308624) {
                                _0x559260 = _0x1b05b9.randInt(_0x1d199f.scale / 3.5, _0x1d199f.scale / 2.3);
                                _0x30a3cc(_0x559260 * Math.cos(_0x2ef279 * _0x308624), _0x559260 * Math.sin(_0x2ef279 * _0x308624), _0x1b05b9.randInt(10, 12), _0xbb07a);
                            }
                        }
                    } else if (_0x1a9961.type == 2 || _0x1a9961.type == 3) {
                        _0xbb07a.fillStyle = _0x1a9961.type == 2 ? _0x8b8df0 == 2 ? "#938d77" : "#939393" : "#e0c655";
                        _0x38580e(_0xbb07a, 3, _0x1a9961.scale, _0x1a9961.scale);
                        _0xbb07a.fill();
                        _0xbb07a.stroke();
                        _0xbb07a.fillStyle = _0x1a9961.type == 2 ? _0x8b8df0 == 2 ? "#b2ab90" : "#bcbcbc" : "#ebdca3";
                        _0x38580e(_0xbb07a, 3, _0x1a9961.scale * 0.55, _0x1a9961.scale * 0.65);
                        _0xbb07a.fill();
                    }
                    _0x34cc40 = _0x43e172;
                    _0x123ba0[_0x4808ce] = _0x34cc40;
                }
                return _0x34cc40;
            }
            let _0x4cdb85 = [];

            function _0xba3cea(_0x56e665, _0x1147a3) {
                var _0x69fda5 = _0x4cdb85[_0x56e665.id];
                if (!_0x69fda5 || _0x1147a3) {
                    var _0x5f0d93 = document.createElement("canvas");
                    _0x5f0d93.width = _0x5f0d93.height = _0x56e665.scale * 2.5 + _0x9b9370 + (_0x4e0368.list[_0x56e665.id].spritePadding || 0);
                    var _0x13ef1c = _0x5f0d93.getContext("2d");
                    _0x13ef1c.translate(_0x5f0d93.width / 2, _0x5f0d93.height / 2);
                    _0x13ef1c.rotate(_0x1147a3 ? 0 : Math.PI / 2);
                    _0x13ef1c.strokeStyle = _0x2dca67;
                    _0x13ef1c.lineWidth = _0x9b9370 * (_0x1147a3 ? _0x5f0d93.width / 81 : 1);
                    if (_0x56e665.name == "apple") {
                        _0x13ef1c.fillStyle = "#c15555";
                        _0x30a3cc(0, 0, _0x56e665.scale, _0x13ef1c);
                        _0x13ef1c.fillStyle = "#89a54c";
                        var _0x408e47 = -(Math.PI / 2);
                        _0x3fb8b6(_0x56e665.scale * Math.cos(_0x408e47), _0x56e665.scale * Math.sin(_0x408e47), 25, _0x408e47 + Math.PI / 2, _0x13ef1c);
                    } else if (_0x56e665.name == "cookie") {
                        _0x13ef1c.fillStyle = "#cca861";
                        _0x30a3cc(0, 0, _0x56e665.scale, _0x13ef1c);
                        _0x13ef1c.fillStyle = "#937c4b";
                        var _0xb37c11 = 4;
                        var _0x362195 = _0x1327ef / _0xb37c11;
                        var _0x43bb8a;
                        for (var _0x3aaca2 = 0; _0x3aaca2 < _0xb37c11; ++_0x3aaca2) {
                            _0x43bb8a = _0x1b05b9.randInt(_0x56e665.scale / 2.5, _0x56e665.scale / 1.7);
                            _0x30a3cc(_0x43bb8a * Math.cos(_0x362195 * _0x3aaca2), _0x43bb8a * Math.sin(_0x362195 * _0x3aaca2), _0x1b05b9.randInt(4, 5), _0x13ef1c, true);
                        }
                    } else if (_0x56e665.name == "cheese") {
                        _0x13ef1c.fillStyle = "#f4f3ac";
                        _0x30a3cc(0, 0, _0x56e665.scale, _0x13ef1c);
                        _0x13ef1c.fillStyle = "#c3c28b";
                        var _0xb37c11 = 4;
                        var _0x362195 = _0x1327ef / _0xb37c11;
                        var _0x43bb8a;
                        for (var _0x3aaca2 = 0; _0x3aaca2 < _0xb37c11; ++_0x3aaca2) {
                            _0x43bb8a = _0x1b05b9.randInt(_0x56e665.scale / 2.5, _0x56e665.scale / 1.7);
                            _0x30a3cc(_0x43bb8a * Math.cos(_0x362195 * _0x3aaca2), _0x43bb8a * Math.sin(_0x362195 * _0x3aaca2), _0x1b05b9.randInt(4, 5), _0x13ef1c, true);
                        }
                    } else if (_0x56e665.name == "wood wall" || _0x56e665.name == "stone wall" || _0x56e665.name == "castle wall") {
                        _0x13ef1c.fillStyle = _0x56e665.name == "castle wall" ? "#83898e" : _0x56e665.name == "wood wall" ? "#a5974c" : "#939393";
                        var _0x1d1d16 = _0x56e665.name == "castle wall" ? 4 : 3;
                        _0x38580e(_0x13ef1c, _0x1d1d16, _0x56e665.scale * 1.1, _0x56e665.scale * 1.1);
                        _0x13ef1c.fill();
                        _0x13ef1c.stroke();
                        _0x13ef1c.fillStyle = _0x56e665.name == "castle wall" ? "#9da4aa" : _0x56e665.name == "wood wall" ? "#c9b758" : "#bcbcbc";
                        _0x38580e(_0x13ef1c, _0x1d1d16, _0x56e665.scale * 0.65, _0x56e665.scale * 0.65);
                        _0x13ef1c.fill();
                    } else if (_0x56e665.name == "spikes" || _0x56e665.name == "greater spikes" || _0x56e665.name == "poison spikes" || _0x56e665.name == "spinning spikes") {
                        _0x13ef1c.fillStyle = _0x56e665.name == "poison spikes" ? "#7b935d" : "#939393";
                        var _0x346ec9 = _0x56e665.scale * 0.6;
                        _0x38580e(_0x13ef1c, _0x56e665.name == "spikes" ? 5 : 6, _0x56e665.scale, _0x346ec9);
                        _0x13ef1c.fill();
                        _0x13ef1c.stroke();
                        _0x13ef1c.fillStyle = "#a5974c";
                        _0x30a3cc(0, 0, _0x346ec9, _0x13ef1c);
                        _0x13ef1c.fillStyle = "#c9b758";
                        _0x30a3cc(0, 0, _0x346ec9 / 2, _0x13ef1c, true);
                    } else if (_0x56e665.name == "windmill" || _0x56e665.name == "faster windmill" || _0x56e665.name == "power mill") {
                        _0x13ef1c.fillStyle = "#a5974c";
                        _0x30a3cc(0, 0, _0x56e665.scale, _0x13ef1c);
                        _0x13ef1c.fillStyle = "#c9b758";
                        _0x410e99(0, 0, _0x56e665.scale * 1.5, 29, 4, _0x13ef1c);
                        _0x13ef1c.fillStyle = "#a5974c";
                        _0x30a3cc(0, 0, _0x56e665.scale * 0.5, _0x13ef1c);
                    } else if (_0x56e665.name == "mine") {
                        _0x13ef1c.fillStyle = "#939393";
                        _0x38580e(_0x13ef1c, 3, _0x56e665.scale, _0x56e665.scale);
                        _0x13ef1c.fill();
                        _0x13ef1c.stroke();
                        _0x13ef1c.fillStyle = "#bcbcbc";
                        _0x38580e(_0x13ef1c, 3, _0x56e665.scale * 0.55, _0x56e665.scale * 0.65);
                        _0x13ef1c.fill();
                    } else if (_0x56e665.name == "sapling") {
                        for (var _0x3aaca2 = 0; _0x3aaca2 < 2; ++_0x3aaca2) {
                            var _0x346ec9 = _0x56e665.scale * (!_0x3aaca2 ? 1 : 0.5);
                            _0x38580e(_0x13ef1c, 7, _0x346ec9, _0x346ec9 * 0.7);
                            _0x13ef1c.fillStyle = !_0x3aaca2 ? "#9ebf57" : "#b4db62";
                            _0x13ef1c.fill();
                            if (!_0x3aaca2) {
                                _0x13ef1c.stroke();
                            }
                        }
                    } else if (_0x56e665.name == "pit trap") {
                        _0x13ef1c.fillStyle = "#a5974c";
                        _0x38580e(_0x13ef1c, 3, _0x56e665.scale * 1.1, _0x56e665.scale * 1.1);
                        _0x13ef1c.fill();
                        _0x13ef1c.stroke();
                        _0x13ef1c.fillStyle = _0x2dca67;
                        _0x38580e(_0x13ef1c, 3, _0x56e665.scale * 0.65, _0x56e665.scale * 0.65);
                        _0x13ef1c.fill();
                    } else if (_0x56e665.name == "boost pad") {
                        _0x13ef1c.fillStyle = "#7e7f82";
                        _0x5f200e(0, 0, _0x56e665.scale * 2, _0x56e665.scale * 2, _0x13ef1c);
                        _0x13ef1c.fill();
                        _0x13ef1c.stroke();
                        _0x13ef1c.fillStyle = "#dbd97d";
                        _0x1fc221(_0x56e665.scale * 1, _0x13ef1c);
                    } else if (_0x56e665.name == "turret") {
                        _0x13ef1c.fillStyle = "#a5974c";
                        _0x30a3cc(0, 0, _0x56e665.scale, _0x13ef1c);
                        _0x13ef1c.fill();
                        _0x13ef1c.stroke();
                        _0x13ef1c.fillStyle = "#939393";
                        var _0x552da3 = 50;
                        _0x5f200e(0, -_0x552da3 / 2, _0x56e665.scale * 0.9, _0x552da3, _0x13ef1c);
                        _0x30a3cc(0, 0, _0x56e665.scale * 0.6, _0x13ef1c);
                        _0x13ef1c.fill();
                        _0x13ef1c.stroke();
                    } else if (_0x56e665.name == "platform") {
                        _0x13ef1c.fillStyle = "#cebd5f";
                        var _0x58216b = 4;
                        var _0x33d9f0 = _0x56e665.scale * 2;
                        var _0x417009 = _0x33d9f0 / _0x58216b;
                        var _0x73e8d2 = -(_0x56e665.scale / 2);
                        for (var _0x3aaca2 = 0; _0x3aaca2 < _0x58216b; ++_0x3aaca2) {
                            _0x5f200e(_0x73e8d2 - _0x417009 / 2, 0, _0x417009, _0x56e665.scale * 2, _0x13ef1c);
                            _0x13ef1c.fill();
                            _0x13ef1c.stroke();
                            _0x73e8d2 += _0x33d9f0 / _0x58216b;
                        }
                    } else if (_0x56e665.name == "healing pad") {
                        _0x13ef1c.fillStyle = "#7e7f82";
                        _0x5f200e(0, 0, _0x56e665.scale * 2, _0x56e665.scale * 2, _0x13ef1c);
                        _0x13ef1c.fill();
                        _0x13ef1c.stroke();
                        _0x13ef1c.fillStyle = "#db6e6e";
                        _0x410e99(0, 0, _0x56e665.scale * 0.65, 20, 4, _0x13ef1c, true);
                    } else if (_0x56e665.name == "spawn pad") {
                        _0x13ef1c.fillStyle = "#7e7f82";
                        _0x5f200e(0, 0, _0x56e665.scale * 2, _0x56e665.scale * 2, _0x13ef1c);
                        _0x13ef1c.fill();
                        _0x13ef1c.stroke();
                        _0x13ef1c.fillStyle = "#71aad6";
                        _0x30a3cc(0, 0, _0x56e665.scale * 0.6, _0x13ef1c);
                    } else if (_0x56e665.name == "blocker") {
                        _0x13ef1c.fillStyle = "#7e7f82";
                        _0x30a3cc(0, 0, _0x56e665.scale, _0x13ef1c);
                        _0x13ef1c.fill();
                        _0x13ef1c.stroke();
                        _0x13ef1c.rotate(Math.PI / 4);
                        _0x13ef1c.fillStyle = "#db6e6e";
                        _0x410e99(0, 0, _0x56e665.scale * 0.65, 20, 4, _0x13ef1c, true);
                    } else if (_0x56e665.name == "teleporter") {
                        _0x13ef1c.fillStyle = "#7e7f82";
                        _0x30a3cc(0, 0, _0x56e665.scale, _0x13ef1c);
                        _0x13ef1c.fill();
                        _0x13ef1c.stroke();
                        _0x13ef1c.rotate(Math.PI / 4);
                        _0x13ef1c.fillStyle = "#d76edb";
                        _0x30a3cc(0, 0, _0x56e665.scale * 0.5, _0x13ef1c, true);
                    }
                    _0x69fda5 = _0x5f0d93;
                    if (!_0x1147a3) {
                        _0x4cdb85[_0x56e665.id] = _0x69fda5;
                    }
                }
                return _0x69fda5;
            }

            function _0x23ad14(_0x1f99b2, _0x1af0b1, _0x5be476) {
                let _0x12c340 = _0x5c2ea7;
                let _0x2c1a33 = _0x1f99b2.name == "windmill" ? _0x4e0368.list[4].scale : _0x1f99b2.scale;
                _0x12c340.save();
                _0x12c340.translate(_0x1af0b1, _0x5be476);
                _0x12c340.rotate(_0x1f99b2.dir);
                _0x12c340.strokeStyle = _0x2dca67;
                _0x12c340.lineWidth = _0x9b9370;
                if (_0x1f99b2.name == "apple") {
                    _0x12c340.fillStyle = "#c15555";
                    _0x30a3cc(0, 0, _0x1f99b2.scale, _0x12c340);
                    _0x12c340.fillStyle = "#89a54c";
                    let _0x5b8375 = -(Math.PI / 2);
                    _0x3fb8b6(_0x1f99b2.scale * Math.cos(_0x5b8375), _0x1f99b2.scale * Math.sin(_0x5b8375), 25, _0x5b8375 + Math.PI / 2, _0x12c340);
                } else if (_0x1f99b2.name == "cookie") {
                    _0x12c340.fillStyle = "#cca861";
                    _0x30a3cc(0, 0, _0x1f99b2.scale, _0x12c340);
                    _0x12c340.fillStyle = "#937c4b";
                    let _0x12c958 = 4;
                    let _0x935ab8 = Math.PI * 2 / _0x12c958;
                    let _0x385ea3;
                    for (let _0x55635e = 0; _0x55635e < _0x12c958; ++_0x55635e) {
                        _0x385ea3 = _0x1b05b9.randInt(_0x1f99b2.scale / 2.5, _0x1f99b2.scale / 1.7);
                        _0x30a3cc(_0x385ea3 * Math.cos(_0x935ab8 * _0x55635e), _0x385ea3 * Math.sin(_0x935ab8 * _0x55635e), _0x1b05b9.randInt(4, 5), _0x12c340, true);
                    }
                } else if (_0x1f99b2.name == "cheese") {
                    _0x12c340.fillStyle = "#f4f3ac";
                    _0x30a3cc(0, 0, _0x1f99b2.scale, _0x12c340);
                    _0x12c340.fillStyle = "#c3c28b";
                    let _0x4743de = 4;
                    let _0x3a3d91 = Math.PI * 2 / _0x4743de;
                    let _0x2c1939;
                    for (let _0x37d09c = 0; _0x37d09c < _0x4743de; ++_0x37d09c) {
                        _0x2c1939 = _0x1b05b9.randInt(_0x1f99b2.scale / 2.5, _0x1f99b2.scale / 1.7);
                        _0x30a3cc(_0x2c1939 * Math.cos(_0x3a3d91 * _0x37d09c), _0x2c1939 * Math.sin(_0x3a3d91 * _0x37d09c), _0x1b05b9.randInt(4, 5), _0x12c340, true);
                    }
                } else if (_0x1f99b2.name == "wood wall" || _0x1f99b2.name == "stone wall" || _0x1f99b2.name == "castle wall") {
                    _0x12c340.fillStyle = _0x1f99b2.name == "castle wall" ? "#83898e" : _0x1f99b2.name == "wood wall" ? "#a5974c" : "#939393";
                    let _0xb0d164 = _0x1f99b2.name == "castle wall" ? 4 : 3;
                    _0x38580e(_0x12c340, _0xb0d164, _0x1f99b2.scale * 1.1, _0x1f99b2.scale * 1.1);
                    _0x12c340.fill();
                    _0x12c340.stroke();
                    _0x12c340.fillStyle = _0x1f99b2.name == "castle wall" ? "#9da4aa" : _0x1f99b2.name == "wood wall" ? "#c9b758" : "#bcbcbc";
                    _0x38580e(_0x12c340, _0xb0d164, _0x1f99b2.scale * 0.65, _0x1f99b2.scale * 0.65);
                    _0x12c340.fill();
                } else if (_0x1f99b2.name == "spikes" || _0x1f99b2.name == "greater spikes" || _0x1f99b2.name == "poison spikes" || _0x1f99b2.name == "spinning spikes") {
                    _0x12c340.fillStyle = _0x1f99b2.name == "poison spikes" ? "#7b935d" : "#939393";
                    let _0x320153 = _0x1f99b2.scale * 0.6;
                    _0x38580e(_0x12c340, _0x1f99b2.name == "spikes" ? 5 : 6, _0x1f99b2.scale, _0x320153);
                    _0x12c340.fill();
                    _0x12c340.stroke();
                    _0x12c340.fillStyle = "#a5974c";
                    _0x30a3cc(0, 0, _0x320153, _0x12c340);
                    _0x12c340.fillStyle = "#c9b758";
                    _0x30a3cc(0, 0, _0x320153 / 2, _0x12c340, true);
                } else if (_0x1f99b2.name == "windmill" || _0x1f99b2.name == "faster windmill" || _0x1f99b2.name == "power mill") {
                    _0x12c340.fillStyle = "#a5974c";
                    _0x30a3cc(0, 0, _0x2c1a33, _0x12c340);
                    _0x12c340.fillStyle = "#c9b758";
                    _0x410e99(0, 0, _0x2c1a33 * 1.5, 29, 4, _0x12c340);
                    _0x12c340.fillStyle = "#a5974c";
                    _0x30a3cc(0, 0, _0x2c1a33 * 0.5, _0x12c340);
                } else if (_0x1f99b2.name == "mine") {
                    _0x12c340.fillStyle = "#939393";
                    _0x38580e(_0x12c340, 3, _0x1f99b2.scale, _0x1f99b2.scale);
                    _0x12c340.fill();
                    _0x12c340.stroke();
                    _0x12c340.fillStyle = "#bcbcbc";
                    _0x38580e(_0x12c340, 3, _0x1f99b2.scale * 0.55, _0x1f99b2.scale * 0.65);
                    _0x12c340.fill();
                } else if (_0x1f99b2.name == "sapling") {
                    for (let _0x27f567 = 0; _0x27f567 < 2; ++_0x27f567) {
                        let _0x112fac = _0x1f99b2.scale * (!_0x27f567 ? 1 : 0.5);
                        _0x38580e(_0x12c340, 7, _0x112fac, _0x112fac * 0.7);
                        _0x12c340.fillStyle = !_0x27f567 ? "#9ebf57" : "#b4db62";
                        _0x12c340.fill();
                        if (!_0x27f567) {
                            _0x12c340.stroke();
                        }
                    }
                } else if (_0x1f99b2.name == "pit trap") {
                    _0x12c340.fillStyle = "#a5974c";
                    _0x38580e(_0x12c340, 3, _0x1f99b2.scale * 1.1, _0x1f99b2.scale * 1.1);
                    _0x12c340.fill();
                    _0x12c340.stroke();
                    _0x12c340.fillStyle = _0x2dca67;
                    _0x38580e(_0x12c340, 3, _0x1f99b2.scale * 0.65, _0x1f99b2.scale * 0.65);
                    _0x12c340.fill();
                } else if (_0x1f99b2.name == "boost pad") {
                    _0x12c340.fillStyle = "#7e7f82";
                    _0x5f200e(0, 0, _0x1f99b2.scale * 2, _0x1f99b2.scale * 2, _0x12c340);
                    _0x12c340.fill();
                    _0x12c340.stroke();
                    _0x12c340.fillStyle = "#dbd97d";
                    _0x1fc221(_0x1f99b2.scale * 1, _0x12c340);
                } else if (_0x1f99b2.name == "turret") {
                    _0x12c340.fillStyle = "#a5974c";
                    _0x30a3cc(0, 0, _0x1f99b2.scale, _0x12c340);
                    _0x12c340.fill();
                    _0x12c340.stroke();
                    _0x12c340.fillStyle = "#939393";
                    let _0x11af38 = 50;
                    _0x5f200e(0, -_0x11af38 / 2, _0x1f99b2.scale * 0.9, _0x11af38, _0x12c340);
                    _0x30a3cc(0, 0, _0x1f99b2.scale * 0.6, _0x12c340);
                    _0x12c340.fill();
                    _0x12c340.stroke();
                } else if (_0x1f99b2.name == "platform") {
                    _0x12c340.fillStyle = "#cebd5f";
                    let _0x67a68d = 4;
                    let _0x2446d4 = _0x1f99b2.scale * 2;
                    let _0x2a8603 = _0x2446d4 / _0x67a68d;
                    let _0x47e434 = -(_0x1f99b2.scale / 2);
                    for (let _0x53a8cb = 0; _0x53a8cb < _0x67a68d; ++_0x53a8cb) {
                        _0x5f200e(_0x47e434 - _0x2a8603 / 2, 0, _0x2a8603, _0x1f99b2.scale * 2, _0x12c340);
                        _0x12c340.fill();
                        _0x12c340.stroke();
                        _0x47e434 += _0x2446d4 / _0x67a68d;
                    }
                } else if (_0x1f99b2.name == "healing pad") {
                    _0x12c340.fillStyle = "#7e7f82";
                    _0x5f200e(0, 0, _0x1f99b2.scale * 2, _0x1f99b2.scale * 2, _0x12c340);
                    _0x12c340.fill();
                    _0x12c340.stroke();
                    _0x12c340.fillStyle = "#db6e6e";
                    _0x410e99(0, 0, _0x1f99b2.scale * 0.65, 20, 4, _0x12c340, true);
                } else if (_0x1f99b2.name == "spawn pad") {
                    _0x12c340.fillStyle = "#7e7f82";
                    _0x5f200e(0, 0, _0x1f99b2.scale * 2, _0x1f99b2.scale * 2, _0x12c340);
                    _0x12c340.fill();
                    _0x12c340.stroke();
                    _0x12c340.fillStyle = "#71aad6";
                    _0x30a3cc(0, 0, _0x1f99b2.scale * 0.6, _0x12c340);
                } else if (_0x1f99b2.name == "blocker") {
                    _0x12c340.fillStyle = "#7e7f82";
                    _0x30a3cc(0, 0, _0x1f99b2.scale, _0x12c340);
                    _0x12c340.fill();
                    _0x12c340.stroke();
                    _0x12c340.rotate(Math.PI / 4);
                    _0x12c340.fillStyle = "#db6e6e";
                    _0x410e99(0, 0, _0x1f99b2.scale * 0.65, 20, 4, _0x12c340, true);
                } else if (_0x1f99b2.name == "teleporter") {
                    _0x12c340.fillStyle = "#7e7f82";
                    _0x30a3cc(0, 0, _0x1f99b2.scale, _0x12c340);
                    _0x12c340.fill();
                    _0x12c340.stroke();
                    _0x12c340.rotate(Math.PI / 4);
                    _0x12c340.fillStyle = "#d76edb";
                    _0x30a3cc(0, 0, _0x1f99b2.scale * 0.5, _0x12c340, true);
                }
                _0x12c340.restore();
            }
            let _0x2547a7 = [];

            function _0x1970f9(_0x2ccba0, _0x15e7e9) {
                var _0x592fb1 = _0x4cdb85[_0x2ccba0.id + (_0x40ec6a && _0x2ccba0.owner && _0x2ccba0.owner.sid == _0x40ec6a.sid ? 0 : _0x40ec6a && _0x40ec6a.team && _0x2ccba0.owner && _0x495258(_0x2ccba0.owner.sid) ? 0 : 50)];
                if (!_0x592fb1 || _0x15e7e9) {
                    var _0x121af5 = document.createElement("canvas");
                    _0x121af5.width = _0x121af5.height = _0x2ccba0.scale * 2.5 + _0x9b9370 + (_0x4e0368.list[_0x2ccba0.id].spritePadding || 0);
                    var _0x277863 = _0x121af5.getContext("2d");
                    _0x277863.translate(_0x121af5.width / 2, _0x121af5.height / 2);
                    _0x277863.rotate(_0x15e7e9 ? 0 : Math.PI / 2);
                    _0x277863.strokeStyle = _0x2dca67;
                    _0x277863.lineWidth = _0x9b9370 * (_0x15e7e9 ? _0x121af5.width / 81 : 1);
                    if (_0x2ccba0.name == "apple") {
                        _0x277863.fillStyle = "#c15555";
                        _0x30a3cc(0, 0, _0x2ccba0.scale, _0x277863);
                        _0x277863.fillStyle = "#89a54c";
                        var _0x19a18a = -(Math.PI / 2);
                        _0x3fb8b6(_0x2ccba0.scale * Math.cos(_0x19a18a), _0x2ccba0.scale * Math.sin(_0x19a18a), 25, _0x19a18a + Math.PI / 2, _0x277863);
                    } else if (_0x2ccba0.name == "cookie") {
                        _0x277863.fillStyle = "#cca861";
                        _0x30a3cc(0, 0, _0x2ccba0.scale, _0x277863);
                        _0x277863.fillStyle = "#937c4b";
                        var _0x4d9b59 = 4;
                        var _0x2a45c5 = _0x1327ef / _0x4d9b59;
                        var _0x345190;
                        for (var _0x42502b = 0; _0x42502b < _0x4d9b59; ++_0x42502b) {
                            _0x345190 = _0x1b05b9.randInt(_0x2ccba0.scale / 2.5, _0x2ccba0.scale / 1.7);
                            _0x30a3cc(_0x345190 * Math.cos(_0x2a45c5 * _0x42502b), _0x345190 * Math.sin(_0x2a45c5 * _0x42502b), _0x1b05b9.randInt(4, 5), _0x277863, true);
                        }
                    } else if (_0x2ccba0.name == "cheese") {
                        _0x277863.fillStyle = "#f4f3ac";
                        _0x30a3cc(0, 0, _0x2ccba0.scale, _0x277863);
                        _0x277863.fillStyle = "#c3c28b";
                        var _0x4d9b59 = 4;
                        var _0x2a45c5 = _0x1327ef / _0x4d9b59;
                        var _0x345190;
                        for (var _0x42502b = 0; _0x42502b < _0x4d9b59; ++_0x42502b) {
                            _0x345190 = _0x1b05b9.randInt(_0x2ccba0.scale / 2.5, _0x2ccba0.scale / 1.7);
                            _0x30a3cc(_0x345190 * Math.cos(_0x2a45c5 * _0x42502b), _0x345190 * Math.sin(_0x2a45c5 * _0x42502b), _0x1b05b9.randInt(4, 5), _0x277863, true);
                        }
                    } else if (_0x2ccba0.name == "wood wall" || _0x2ccba0.name == "stone wall" || _0x2ccba0.name == "castle wall") {
                        _0x277863.fillStyle = _0x2ccba0.name == "castle wall" ? "#83898e" : _0x2ccba0.name == "wood wall" ? "#a5974c" : "#939393";
                        var _0x2efa5f = _0x2ccba0.name == "castle wall" ? 4 : 3;
                        _0x38580e(_0x277863, _0x2efa5f, _0x2ccba0.scale * 1.1, _0x2ccba0.scale * 1.1);
                        _0x277863.fill();
                        _0x277863.stroke();
                        _0x277863.fillStyle = _0x2ccba0.name == "castle wall" ? "#9da4aa" : _0x2ccba0.name == "wood wall" ? "#c9b758" : "#bcbcbc";
                        _0x38580e(_0x277863, _0x2efa5f, _0x2ccba0.scale * 0.65, _0x2ccba0.scale * 0.65);
                        _0x277863.fill();
                    } else if (_0x2ccba0.name == "spikes" || _0x2ccba0.name == "greater spikes" || _0x2ccba0.name == "poison spikes" || _0x2ccba0.name == "spinning spikes") {
                        _0x277863.fillStyle = _0x2ccba0.name == "poison spikes" ? "#7b935d" : "#939393";
                        var _0x4a357d = _0x2ccba0.scale * 0.6;
                        _0x38580e(_0x277863, _0x2ccba0.name == "spikes" ? 5 : 6, _0x2ccba0.scale, _0x4a357d);
                        _0x277863.fill();
                        _0x277863.stroke();
                        _0x277863.fillStyle = "#a5974c";
                        _0x30a3cc(0, 0, _0x4a357d, _0x277863);
                        _0x277863.fillStyle = _0x40ec6a && _0x2ccba0.owner && _0x2ccba0.owner.sid == _0x40ec6a.sid ? "#c9b758" : _0x40ec6a && _0x40ec6a.team && _0x2ccba0.owner && _0x495258(_0x2ccba0.owner.sid) ? "#c9b758" : "#A52A2A";
                        _0x277863.globalAlpha = 1;
                        _0x30a3cc(0, 0, _0x2ccba0.scale, _0x277863, 10, 100);
                        _0x30a3cc(0, 0, _0x4a357d / 2, _0x277863, true);
                    } else if (_0x2ccba0.name == "windmill" || _0x2ccba0.name == "faster windmill" || _0x2ccba0.name == "power mill") {
                        _0x277863.fillStyle = "#a5974c";
                        _0x30a3cc(0, 0, _0x2ccba0.scale, _0x277863);
                        _0x277863.fillStyle = "#c9b758";
                        _0x410e99(0, 0, _0x2ccba0.scale * 1.5, 29, 4, _0x277863);
                        _0x277863.fillStyle = "#a5974c";
                        _0x30a3cc(0, 0, _0x2ccba0.scale * 0.5, _0x277863);
                    } else if (_0x2ccba0.name == "mine") {
                        _0x277863.fillStyle = "#939393";
                        _0x38580e(_0x277863, 3, _0x2ccba0.scale, _0x2ccba0.scale);
                        _0x277863.fill();
                        _0x277863.stroke();
                        _0x277863.fillStyle = "#bcbcbc";
                        _0x38580e(_0x277863, 3, _0x2ccba0.scale * 0.55, _0x2ccba0.scale * 0.65);
                        _0x277863.fill();
                    } else if (_0x2ccba0.name == "sapling") {
                        for (var _0x42502b = 0; _0x42502b < 2; ++_0x42502b) {
                            var _0x4a357d = _0x2ccba0.scale * (!_0x42502b ? 1 : 0.5);
                            _0x38580e(_0x277863, 7, _0x4a357d, _0x4a357d * 0.7);
                            _0x277863.fillStyle = !_0x42502b ? "#9ebf57" : "#b4db62";
                            _0x277863.fill();
                            if (!_0x42502b) {
                                _0x277863.stroke();
                            }
                        }
                    } else if (_0x2ccba0.name == "pit trap") {
                        _0x277863.fillStyle = "#a5974c";
                        _0x38580e(_0x277863, 3, _0x2ccba0.scale * 1.1, _0x2ccba0.scale * 1.1);
                        _0x277863.fill();
                        _0x277863.stroke();
                        _0x277863.fillStyle = _0x40ec6a && _0x2ccba0.owner && _0x2ccba0.owner.sid == _0x40ec6a.sid ? _0x2dca67 : _0x40ec6a && _0x40ec6a.team && _0x2ccba0.owner && _0x495258(_0x2ccba0.owner.sid) ? _0x2dca67 : "#AD1E0090";
                        _0x277863.globalAlpha = 1;
                        _0x30a3cc(0, 0, _0x2ccba0.scale, _0x277863, 10, 100);
                        _0x38580e(_0x277863, 3, _0x2ccba0.scale * 0.65, _0x2ccba0.scale * 0.65);
                        _0x277863.fill();
                    } else if (_0x2ccba0.name == "boost pad") {
                        _0x277863.fillStyle = "#7e7f82";
                        _0x5f200e(0, 0, _0x2ccba0.scale * 2, _0x2ccba0.scale * 2, _0x277863);
                        _0x277863.fill();
                        _0x277863.stroke();
                        _0x277863.fillStyle = "#dbd97d";
                        _0x1fc221(_0x2ccba0.scale * 1, _0x277863);
                    } else if (_0x2ccba0.name == "turret") {
                        _0x277863.fillStyle = "#a5974c";
                        _0x30a3cc(0, 0, _0x2ccba0.scale, _0x277863);
                        _0x277863.fill();
                        _0x277863.stroke();
                        _0x277863.fillStyle = "#939393";
                        var _0x245a1e = 50;
                        _0x5f200e(0, -_0x245a1e / 2, _0x2ccba0.scale * 0.9, _0x245a1e, _0x277863);
                        _0x30a3cc(0, 0, _0x2ccba0.scale * 0.6, _0x277863);
                        _0x277863.fill();
                        _0x277863.stroke();
                    } else if (_0x2ccba0.name == "platform") {
                        _0x277863.fillStyle = "#cebd5f";
                        var _0x463358 = 4;
                        var _0x2b5478 = _0x2ccba0.scale * 2;
                        var _0x107dce = _0x2b5478 / _0x463358;
                        var _0x5e7ce0 = -(_0x2ccba0.scale / 2);
                        for (var _0x42502b = 0; _0x42502b < _0x463358; ++_0x42502b) {
                            _0x5f200e(_0x5e7ce0 - _0x107dce / 2, 0, _0x107dce, _0x2ccba0.scale * 2, _0x277863);
                            _0x277863.fill();
                            _0x277863.stroke();
                            _0x5e7ce0 += _0x2b5478 / _0x463358;
                        }
                    } else if (_0x2ccba0.name == "healing pad") {
                        _0x277863.fillStyle = "#7e7f82";
                        _0x5f200e(0, 0, _0x2ccba0.scale * 2, _0x2ccba0.scale * 2, _0x277863);
                        _0x277863.fill();
                        _0x277863.stroke();
                        _0x277863.fillStyle = "#db6e6e";
                        _0x410e99(0, 0, _0x2ccba0.scale * 0.65, 20, 4, _0x277863, true);
                    } else if (_0x2ccba0.name == "spawn pad") {
                        _0x277863.fillStyle = "#7e7f82";
                        _0x5f200e(0, 0, _0x2ccba0.scale * 2, _0x2ccba0.scale * 2, _0x277863);
                        _0x277863.fill();
                        _0x277863.stroke();
                        _0x277863.fillStyle = "#71aad6";
                        _0x30a3cc(0, 0, _0x2ccba0.scale * 0.6, _0x277863);
                    } else if (_0x2ccba0.name == "blocker") {
                        _0x277863.fillStyle = "#7e7f82";
                        _0x30a3cc(0, 0, _0x2ccba0.scale, _0x277863);
                        _0x277863.fill();
                        _0x277863.stroke();
                        _0x277863.rotate(Math.PI / 4);
                        _0x277863.fillStyle = "#db6e6e";
                        _0x410e99(0, 0, _0x2ccba0.scale * 0.65, 20, 4, _0x277863, true);
                    } else if (_0x2ccba0.name == "teleporter") {
                        _0x277863.fillStyle = "#7e7f82";
                        _0x30a3cc(0, 0, _0x2ccba0.scale, _0x277863);
                        _0x277863.fill();
                        _0x277863.stroke();
                        _0x277863.rotate(Math.PI / 4);
                        _0x277863.fillStyle = "#d76edb";
                        _0x30a3cc(0, 0, _0x2ccba0.scale * 0.5, _0x277863, true);
                    }
                    _0x592fb1 = _0x121af5;
                    if (!_0x15e7e9) {
                        _0x4cdb85[_0x2ccba0.id + (_0x40ec6a && _0x2ccba0.owner && _0x2ccba0.owner.sid == _0x40ec6a.sid ? 0 : _0x40ec6a && _0x40ec6a.team && _0x2ccba0.owner && _0x495258(_0x2ccba0.owner.sid) ? 0 : 50)] = _0x592fb1;
                    }
                }
                return _0x592fb1;
            }

            function _0x137023(_0x570540, _0x10580e, _0x32ab8c, _0x14ffb5) {
                _0x10580e.lineWidth = _0x9b9370;
                _0x10580e.globalAlpha = 1;
                _0x10580e.strokeStyle = _0x2dca67;
                _0x10580e.save();
                _0x10580e.translate(_0x32ab8c, _0x14ffb5);
                _0x10580e.rotate(_0x570540.dir);
                if (_0x570540.name == "wood wall" || _0x570540.name == "stone wall" || _0x570540.name == "castle wall") {
                    let _0x571a10 = _0x570540.name == "castle wall" ? 4 : 3;
                    _0xe1c489(_0x10580e, _0x571a10, _0x570540.scale * 1.1, _0x570540.scale * 1.1);
                    _0x10580e.stroke();
                } else if (_0x570540.name == "spikes" || _0x570540.name == "greater spikes" || _0x570540.name == "poison spikes" || _0x570540.name == "spinning spikes") {
                    let _0x8bd1cd = _0x570540.scale * 0.6;
                    _0xe1c489(_0x10580e, _0x570540.name == "spikes" ? 5 : 6, _0x570540.scale, _0x8bd1cd);
                    _0x10580e.stroke();
                } else if (_0x570540.name == "windmill" || _0x570540.name == "faster windmill" || _0x570540.name == "power mill") {
                    _0x320faa(0, 0, _0x570540.scale, _0x10580e, false, true);
                } else if (_0x570540.name == "mine") {
                    _0xe1c489(_0x10580e, 3, _0x570540.scale, _0x570540.scale);
                    _0x10580e.stroke();
                } else if (_0x570540.name == "sapling") {
                    let _0x80cf18 = _0x570540.scale * 0.7;
                    _0xe1c489(_0x10580e, 7, _0x570540.scale, _0x80cf18);
                    _0x10580e.stroke();
                } else if (_0x570540.name == "pit trap") {
                    _0xe1c489(_0x10580e, 3, _0x570540.scale * 1.1, _0x570540.scale * 1.1);
                    _0x10580e.stroke();
                } else if (_0x570540.name == "boost pad") {
                    _0x487153(0, 0, _0x570540.scale * 2, _0x570540.scale * 2, _0x10580e, false, true);
                } else if (_0x570540.name == "turret") {
                    _0x320faa(0, 0, _0x570540.scale, _0x10580e, false, true);
                } else if (_0x570540.name == "platform") {
                    _0x487153(0, 0, _0x570540.scale * 2, _0x570540.scale * 2, _0x10580e, false, true);
                } else if (_0x570540.name == "healing pad") {
                    _0x487153(0, 0, _0x570540.scale * 2, _0x570540.scale * 2, _0x10580e, false, true);
                } else if (_0x570540.name == "spawn pad") {
                    _0x487153(0, 0, _0x570540.scale * 2, _0x570540.scale * 2, _0x10580e, false, true);
                } else if (_0x570540.name == "blocker") {
                    _0x320faa(0, 0, _0x570540.scale, _0x10580e, false, true);
                } else if (_0x570540.name == "teleporter") {
                    _0x320faa(0, 0, _0x570540.scale, _0x10580e, false, true);
                }
                _0x10580e.fillStyle = "rgba(0, 0, 0, 0.5)";
                _0x10580e.fill();
                _0x10580e.restore();
            }

            function _0x4507e7(_0x5f042a, _0x5c16ed, _0x60c9b1) {
                return _0x5f042a + _0x60c9b1 >= 0 && _0x5f042a - _0x60c9b1 <= _0x12111d && _0x5c16ed + _0x60c9b1 >= 0 && (_0x5c16ed, _0x60c9b1, _0x4483d4);
            }

            function _0x1cd6e6(_0x556d3c, _0x2df291, _0x4bca06) {
                const _0x3b8613 = getEl("predic");
                const _0x3f616a = _0x3b8613.value;
                if (_0x3f616a === "zod") {
                    _0x159268(_0x5c2ea7, _0x2df291, _0x4bca06);
                } else if (_0x3f616a === "kite") {
                    _0x137023(_0x556d3c, _0x5c2ea7, _0x2df291, _0x4bca06);
                }
            }

            function _0x159268(_0x5c74c4, _0x4b255c, _0x589b55) {
                _0x5c74c4.fillStyle = "rgba(0, 255, 255, 0)";
                _0x5c74c4.beginPath();
                _0x5c74c4.arc(_0x4b255c, _0x589b55, 55, 0, Math.PI * 2);
                _0x5c74c4.fill();
                _0x5c74c4.closePath();
                _0x5c74c4.globalAlpha = 1;
            }
            class _0x53daaa {
                constructor(_0x2972a0, _0x4c4d19) {
                    this.init = function(_0x5f5277, _0xd546a9) {
                        this.scale = 0;
                        this.x = _0x5f5277;
                        this.y = _0xd546a9;
                        this.active = true;
                    };
                    this.update = function(_0x3bf1bf, _0x1663cf) {
                        if (this.active) {
                            this.scale += _0x1663cf * 0.05;
                            if (this.scale >= _0x4c4d19) {
                                this.active = false;
                            } else {
                                _0x3bf1bf.globalAlpha = 1 - Math.max(0, this.scale / _0x4c4d19);
                                _0x3bf1bf.beginPath();
                                _0x3bf1bf.arc(this.x / _0x18564b.mapScale * _0x3dbb5b.width, this.y / _0x18564b.mapScale * _0x3dbb5b.width, this.scale, 0, Math.PI * 2);
                                _0x3bf1bf.stroke();
                            }
                        }
                    };
                    this.color = _0x2972a0;
                }
            }

            function _0x1ba5b4(_0x3158a9, _0x31f0be) {
                _0x16b804 = _0x1f993a.find(_0x557d6b => !_0x557d6b.active);
                if (!_0x16b804) {
                    _0x16b804 = new _0x53daaa("#fff", _0x18564b.mapPingScale);
                    _0x1f993a.push(_0x16b804);
                }
                _0x16b804.init(_0x3158a9, _0x31f0be);
            }

            function _0x335f74() {
                _0x42520e.x = _0x40ec6a.x;
                _0x42520e.y = _0x40ec6a.y;
            }

            function _0x31aede(_0x44e4d9) {
                if (_0x40ec6a && _0x40ec6a.alive) {
                    _0xf8601d.clearRect(0, 0, _0x3dbb5b.width, _0x3dbb5b.height);
                    _0xf8601d.lineWidth = 4;
                    for (let _0x5a3436 = 0; _0x5a3436 < _0x1f993a.length; ++_0x5a3436) {
                        _0x16b804 = _0x1f993a[_0x5a3436];
                        _0xf8601d.strokeStyle = _0x16b804.color;
                        _0x16b804.update(_0xf8601d, _0x44e4d9);
                    }
                    _0xf8601d.globalAlpha = 1;
                    _0xf8601d.fillStyle = "#ff0000";
                    if (_0x4d6c00.length) {
                        _0xf8601d.fillStyle = "#abcdef";
                        _0xf8601d.font = "34px Hammersmith One";
                        _0xf8601d.textBaseline = "middle";
                        _0xf8601d.textAlign = "center";
                        for (let _0x321365 = 0; _0x321365 < _0x4d6c00.length;) {
                            _0xf8601d.fillText("!", _0x4d6c00[_0x321365].x / _0x18564b.mapScale * _0x3dbb5b.width, _0x4d6c00[_0x321365].y / _0x18564b.mapScale * _0x3dbb5b.height);
                            _0x321365 += 2;
                        }
                    }
                    _0xf8601d.globalAlpha = 1;
                    _0xf8601d.fillStyle = "#fff";
                    _0x30a3cc(_0x40ec6a.x / _0x18564b.mapScale * _0x3dbb5b.width, _0x40ec6a.y / _0x18564b.mapScale * _0x3dbb5b.height, 7, _0xf8601d, true);
                    _0xf8601d.fillStyle = "rgba(255,255,255,0.35)";
                    if (_0x40ec6a.team && _0x48ba60) {
                        for (let _0x504e4f = 0; _0x504e4f < _0x48ba60.length;) {
                            _0x30a3cc(_0x48ba60[_0x504e4f] / _0x18564b.mapScale * _0x3dbb5b.width, _0x48ba60[_0x504e4f + 1] / _0x18564b.mapScale * _0x3dbb5b.height, 7, _0xf8601d, true);
                            _0x504e4f += 2;
                        }
                    }
                    if (_0x4efb57.length) {
                        _0x4efb57.forEach(_0x489cc4 => {
                            if (_0x489cc4.inGame) {
                                _0xf8601d.globalAlpha = 1;
                                _0xf8601d.strokeStyle = "#cc5151";
                                _0x30a3cc(_0x489cc4.x2 / _0x18564b.mapScale * _0x3dbb5b.width, _0x489cc4.y2 / _0x18564b.mapScale * _0x3dbb5b.height, 7, _0xf8601d, false, true);
                            }
                        });
                    }
                    if (_0x2350f6) {
                        _0xf8601d.fillStyle = "#fc5553";
                        _0xf8601d.font = "34px Hammersmith One";
                        _0xf8601d.textBaseline = "middle";
                        _0xf8601d.textAlign = "center";
                        _0xf8601d.fillText("x", _0x2350f6.x / _0x18564b.mapScale * _0x3dbb5b.width, _0x2350f6.y / _0x18564b.mapScale * _0x3dbb5b.height);
                    }
                    if (_0x42520e) {
                        _0xf8601d.fillStyle = "#fff";
                        _0xf8601d.font = "34px Hammersmith One";
                        _0xf8601d.textBaseline = "middle";
                        _0xf8601d.textAlign = "center";
                        _0xf8601d.fillText("x", _0x42520e.x / _0x18564b.mapScale * _0x3dbb5b.width, _0x42520e.y / _0x18564b.mapScale * _0x3dbb5b.height);
                    }
                }
            }

            let _0x21dc82 = ["https://cdn.discordapp.com/attachments/1001384433078779927/1149285738412769300/newawwddd.png", "https://cdn.discordapp.com/attachments/1001384433078779927/1149285168780165170/100px-Crosshairs_Red.png"];
            let _0x49981f = {};
            let _0x25e6af = {};
            let _0x20bdba = ["crown", "skull"];

            function _0x41e72d() {
                for (let _0x46e7be = 0; _0x46e7be < _0x20bdba.length; ++_0x46e7be) {
                    let _0x3d9cfa = new Image();
                    _0x3d9cfa.onload = function() {
                        this.isLoaded = true;
                    };
                    _0x3d9cfa.src = "./../img/icons/" + _0x20bdba[_0x46e7be] + ".png";
                    _0x25e6af[_0x20bdba[_0x46e7be]] = _0x3d9cfa;
                }
                for (let _0x5a5f01 = 0; _0x5a5f01 < _0x21dc82.length; ++_0x5a5f01) {
                    let _0x259eb2 = new Image();
                    _0x259eb2.onload = function() {
                        this.isLoaded = true;
                    };
                    _0x259eb2.src = _0x21dc82[_0x5a5f01];
                    _0x49981f[_0x5a5f01] = _0x259eb2;
                }
            }
            _0x41e72d();

            function _0x251b66() {
                if (_0x18564b.resetRender) {
                    _0x5c2ea7.clearRect(0, 0, _0x538af4.width, _0x538af4.height);
                    _0x5c2ea7.beginPath();
                }
                if (true) {
                    function _0xf238d(_0xace4f9) {
                        let _0x2d0fa4 = 0;
                        for (let _0x3867fd = 0; _0x3867fd < _0xace4f9.length; _0x3867fd++) {
                            _0x2d0fa4 += _0xace4f9[_0x3867fd];
                        }
                        return _0x2d0fa4 / _0xace4f9.length;
                    }
                    if (_0x40ec6a) {
                        let _0x2c8050 = _0x40ec6a.x;
                        let _0x50d877 = _0x40ec6a.y;
                        if (_0x5f501e.dist) {
                            let _0x54b00d = [];
                            let _0x3dfa16 = [];
                            for (let _0x16ea91 = 0; _0x16ea91 < _0x5f501e.enemy.length; _0x16ea91++) {
                                _0x54b00d.push(_0x5f501e.enemy[_0x16ea91].x);
                                _0x3dfa16.push(_0x5f501e.enemy[_0x16ea91].y);
                            }
                            let _0x42caea = _0xf238d(_0x54b00d);
                            let _0xef15f3 = _0xf238d(_0x3dfa16);
                            _0x2c8050 = (_0x40ec6a.x * 6 + _0x42caea) / 7;
                            _0x50d877 = (_0x40ec6a.y * 6 + _0xef15f3) / 7;
                        }
                        let _0xff1071 = _0x1b05b9.getDistance(_0x2f0e10, _0x2b9101, _0x2c8050, _0x50d877);
                        let _0x45c502 = _0x1b05b9.getDirection(_0x2c8050, _0x50d877, _0x2f0e10, _0x2b9101);
                        let _0x31d737 = Math.min(_0xff1071 * 0.005 * _0x2618f8, _0xff1071);
                        if (_0xff1071 > 0.05) {
                            _0x2f0e10 += _0x31d737 * Math.cos(_0x45c502);
                            _0x2b9101 += _0x31d737 * Math.sin(_0x45c502);
                        } else {
                            _0x2f0e10 = _0x2c8050;
                            _0x2b9101 = _0x50d877;
                        }
                    } else {
                        _0x2f0e10 = _0x18564b.mapScale / 2;
                        _0x2b9101 = _0x18564b.mapScale / 2;
                    }
                    var _0x422cae = _0x562079 - 1000 / _0x18564b.serverUpdateRate;
                    var _0x5dd701;
                    for (var _0x52bd75 = 0; _0x52bd75 < _0x5795c8.length + _0x45aa6e.length; ++_0x52bd75) {
                        _0x1d199f = _0x5795c8[_0x52bd75] || _0x45aa6e[_0x52bd75 - _0x5795c8.length];
                        if (_0x1d199f && _0x1d199f.visible) {
                            if (_0x1d199f.forcePos) {
                                _0x1d199f.x = _0x1d199f.x2;
                                _0x1d199f.y = _0x1d199f.y2;
                                _0x1d199f.dir = _0x1d199f.d2;
                            } else {
                                var _0x41fefd = _0x1d199f.t2 - _0x1d199f.t1;
                                var _0x12e264 = _0x422cae - _0x1d199f.t1;
                                var _0xec2087 = _0x12e264 / _0x41fefd;
                                var _0x21549c = 170;
                                _0x1d199f.dt += _0x2618f8;
                                var _0x1a1ed8 = Math.min(1.7, _0x1d199f.dt / _0x21549c);
                                var _0x5dd701 = _0x1d199f.x2 - _0x1d199f.x1;
                                _0x1d199f.x = _0x1d199f.x1 + _0x5dd701 * _0x1a1ed8;
                                _0x5dd701 = _0x1d199f.y2 - _0x1d199f.y1;
                                _0x1d199f.y = _0x1d199f.y1 + _0x5dd701 * _0x1a1ed8;
                                _0x1d199f.dir = Math.lerpAngle(_0x1d199f.d2, _0x1d199f.d1, Math.min(1.2, _0xec2087));
                            }
                        }
                    }
                    let _0x579d75 = _0x2f0e10 - _0x12111d / 2;
                    let _0x4b88cd = _0x2b9101 - _0x4483d4 / 2;
                    if (_0x18564b.snowBiomeTop - _0x4b88cd <= 0 && _0x18564b.mapScale - _0x18564b.snowBiomeTop - _0x4b88cd >= _0x4483d4) {
                        _0x5c2ea7.fillStyle = "#b6db66";
                        _0x5c2ea7.fillRect(0, 0, _0x12111d, _0x4483d4);
                    } else if (_0x18564b.mapScale - _0x18564b.snowBiomeTop - _0x4b88cd <= 0) {
                        _0x5c2ea7.fillStyle = "#dbc666";
                        _0x5c2ea7.fillRect(0, 0, _0x12111d, _0x4483d4);
                    } else if (_0x18564b.snowBiomeTop - _0x4b88cd >= _0x4483d4) {
                        _0x5c2ea7.fillStyle = "#fff";
                        _0x5c2ea7.fillRect(0, 0, _0x12111d, _0x4483d4);
                    } else if (_0x18564b.snowBiomeTop - _0x4b88cd >= 0) {
                        _0x5c2ea7.fillStyle = "#fff";
                        _0x5c2ea7.fillRect(0, 0, _0x12111d, _0x18564b.snowBiomeTop - _0x4b88cd);
                        _0x5c2ea7.fillStyle = "#b6db66";
                        _0x5c2ea7.fillRect(0, _0x18564b.snowBiomeTop - _0x4b88cd, _0x12111d, _0x4483d4 - (_0x18564b.snowBiomeTop - _0x4b88cd));
                    } else {
                        _0x5c2ea7.fillStyle = "#b6db66";
                        _0x5c2ea7.fillRect(0, 0, _0x12111d, _0x18564b.mapScale - _0x18564b.snowBiomeTop - _0x4b88cd);
                        _0x5c2ea7.fillStyle = "#dbc666";
                        _0x5c2ea7.fillRect(0, _0x18564b.mapScale - _0x18564b.snowBiomeTop - _0x4b88cd, _0x12111d, _0x4483d4 - (_0x18564b.mapScale - _0x18564b.snowBiomeTop - _0x4b88cd));
                    }
                    if (!_0x1d14a7) {
                        _0x4bf0c3 += _0x576849 * _0x18564b.waveSpeed * _0x2618f8;
                        if (_0x4bf0c3 >= _0x18564b.waveMax) {
                            _0x4bf0c3 = _0x18564b.waveMax;
                            _0x576849 = -1;
                        } else if (_0x4bf0c3 <= 1) {
                            _0x4bf0c3 = _0x576849 = 1;
                        }
                        _0x5c2ea7.globalAlpha = 1;
                        _0x5c2ea7.fillStyle = "#dbc666";
                        _0x14baec(_0x579d75, _0x4b88cd, _0x5c2ea7, _0x18564b.riverPadding);
                        _0x5c2ea7.fillStyle = "#91b2db";
                        _0x14baec(_0x579d75, _0x4b88cd, _0x5c2ea7, (_0x4bf0c3 - 1) * 250);
                    }
                    if (_0x40ec6a) {
                        if (_0x2350f6) {
                            _0x5c2ea7.globalAlpha = 1;
                            _0x5c2ea7.fillStyle = "#fc5553";
                            _0x5c2ea7.font = "100px Hammersmith One";
                            _0x5c2ea7.textBaseline = "middle";
                            _0x5c2ea7.textAlign = "center";
                            _0x5c2ea7.fillText("", _0x2350f6.x - _0x579d75, _0x2350f6.y - _0x4b88cd);
                        }
                        if (_0x158fb2.active) {
                            if (_0x158fb2.array && (_0x158fb2.chaseNear ? _0x4d42b6.length : true)) {
                                _0x5c2ea7.lineWidth = _0x40ec6a.scale / 5;
                                _0x5c2ea7.globalAlpha = 1;
                                _0x5c2ea7.strokeStyle = "red";
                                _0x5c2ea7.beginPath();
                                _0x158fb2.array.forEach((_0x136772, _0x56a895) => {
                                    let _0x2159e9 = {
                                        x: _0x158fb2.scale / _0x158fb2.grid * _0x136772.x,
                                        y: _0x158fb2.scale / _0x158fb2.grid * _0x136772.y
                                    };
                                    let _0x39cdcd = {
                                        x: _0x40ec6a.x2 - _0x158fb2.scale / 2 + _0x2159e9.x - _0x579d75,
                                        y: _0x40ec6a.y2 - _0x158fb2.scale / 2 + _0x2159e9.y - _0x4b88cd
                                    };
                                    if (_0x56a895 == 0) {
                                        _0x5c2ea7.moveTo(_0x39cdcd.x, _0x39cdcd.y);
                                    } else {
                                        _0x5c2ea7.lineTo(_0x39cdcd.x, _0x39cdcd.y);
                                    }
                                });
                                _0x5c2ea7.stroke();
                            }
                        }
                    }
                    if (_0x2c7097 && _0x562119) {
                        _0x5c2ea7.globalAlpha = 1;
                        _0x5c2ea7.strokeStyle = _0x2dca67;
                        _0x2c9933(_0x579d75, _0x4b88cd, Math.random() * Math.PI * 2);
                    }
                    _0x5c2ea7.globalAlpha = 1;
                    _0x5c2ea7.strokeStyle = _0x2dca67;
                    _0x4b70c4(-1, _0x579d75, _0x4b88cd);
                    _0x5c2ea7.globalAlpha = 1;
                    _0x5c2ea7.lineWidth = _0x9b9370;
                    _0x56a9e5(0, _0x579d75, _0x4b88cd);
                    _0x94d0(_0x579d75, _0x4b88cd, 0);
                    _0x5c2ea7.globalAlpha = 1;
                    for (let _0x14be00 = 0; _0x14be00 < _0x45aa6e.length; ++_0x14be00) {
                        _0x1d199f = _0x45aa6e[_0x14be00];
                        if (_0x1d199f.active && _0x1d199f.visible) {
                            _0x1d199f.animate(_0x2618f8);
                            _0x5c2ea7.save();
                            _0x5c2ea7.translate(_0x1d199f.x - _0x579d75, _0x1d199f.y - _0x4b88cd);
                            _0x5c2ea7.rotate(_0x1d199f.dir + _0x1d199f.dirPlus - Math.PI / 2);
                            _0x349d3b(_0x1d199f, _0x5c2ea7);
                            _0x5c2ea7.restore();
                        }
                    }
                    _0x4b70c4(0, _0x579d75, _0x4b88cd);
                    _0x56a9e5(1, _0x579d75, _0x4b88cd);
                    _0x4b70c4(1, _0x579d75, _0x4b88cd);
                    _0x94d0(_0x579d75, _0x4b88cd, 1);
                    _0x4b70c4(2, _0x579d75, _0x4b88cd);
                    _0x4b70c4(3, _0x579d75, _0x4b88cd);
                    _0x5c2ea7.fillStyle = "#000";
                    _0x5c2ea7.globalAlpha = 0.2;
                    if (_0x579d75 <= 0) {
                        _0x5c2ea7.fillRect(0, 0, -_0x579d75, _0x4483d4);
                    }
                    if (_0x18564b.mapScale - _0x579d75 <= _0x12111d) {
                        let _0x37f125 = Math.max(0, -_0x4b88cd);
                        _0x5c2ea7.fillRect(_0x18564b.mapScale - _0x579d75, _0x37f125, _0x12111d - (_0x18564b.mapScale - _0x579d75), _0x4483d4 - _0x37f125);
                    }
                    if (_0x4b88cd <= 0) {
                        _0x5c2ea7.fillRect(-_0x579d75, 0, _0x12111d + _0x579d75, -_0x4b88cd);
                    }
                    if (_0x18564b.mapScale - _0x4b88cd <= _0x4483d4) {
                        let _0x2ee2fa = Math.max(0, -_0x579d75);
                        let _0x379c4f = 0;
                        if (_0x18564b.mapScale - _0x579d75 <= _0x12111d) {
                            _0x379c4f = _0x12111d - (_0x18564b.mapScale - _0x579d75);
                        }
                        _0x5c2ea7.fillRect(_0x2ee2fa, _0x18564b.mapScale - _0x4b88cd, _0x12111d - _0x2ee2fa - _0x379c4f, _0x4483d4 - (_0x18564b.mapScale - _0x4b88cd));
                    }
                    let _0x137dd5 = false;
                    _0x5c2ea7.globalAlpha = 1;
                    _0x5c2ea7.fillStyle = "rgba(0, 0, 70, 0.40)";
                    _0x5c2ea7.fillRect(0, 0, _0x12111d, _0x4483d4);
                    _0x5c2ea7.strokeStyle = _0x326147;
                    _0x5c2ea7.globalAlpha = 1;
                    for (let _0x49bfc6 = 0; _0x49bfc6 < _0x5795c8.length + _0x45aa6e.length; ++_0x49bfc6) {
                        _0x1d199f = _0x5795c8[_0x49bfc6] || _0x45aa6e[_0x49bfc6 - _0x5795c8.length];
                        if (_0x1d199f.visible) {
                            _0x5c2ea7.strokeStyle = _0x326147;
                            let _0x378940 = new Image();
                            _0x378940.src = "";
                            if (_0x1d199f.skinIndex != 10 || _0x1d199f == _0x40ec6a || _0x1d199f.team && _0x1d199f.team == _0x40ec6a.team) {
                                let _0x13afdf = (_0x1d199f.team ? "[" + _0x1d199f.team + "] " : "") + (_0x1d199f.name || "") + (_0x1d199f.isPlayer ? " " : "");
                                if (_0x13afdf != "") {
                                    _0x5c2ea7.font = (_0x1d199f.nameScale || 30) + "px Hammersmith One";
                                    _0x5c2ea7.fillStyle = "#fff";
                                    _0x5c2ea7.textBaseline = "middle";
                                    _0x5c2ea7.textAlign = "center";
                                    _0x5c2ea7.lineWidth = _0x1d199f.nameScale ? 11 : 8;
                                    _0x5c2ea7.lineJoin = "round";
                                    _0x5c2ea7.strokeText(_0x13afdf, _0x1d199f.x - _0x579d75, _0x1d199f.y - _0x4b88cd - _0x1d199f.scale - _0x18564b.nameY);
                                    _0x5c2ea7.fillText(_0x13afdf, _0x1d199f.x - _0x579d75, _0x1d199f.y - _0x4b88cd - _0x1d199f.scale - _0x18564b.nameY);
                                    if (_0x1d199f.isLeader && _0x25e6af.crown.isLoaded) {
                                        let _0x4b76bd = _0x18564b.crownIconScale;
                                        let _0x510906 = _0x1d199f.x - _0x579d75 - _0x4b76bd / 2 - _0x5c2ea7.measureText(_0x13afdf).width / 2 - _0x18564b.crownPad;
                                        _0x5c2ea7.drawImage(_0x25e6af.crown, _0x510906, _0x1d199f.y - _0x4b88cd - _0x1d199f.scale - _0x18564b.nameY - _0x4b76bd / 2 - 5, _0x4b76bd, _0x4b76bd);
                                    }
                                    if (_0x1d199f.iconIndex == 1 && _0x25e6af.skull.isLoaded) {
                                        let _0x2ba427 = _0x18564b.crownIconScale;
                                        let _0x44ce2d = _0x1d199f.x - _0x579d75 - _0x2ba427 / 2 + _0x5c2ea7.measureText(_0x13afdf).width / 2 + _0x18564b.crownPad;
                                        _0x5c2ea7.drawImage(_0x25e6af.skull, _0x44ce2d, _0x1d199f.y - _0x4b88cd - _0x1d199f.scale - _0x18564b.nameY - _0x2ba427 / 2 - 5, _0x2ba427, _0x2ba427);
                                    }
                                    if (_0x1d199f.isPlayer && _0x53f820.wait && _0x5f501e == _0x1d199f && (_0x1d199f.backupNobull ? _0x49981f[1].isLoaded : _0x49981f[0].isLoaded) && _0x4d42b6.length && !_0x4655d8) {
                                        let _0x1e0918 = _0x1d199f.scale * 2.2;
                                        _0x5c2ea7.drawImage(_0x1d199f.backupNobull ? _0x49981f[1] : _0x49981f[0], _0x1d199f.x - _0x579d75 - _0x1e0918 / 2, _0x1d199f.y - _0x4b88cd - _0x1e0918 / 2, _0x1e0918, _0x1e0918);
                                    }
                                }
                                if (_0x1d199f.health > 0) {
                                    _0x5c2ea7.fillStyle = _0x326147;
                                    _0x5c2ea7.roundRect(_0x1d199f.x - _0x579d75 - _0x18564b.healthBarWidth - _0x18564b.healthBarPad, _0x1d199f.y - _0x4b88cd + _0x1d199f.scale + _0x18564b.nameY, _0x18564b.healthBarWidth * 2 + _0x18564b.healthBarPad * 2, 17, 8);
                                    _0x5c2ea7.fill();
                                    _0x5c2ea7.fillStyle = _0x1d199f == _0x40ec6a || _0x1d199f.team && _0x1d199f.team == _0x40ec6a.team ? "#8ecc51" : "#cc5151";
                                    _0x5c2ea7.roundRect(_0x1d199f.x - _0x579d75 - _0x18564b.healthBarWidth, _0x1d199f.y - _0x4b88cd + _0x1d199f.scale + _0x18564b.nameY + _0x18564b.healthBarPad, _0x18564b.healthBarWidth * 2 * (_0x1d199f.health / _0x1d199f.maxHealth), 17 - _0x18564b.healthBarPad * 2, 7);
                                    _0x5c2ea7.fill();
                                    if (_0x1d199f.isPlayer) {
                                        if (_0x1d199f == _0x40ec6a) {}
                                        _0x5c2ea7.globalAlpha = 1;
                                        _0x5c2ea7.font = "20px Hammersmith One";
                                        _0x5c2ea7.fillStyle = "#fff";
                                        _0x5c2ea7.strokeStyle = _0x326147;
                                        _0x5c2ea7.textBaseline = "middle";
                                        _0x5c2ea7.textAlign = "center";
                                        _0x5c2ea7.lineWidth = 8;
                                        _0x5c2ea7.lineJoin = "round";
                                        if (getEl("predictType").value == "pre2") {
                                            _0x5c2ea7.lineWidth = 3;
                                            _0x5c2ea7.strokeStyle = "#cc5151";
                                            _0x5c2ea7.globalAlpha = 1;
                                            _0x5c2ea7.beginPath();
                                            let _0x40ad27 = {
                                                x: _0x1d199f.x2 - _0x579d75,
                                                y: _0x1d199f.y2 - _0x4b88cd
                                            };
                                            _0x5c2ea7.moveTo(_0x1d199f.x - _0x579d75, _0x1d199f.y - _0x4b88cd);
                                            _0x5c2ea7.lineTo(_0x40ad27.x, _0x40ad27.y);
                                            _0x5c2ea7.stroke();
                                        } else if (getEl("predictType").value == "pre3") {
                                            _0x5c2ea7.lineWidth = 3;
                                            _0x5c2ea7.strokeStyle = "#cc5151";
                                            _0x5c2ea7.globalAlpha = 1;
                                            _0x5c2ea7.beginPath();
                                            let _0x3472fa = {
                                                x: _0x1d199f.x3 - _0x579d75,
                                                y: _0x1d199f.y3 - _0x4b88cd
                                            };
                                            _0x5c2ea7.moveTo(_0x1d199f.x - _0x579d75, _0x1d199f.y - _0x4b88cd);
                                            _0x5c2ea7.lineTo(_0x3472fa.x, _0x3472fa.y);
                                            _0x5c2ea7.stroke();
                                        }
                                    }
                                }
                            }
                        }
                    }

                    function _0x4b70c4(_0x24ed19, _0xa6d65b, _0xcc9c3e) {
                        let _0x19c693;
                        let _0x15f59;
                        let _0x50a7e4;
                        _0x207b6e.forEach(_0x156c13 => {
                            _0x1d199f = _0x156c13;
                            if (_0x1d199f.alive) {
                                _0x15f59 = _0x1d199f.x + _0x1d199f.xWiggle - _0xa6d65b;
                                _0x50a7e4 = _0x1d199f.y + _0x1d199f.yWiggle - _0xcc9c3e;
                                if (_0x24ed19 == 0) {
                                    _0x1d199f.update(_0x2618f8);
                                }
                                _0x5c2ea7.globalAlpha = _0x1d199f.alpha;
                                if (_0x1d199f.layer == _0x24ed19 && _0x4507e7(_0x15f59, _0x50a7e4, _0x1d199f.scale + (_0x1d199f.blocker || 0))) {
                                    if (_0x1d199f.isItem) {
                                        if ((_0x1d199f.dmg || _0x1d199f.trap) && !_0x1d199f.isTeamObject(_0x40ec6a)) {
                                            _0x19c693 = _0x1970f9(_0x1d199f);
                                        } else {
                                            _0x19c693 = _0xba3cea(_0x1d199f);
                                        }
                                        _0x5c2ea7.save();
                                        _0x5c2ea7.translate(_0x15f59, _0x50a7e4);
                                        _0x5c2ea7.rotate(_0x1d199f.dir);
                                        if (!_0x1d199f.active) {
                                            _0x5c2ea7.scale(_0x1d199f.visScale / _0x1d199f.scale, _0x1d199f.visScale / _0x1d199f.scale);
                                        }
                                        _0x5c2ea7.drawImage(_0x19c693, -(_0x19c693.width / 2), -(_0x19c693.height / 2));
                                        if (_0x1d199f.blocker) {
                                            _0x5c2ea7.strokeStyle = "#db6e6e";
                                            _0x5c2ea7.globalAlpha = 0.3;
                                            _0x5c2ea7.lineWidth = 6;
                                            _0x30a3cc(0, 0, _0x1d199f.blocker, _0x5c2ea7, false, true);
                                        }
                                        _0x5c2ea7.restore();
                                    } else {
                                        _0x19c693 = _0x306dfd(_0x1d199f);
                                        _0x5c2ea7.drawImage(_0x19c693, _0x15f59 - _0x19c693.width / 2, _0x50a7e4 - _0x19c693.height / 2);
                                    }
                                }
                            }
                        });
                        if (_0x24ed19 == 0) {
                            if (_0xfb6063.length) {
                                _0xfb6063.forEach(_0x181178 => {
                                    _0x15f59 = _0x181178.x - _0xa6d65b;
                                    _0x50a7e4 = _0x181178.y - _0xcc9c3e;
                                    _0x4ee38d(_0x181178, _0x15f59, _0x50a7e4);
                                });
                            }
                        }
                    }

                    function _0x4ee38d(_0x521b99, _0x5c54c6, _0x20c0ea) {
                        _0x137023(_0x521b99, _0x5c2ea7, _0x5c54c6, _0x20c0ea);
                    }

                    function _0x3d55ad(_0xfe0b6, _0x20c86e, _0x2e243f) {
                        _0xfe0b6.fillStyle = "rgb(255, 0, 0, 0.5)";
                        _0xfe0b6.globalAlpha = 0.5;
                        _0xfe0b6.beginPath();
                        _0xfe0b6.stroke();
                        _0xfe0b6.strokeStyle = "red";
                        _0xfe0b6.arc(_0x20c86e, _0x2e243f, 40, 0, Math.PI * 2);
                        _0xfe0b6.fill();
                        _0xfe0b6.stroke();
                        _0xfe0b6.strokeStyle = "red";
                        _0xfe0b6.closePath();
                        _0xfe0b6.globalAlpha = 0.5;
                    }
                    if (_0x541fa4.autoPush) {
                        _0x5c2ea7.lineWidth = 5;
                        _0x5c2ea7.globalAlpha = 1;
                        _0x5c2ea7.beginPath();
                        _0x5c2ea7.fillStyle = _0x326147;
                        _0x5c2ea7.strokeStyle = "white";
                        _0x5c2ea7.moveTo(_0x40ec6a.x - _0x579d75, _0x40ec6a.y - _0x4b88cd);
                        _0x5c2ea7.lineTo(_0x541fa4.pushData.x2 - _0x579d75, _0x541fa4.pushData.y2 - _0x4b88cd);
                        _0x5c2ea7.lineTo(_0x541fa4.pushData.x - _0x579d75, _0x541fa4.pushData.y - _0x4b88cd);
                        _0x5c2ea7.stroke();
                    }
                    _0x5c2ea7.globalAlpha = 1;
                    _0x29f096.update(_0x2618f8, _0x5c2ea7, _0x579d75, _0x4b88cd);
                    for (let _0x66a481 = 0; _0x66a481 < _0x5795c8.length; ++_0x66a481) {
                        _0x1d199f = _0x5795c8[_0x66a481];
                        if (_0x1d199f.visible) {
                            if (_0x1d199f.chatCountdown > 0) {
                                _0x1d199f.chatCountdown -= _0x2618f8;
                                if (_0x1d199f.chatCountdown <= 0) {
                                    _0x1d199f.chatCountdown = 0;
                                }
                                _0x5c2ea7.font = "32px Hammersmith One";
                                let _0x1068e5 = _0x5c2ea7.measureText(_0x1d199f.chatMessage);
                                _0x5c2ea7.textBaseline = "middle";
                                _0x5c2ea7.textAlign = "center";
                                let _0x567899 = _0x1d199f.x - _0x579d75;
                                let _0x395763 = _0x1d199f.y - _0x1d199f.scale - _0x4b88cd - 90;
                                let _0x52208a = 47;
                                let _0x1a7e09 = _0x1068e5.width + 17;
                                _0x5c2ea7.fillStyle = "rgba(0,0,0,0.2)";
                                _0x5c2ea7.roundRect(_0x567899 - _0x1a7e09 / 2, _0x395763 - _0x52208a / 2, _0x1a7e09, _0x52208a, 6);
                                _0x5c2ea7.fill();
                                _0x5c2ea7.fillStyle = "#fff";
                                _0x5c2ea7.fillText(_0x1d199f.chatMessage, _0x567899, _0x395763);
                            }
                            if (_0x1d199f.chat.count > 0) {
                                if (!_0x4655d8) {
                                    _0x1d199f.chat.count -= _0x2618f8;
                                    if (_0x1d199f.chat.count <= 0) {
                                        _0x1d199f.chat.count = 0;
                                    }
                                    _0x5c2ea7.font = "32px Hammersmith One";
                                    let _0x35edff = _0x5c2ea7.measureText(_0x1d199f.chat.message);
                                    _0x5c2ea7.textBaseline = "middle";
                                    _0x5c2ea7.textAlign = "center";
                                    let _0x3ef05b = _0x1d199f.x - _0x579d75;
                                    let _0x3dbe4c = _0x1d199f.y - _0x1d199f.scale - _0x4b88cd + 180;
                                    let _0x52676f = 47;
                                    let _0x6197c4 = _0x35edff.width + 17;
                                    _0x5c2ea7.fillStyle = "rgba(0,0,0,0.2)";
                                    _0x5c2ea7.roundRect(_0x3ef05b - _0x6197c4 / 2, _0x3dbe4c - _0x52676f / 2, _0x6197c4, _0x52676f, 6);
                                    _0x5c2ea7.fill();
                                    _0x5c2ea7.fillStyle = "#ffffff99";
                                    _0x5c2ea7.fillText(_0x1d199f.chat.message, _0x3ef05b, _0x3dbe4c);
                                } else {
                                    _0x1d199f.chat.count = 0;
                                }
                            }
                        }
                    }
                    if (_0x45a189.length) {
                        _0x45a189.filter(_0x4354b5 => _0x4354b5.active).forEach(_0x1f01ea => {
                            if (!_0x1f01ea.alive) {
                                if (_0x1f01ea.alpha <= 1) {
                                    _0x1f01ea.alpha += _0x2618f8 / 250;
                                    if (_0x1f01ea.alpha >= 1) {
                                        _0x1f01ea.alpha = 1;
                                        _0x1f01ea.alive = true;
                                    }
                                }
                            } else {
                                _0x1f01ea.alpha -= _0x2618f8 / 5000;
                                if (_0x1f01ea.alpha <= 0) {
                                    _0x1f01ea.alpha = 0;
                                    _0x1f01ea.active = false;
                                }
                            }
                            if (_0x1f01ea.active) {
                                _0x5c2ea7.font = "20px Hammersmith One";
                                let _0x1e345c = _0x5c2ea7.measureText(_0x1f01ea.chat);
                                _0x5c2ea7.textBaseline = "middle";
                                _0x5c2ea7.textAlign = "center";
                                let _0x516404 = _0x1f01ea.owner.x - _0x579d75;
                                let _0x1045e8 = _0x1f01ea.owner.y - _0x1f01ea.owner.scale - _0x4b88cd - 90;
                                let _0x680370 = 47;
                                let _0x21d3fe = _0x1e345c.width + 17;
                                _0x5c2ea7.globalAlpha = _0x1f01ea.alpha;
                                _0x5c2ea7.fillStyle = _0x1f01ea.owner.isTeam(_0x40ec6a) ? "rgba(255,215,0,1)" : "#cc5151";
                                _0x5c2ea7.strokeStyle = "rgb(25, 25, 25)";
                                _0x5c2ea7.lineWidth = 5;
                                _0x5c2ea7.fillStyle = "rgba(0,0,0,0.4)";
                                _0x5c2ea7.strokeStyle = "rgba(0,0,0,0.0)";
                                _0x5c2ea7.roundRect(_0x516404 - _0x21d3fe / 2, _0x1045e8 - _0x680370 / 2, _0x21d3fe, _0x680370, 6);
                                _0x5c2ea7.stroke();
                                _0x5c2ea7.fill();
                                _0x5c2ea7.fillStyle = "#fff";
                                _0x5c2ea7.strokeStyle = "#000";
                                _0x5c2ea7.strokeText(_0x1f01ea.chat, _0x516404, _0x1045e8);
                                _0x5c2ea7.fillText(_0x1f01ea.chat, _0x516404, _0x1045e8);
                                _0x1f01ea.y -= _0x2618f8 / 100;
                            }
                        });
                    }
                }
                _0x5c2ea7.globalAlpha = 1;
                _0x31aede(_0x2618f8);
            }
            window.requestAnimFrame = function() {
                return null;
            };
            window.rAF = function() {
                return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function(_0x1424e3) {
                    window.setTimeout(_0x1424e3, 1000 / 240);
                };
            }();

            function _0x1ab9ff() {
                _0x562079 = performance.now();
                _0x2618f8 = _0x562079 - _0x1feb99;
                _0x1feb99 = _0x562079;
                let _0x5a616e = performance.now();
                let _0x511fed = _0x5a616e - _0x1b1afb.last;
                if (_0x511fed >= 1000) {
                    _0x1b1afb.ltime = _0x1b1afb.time * (1000 / _0x511fed);
                    _0x1b1afb.last = _0x5a616e;
                    _0x1b1afb.time = 0;
                }
                _0x1b1afb.time++;
                getEl("pingFps").innerHTML = window.pingTime + "ms | Frames: " + _0x1b05b9.round(_0x1b1afb.ltime, 10);
                getEl("packetStatus").innerHTML = _0x211cfe;
                _0x251b66();
                rAF(_0x1ab9ff);
            }
            _0x5eb943();
            _0x1ab9ff();

            function _0x51bbb0(_0x2400ef) {
                getEl("instaType").disabled = _0x2400ef;
                getEl("antiBullType").disabled = _0x2400ef;
                getEl("predictType").disabled = _0x2400ef;
                getEl("visualType").disabled = _0x2400ef;
            }
            _0x51bbb0(_0x4655d8);
            let _0x20f03a = {};
            window.debug = function() {
                _0x541fa4.waitHit = 0;
                _0x541fa4.autoAim = false;
                _0x53f820.isTrue = false;
                _0x3973f5.inTrap = false;
                _0x4cdb85 = [];
                _0x2547a7 = [];
                _0x123ba0 = [];
            };
            window.wasdMode = function() {
                _0x4655d8 = !_0x4655d8;
                _0x51bbb0(_0x4655d8);
            };
            window.startGrind = function() {
                if (_0x1dff6e.autoGrind.enabled) {
                    for (let _0x1d8bf6 = 0; _0x1d8bf6 < Math.PI * 2; _0x1d8bf6 += Math.PI / 2) {
                        _0x48ac11(_0x40ec6a.getItemType(22), _0x1d8bf6);
                    }
                }
            };
            let _0x3e669f = [];
            let _0x2777e8 = 0;
            window.connectFillBots = function() {
                _0x586579 = [];
                _0x2777e8 = 0;
                for (let _0x288bc9 = 0; _0x288bc9 < _0x3e669f.length; _0x288bc9++) {
                    let _0x22d49f = new WebSocket("wss://" + _0x3e669f[_0x288bc9] + ".glitch.me");
                    _0x22d49f.binaryType = "arraybuffer";
                    _0x22d49f.onopen = function() {
                        _0x22d49f.ssend = function(_0x3ee4f9) {
                            let _0x20abc6 = Array.prototype.slice.call(arguments, 1);
                            let _0x3d2b12 = window.msgpack.encode([_0x3ee4f9, _0x20abc6]);
                            _0x22d49f.send(_0x3d2b12);
                        };
                        for (let _0x5c20af = 0; _0x5c20af < 4; _0x5c20af++) {
                            window.grecaptcha.execute("6LevKusUAAAAAAFknhlV8sPtXAk5Z5dGP5T2FYIZ", {
                                action: "homepage"
                            }).then(function(_0x3ffe78) {
                                _0x22d49f.ssend("bots", _0x30f51c.url.split("&")[0] + "&token=" + encodeURIComponent(_0x3ffe78), _0x2777e8);
                                _0x586579.push([_0x22d49f]);
                                _0x2777e8++;
                            });
                        }
                    };
                    _0x22d49f.onmessage = function(_0x11ea65) {
                        let _0x196c05 = new Uint8Array(_0x11ea65.data);
                        let _0x3dabfb = window.msgpack.decode(_0x196c05);
                        let _0x542c9b = _0x3dabfb[0];
                        _0x196c05 = _0x3dabfb[1];
                    };
                }
            };
            window.destroyFillBots = function() {
                _0x586579.forEach(_0x4a6014 => {
                    _0x4a6014[0].close();
                });
                _0x586579 = [];
            };
            window.tryConnectBots = function() {
                for (let _0x55de38 = 0; _0x55de38 < (_0x4efb57.length < 3 ? 3 : 4); _0x55de38++) {
                    window.grecaptcha.execute("6LevKusUAAAAAAFknhlV8sPtXAk5Z5dGP5T2FYIZ", {
                        action: "homepage"
                    }).then(function(_0x5ce76c) {
                        _0x39916a(_0x5ce76c);
                    });
                }
            };
            window.destroyBots = function() {
                _0x4efb57.forEach(_0x3b8b51 => {
                    _0x3b8b51.closeSocket = true;
                });
                _0x4efb57 = [];
            };
            window.resBuild = function() {
                if (_0x207b6e.length) {
                    _0x207b6e.forEach(_0x23ed82 => {
                        _0x23ed82.breakObj = false;
                    });
                    _0x14dce3 = [];
                }
            };
            window.toggleBotsCircle = function() {
                _0x40ec6a.circle = !_0x40ec6a.circle;
            };
            window.toggleVisual = function() {
                _0x18564b.anotherVisual = !_0x18564b.anotherVisual;
                _0x207b6e.forEach(_0x2953df => {
                    if (_0x2953df.active) {
                        _0x2953df.dir = _0x2953df.lastDir;
                    }
                });
            };
            window.prepareUI = function(_0x4807c8) {
                _0x21a332();

                function _0x5f2561() {
                    _0x25379b.value = "";
                    _0x2b22da.style.display = "none";
                }
                _0x1b05b9.removeAllChildren(_0x415a32);
                for (let _0x5ddb66 = 0; _0x5ddb66 < _0x4e0368.weapons.length + _0x4e0368.list.length; ++_0x5ddb66) {
                    (function(_0x5884d2) {
                        _0x1b05b9.generateElement({
                            id: "actionBarItem" + _0x5884d2,
                            class: "actionBarItem",
                            style: "display:none",
                            onmouseout: function() {
                                _0x4ca310();
                            },
                            parent: _0x415a32
                        });
                    })(_0x5ddb66);
                }
                for (let _0x41b0e2 = 0; _0x41b0e2 < _0x4e0368.list.length + _0x4e0368.weapons.length; ++_0x41b0e2) {
                    (function(_0x4d743e) {
                        let _0x4923f9 = document.createElement("canvas");
                        _0x4923f9.width = _0x4923f9.height = 66;
                        let _0x577871 = _0x4923f9.getContext("2d");
                        _0x577871.translate(_0x4923f9.width / 2, _0x4923f9.height / 2);
                        _0x577871.imageSmoothingEnabled = false;
                        _0x577871.webkitImageSmoothingEnabled = false;
                        _0x577871.mozImageSmoothingEnabled = false;
                        if (_0x4e0368.weapons[_0x4d743e]) {
                            _0x577871.rotate(Math.PI / 4 + Math.PI);
                            let _0x28a22d = new Image();
                            _0x5b9560[_0x4e0368.weapons[_0x4d743e].src] = _0x28a22d;
                            _0x28a22d.onload = function() {
                                this.isLoaded = true;
                                let _0x29ceea = 1 / (this.height / this.width);
                                let _0x5151f5 = _0x4e0368.weapons[_0x4d743e].iPad || 1;
                                _0x577871.drawImage(this, -(_0x4923f9.width * _0x5151f5 * _0x18564b.iconPad * _0x29ceea) / 2, -(_0x4923f9.height * _0x5151f5 * _0x18564b.iconPad) / 2, _0x4923f9.width * _0x5151f5 * _0x29ceea * _0x18564b.iconPad, _0x4923f9.height * _0x5151f5 * _0x18564b.iconPad);
                                _0x577871.fillStyle = "rgba(0, 0, 70, 0.1)";
                                _0x577871.globalCompositeOperation = "source-atop";
                                _0x577871.fillRect(-_0x4923f9.width / 2, -_0x4923f9.height / 2, _0x4923f9.width, _0x4923f9.height);
                                getEl("actionBarItem" + _0x4d743e).style.backgroundImage = "url(" + _0x4923f9.toDataURL() + ")";
                            };
                            _0x28a22d.src = "./../img/weapons/" + _0x4e0368.weapons[_0x4d743e].src + ".png";
                            let _0x2b0e9e = getEl("actionBarItem" + _0x4d743e);
                            _0x2b0e9e.onmouseover = _0x1b05b9.checkTrusted(function() {
                                _0x4ca310(_0x4e0368.weapons[_0x4d743e], true);
                            });
                            _0x2b0e9e.onclick = _0x1b05b9.checkTrusted(function() {
                                _0x3789ff(_0x4807c8.weapons[_0x4e0368.weapons[_0x4d743e].type]);
                            });
                            _0x1b05b9.hookTouchEvents(_0x2b0e9e);
                        } else {
                            let _0x3502df = _0xba3cea(_0x4e0368.list[_0x4d743e - _0x4e0368.weapons.length], true);
                            let _0x4d5775 = Math.min(_0x4923f9.width - _0x18564b.iconPadding, _0x3502df.width);
                            _0x577871.globalAlpha = 1;
                            _0x577871.drawImage(_0x3502df, -_0x4d5775 / 2, -_0x4d5775 / 2, _0x4d5775, _0x4d5775);
                            _0x577871.fillStyle = "rgba(0, 0, 70, 0.1)";
                            _0x577871.globalCompositeOperation = "source-atop";
                            _0x577871.fillRect(-_0x4d5775 / 2, -_0x4d5775 / 2, _0x4d5775, _0x4d5775);
                            getEl("actionBarItem" + _0x4d743e).style.backgroundImage = "url(" + _0x4923f9.toDataURL() + ")";
                            let _0x168e00 = getEl("actionBarItem" + _0x4d743e);
                            _0x168e00.onmouseover = _0x1b05b9.checkTrusted(function() {
                                _0x4ca310(_0x4e0368.list[_0x4d743e - _0x4e0368.weapons.length]);
                            });
                            _0x168e00.onclick = _0x1b05b9.checkTrusted(function() {
                                _0x4ac07b(_0x4807c8.items[_0x4807c8.getItemType(_0x4d743e - _0x4e0368.weapons.length)]);
                            });
                            _0x1b05b9.hookTouchEvents(_0x168e00);
                        }
                    })(_0x41b0e2);
                }
            };
            window.profineTest = function(_0x54bcfe) {
                if (_0x54bcfe) {
                    let _0xfedb9 = "unknown";
                    let _0x428269 = _0x54bcfe + "";
                    _0x428269 = _0x428269.slice(0, _0x18564b.maxNameLength);
                    _0x428269 = _0x428269.replace(/[^\w:\(\)\/? -]+/gmi, " ");
                    _0x428269 = _0x428269.replace(/[^\x00-\x7F]/g, " ");
                    _0x428269 = _0x428269.trim();
                    let _0x29f92e = {
                        list: [],
                        exclude: [],
                        placeHolder: "*",
                        regex: {},
                        replaceRegex: {}
                    };
                    let _0x105d83 = false;
                    let _0x4f98d3 = _0x428269.toLowerCase().replace(/\s/g, "").replace(/1/g, "i").replace(/0/g, "o").replace(/5/g, "s");
                    for (let _0x1961d2 of _0x29f92e.list) {
                        if (_0x4f98d3.indexOf(_0x1961d2) != -1) {
                            _0x105d83 = true;
                            break;
                        }
                    }
                    if (_0x428269.length > 0 && !_0x105d83) {
                        _0xfedb9 = _0x428269;
                    }
                    return _0xfedb9;
                }
            };
            window.toggleNight();
        },
        webgl_test: () => {
            return;
            let _0x30a8f4 = document.createElement("canvas");
            _0x30a8f4.id = "WEBGL";
            _0x30a8f4.width = _0x30a8f4.height = 300;
            _0x30a8f4.style = "\n            position: relative;\n            bottom: 70%;\n            left: 70%;\n            pointer-events: none;\n            ";
            let _0x5734c8 = document.createElement("div");
            _0x5734c8.id = "faku";
            _0x5734c8.width = _0x5734c8.height = 300;
            _0x5734c8.style = "\n            position: relative;\n            bottom: 70%;\n            left: 70%;\n            pointer-events: none;\n            font-size: 20px;\n            ";
            _0x5734c8.innerHTML = "Webgl Test Rendering";
            let _0x57ab7d = _0x30a8f4.getContext("webgl");
            if (!_0x57ab7d) {
                alert("urbad");
                return;
            }
            document.body.append(_0x30a8f4);
            document.body.append(_0x5734c8);
            log(_0x57ab7d);
            _0x57ab7d.clearColor(0, 0, 0, 0.2);
            _0x57ab7d.clear(_0x57ab7d.COLOR_BUFFER_BIT);
            let _0x444a98 = _0x57ab7d.createBuffer();
            _0x57ab7d.bindBuffer(_0x57ab7d.ARRAY_BUFFER, _0x444a98);

            function _0x577c9e(_0x2d2f84, _0x53c9ca, _0x281ca8, _0x30da23) {
                let _0x20d67b = _0x57ab7d.createShader(_0x57ab7d.VERTEX_SHADER);
                _0x57ab7d.shaderSource(_0x20d67b, _0x2d2f84);
                _0x57ab7d.compileShader(_0x20d67b);
                _0x57ab7d.getShaderParameter(_0x20d67b, _0x57ab7d.COMPILE_STATUS);
                let _0x3429b5 = _0x57ab7d.createShader(_0x57ab7d.FRAGMENT_SHADER);
                _0x57ab7d.shaderSource(_0x3429b5, _0x53c9ca);
                _0x57ab7d.compileShader(_0x3429b5);
                _0x57ab7d.getShaderParameter(_0x3429b5, _0x57ab7d.COMPILE_STATUS);
                let _0xd565c0 = _0x57ab7d.createProgram();
                _0x57ab7d.attachShader(_0xd565c0, _0x20d67b);
                _0x57ab7d.attachShader(_0xd565c0, _0x3429b5);
                _0x57ab7d.linkProgram(_0xd565c0);
                _0x57ab7d.getProgramParameter(_0xd565c0, _0x57ab7d.LINK_STATUS);
                _0x57ab7d.useProgram(_0xd565c0);
                let _0x30ca5c = _0x57ab7d.getAttribLocation(_0xd565c0, "vertex");
                _0x57ab7d.enableVertexAttribArray(_0x30ca5c);
                _0x57ab7d.vertexAttribPointer(_0x30ca5c, 2, _0x57ab7d.FLOAT, false, 0, 0);
                let _0x3cba95 = _0x281ca8.length / 2;
                _0x57ab7d.bufferData(_0x57ab7d.ARRAY_BUFFER, new Float32Array(_0x281ca8), _0x57ab7d.DYNAMIC_DRAW);
                _0x57ab7d.drawArrays(_0x30da23, 0, _0x3cba95);
            }

            function _0x3dcba3(_0x46282a) {
                return _0x46282a.slice(1).match(/.{1,2}/g).map(_0x3bdef4 => parseInt(_0x3bdef4, 16));
            }

            function _0x36bfbc(_0x51f69d, _0x4ff65e, _0x341e67) {
                return [_0x51f69d / 255, _0x4ff65e / 255, _0x341e67 / 255].join(", ");
            }
            let _0x309562 = 50;
            for (let _0x4c904d = 0; _0x4c904d < _0x309562; _0x4c904d++) {
                let _0x4d1e08 = Math.PI * (_0x4c904d / (_0x309562 / 2));
                _0x577c9e("\n                precision mediump float;\n                attribute vec2 vertex;\n                void main(void) {\n                    gl_Position = vec4(vertex, 0, 1);\n                }\n                ", "\n                precision mediump float;\n                void main(void) {\n                    gl_FragColor = vec4(" + _0x36bfbc(..._0x3dcba3("#cc5151")) + ", 1);\n                }\n                ", [0 + Math.cos(_0x4d1e08) * 0.5, 0 + Math.sin(_0x4d1e08) * 0.5, 0, 0], _0x57ab7d.LINE_LOOP);
            }
        }
    };
    if (_0x37d2b1) {
        for (let _0x182e31 in _0x37d2b1) {
            let _0x297d7b = _0x37d2b1[_0x182e31];
            if (typeof _0x297d7b === "function") {
                _0x297d7b();
            }
        }
        window.enableHack = function() {
            if (!anty) {
                anty = true;
                _0x37d2b1.main();
            }
        };
    }
})(1);